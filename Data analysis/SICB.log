
> #Data Analysis: GRI experiment
> # Author code: Denise Laroze
> # Co-authors paper: David Hugh-Jones and Arndt Leininger
> # 27/Feb/2020
> 
> 
> #setwd("[address your folder]")
> 
> #bd<-"[address your folder]"
> 
> 
> #setwd("C:/Users/dalaro/Dropbox/group ID in legislative bargaining/Data Analysis GRI")
> setwd("C:/Users/Denise Laroze/Dropbox/group ID in legislative bargaining/Data Analysis GRI")

> #Baseline directory for saving plots and tables
> bd<-"C:/Users/Denise Laroze/Dropbox/group ID in legislative bargaining/Social Identity 2019-20/Data analysis/"

> #bd<-"C:/Users/André Laroze/Dropbox/group ID in legislative bargaining/Presentations/"
>  
> library("car")

> library("ggplot2")

> library("mgcv")

> library("texreg")

> library(plyr)

> library(plm)

> #library(flexmix)
> library(Hmisc)

> library(censReg)

> library(ineq)

> library(lmtest)

> library(stringr)

> library(nnet) 

> library(arm)

> library(effects)

> library(psych)

> library(rms)

> library("multcomp")

> library(xtable)

> library(pglm) 

> library(multiwayvcov)

> library(Rmisc)

> #Merging datasets
> #Corrections to data. In the code used in the Control sessions there was an error: the ideo1-10 scores were not registered
> #correctly in the dataset. This did not affect any aspect of the experimental trial (as the data is only recorded for control
> #purposes). For this reason, the data for the ideo1-10 scores are errased from the data frame. 
> #If necesarry to use the data for statistical analysis, the correct data can be surched for by looking into how the original files were
> #created)
> 
>  #mydf1<-read.csv("GRIexpt-2014-12-02-114543.csv")
>  #for (i in 1:10) mydf1[[paste0("ideo", i)]] <- NA
>  #mydf2<-read.csv("GRIexpt-2014-12-02-145238.csv")
>  #for (i in 1:10) mydf2[[paste0("ideo", i)]] <- NA
>  #mydf3<-read.csv("GRIexpt-2014-12-03-105420.csv")
>  #mydf4<-read.csv("GRIexpt-2014-12-03-125727.csv")
>  #mydf5<-read.csv("GRIexpt-2014-12-03-142507.csv")
>  #mydf6<-read.csv("GRIexpt-2014-12-03-155742.csv")
>  #mydf7<-read.csv("GRIexpt-2015-02-25-123025.csv")
>  #mydf8<-read.csv("GRIexpt-2015-02-25-102407.csv")
>  #mydf9<-read.csv("GRIexpt-2015-02-25-153453.csv")
>  #mydf10<-read.csv("GRIexpt-2015-02-25-141544.csv")
>  #mydf11<-read.csv("GRIexpt-2015-02-24-122234.csv")
>  #mydf12<-read.csv("GRIexpt-2015-02-24-102521.csv")
>  #mydf13<-read.csv("GRIexpt-2015-02-24-154255.csv")
>  #mydf14<-read.csv("GRIexpt-2015-02-24-140532.csv")
>  
>  
> #mydf<-rbind(mydf1, mydf2, mydf3, mydf4, mydf5, mydf6, mydf7, mydf8, mydf9, mydf10, mydf11, mydf12, mydf13, mydf14)
> #write.csv(mydf,file="GRI_Dec2014-Feb2015_sessions.csv",row.names=F)
> #rm(mydf1, mydf2, mydf3, mydf4, mydf5, mydf6)
> 
>  
> mydf<-read.csv("GRI_Dec2014-Feb2015_sessions.csv") 

> ##########################
> ###############   Data 
> ##########################
> 
> 
> # Individual id number 
> mydf$uid<- paste(mydf$session, mydf$id,  sep=".")

> #unique merging group, a.k.a unique observation
> mydf$umg<-paste(mydf$session, mydf$mg,  sep=".")

>  ############### PREPARATION OF DATAFRAME FOR DATA ANALYSIS
> 
> 
> 
> ##### Differences Max and Min offers to other subjects in the group
> id<-rep(NA, nrow(mydf))

> others<-list(rep(NA, 2))

> #Identifying who is closer in gender, race and ideology to the proposer, and who the proposer is offering more to.
> for (i in 1:nrow(mydf)){
+   id[i]<-mydf$group_id[i]
+   others <- setdiff(1:3, id[i])
+   var.ideo<-paste0("prop", others)
+   
+   mydf$max_other_prop[i]<-if(!is.na(mydf$prop1[i])) apply(mydf[i,var.ideo], 1, max, na.rm=TRUE) else NA
+   mydf$min_other_prop[i]<-if(!is.na(mydf$prop1[i])) apply(mydf[i,var.ideo], 1, min, na.rm=TRUE) else NA
+ } 

> rm(others, id)

>  #Difference between Max and min offers                                              
> mydf[, "diff_other_prop"] <- (mydf$max_other_prop-mydf$min_other_prop)

> #Offers to other participants
> id<-rep(NA, nrow(mydf))

> prop.A<-rep(NA, nrow(mydf))

> prop.B<-rep(NA, nrow(mydf))

> others<-list(rep(NA, 2))

> #Identifying who is closer in ideology to the proposer, and who the proposer is offering more to.
> for (i in 1:nrow(mydf)){
+   id[i]<-mydf$group_id[i]
+   others <- setdiff(1:3, id[i])
+   mydf$prop.A[i]<-mydf[[paste0("prop", others[1], sep="")]][[i]]
+   mydf$prop.B[i]<-mydf[[paste0("prop", others[2], sep="")]][[i]]
+   
+ }

> rm(id, others)

> # Identifying proposals where one of the other two people is allocated zero
> #col.name1<-which( colnames(mydf)=="prop.A" )
> #col.name2<-which( colnames(mydf)=="prop.B" )
> 
>  for(i in 1:nrow(mydf)){
+   prop.v<-mydf[i, c("prop.A", "prop.B")] 
+   mydf$zero.prop[i]<-ifelse(is.na(mydf$prop1[i]), NA, ifelse(0 %in% prop.v, 1 , 0))
+   }

>  #check<-mydf[ c("group_id", "uid", "prop1", "prop2", "prop3", "zero.prop") ]
> rm(prop.v)

> ######### Offers in Dictator Games
> #How much each participant "gave" to other players in total
> mydf[, "generosity"] <-  ifelse(mydf$group_id==1, mydf$pd1-3, ifelse (mydf$group_id==2, mydf$pd2-3 , mydf$pd3-3))

> mydf$generosity<-abs(mydf$generosity)

> # To fix the -Inf values
> is.na(mydf) <- do.call(cbind,lapply(mydf, is.infinite))

> #check<-mydf[ c("group_id", "uid", "prop1", "prop2", "prop3", "partner.id", "other.id", "x") ]
>  
> ### Code for identifying group types 
>  mydf$ugroup<- paste(mydf$session, mydf$group,  sep=".") 

>  #Simplification of race categories
>  mydf$race2<-as.character(mydf$race)

>  mydf$race2[mydf$race2 == "brown" ]<-"other"

>  mydf$race2[mydf$race2 == "black" ]<-"other"

>  tmp<-by(mydf, interaction(mydf$ugroup, mydf$period),  function(x) {
+   for (i in 1:nrow(x))
+   {
+     #Characteristics of the groups
+     x$g.gender[i]<-sum(str_count(x$gender, "female"))
+     x$g.race[i]<-sum(str_count(x$race, "white"))
+     sp.v<-x$sp 
+     x$g.sp.sd[i] <- sd(sp.v, na.rm = TRUE)
+     
+     
+     #proposer ID
+     prop_id <- as.numeric(sub("prop_", "", x$offer[1]))
+     x$prop_id<-prop_id
+     x$prop.sp<-x$sp[x$group_id == x$prop_id[i]]
+     x$prop.ideo.diff[i]<- ifelse(is.na(x$prop_id[i]), NA, abs(x$sp[i] - x$sp[x$group_id == x$prop_id[i]]))
+     x$prop.same.gender[i]<-ifelse(is.na(x$prop_id[i]), NA, ifelse(x$gender[i]==x$gender[x$group_id == x$prop_id[i]], 1, 0))
+     x$prop.same.race[i]<-ifelse(is.na(x$prop_id[i]), NA, ifelse(x$race2[i]==x$race2[x$group_id == x$prop_id[i]], 1, 0))
+     x$prop.same.race.all[i]<-ifelse(is.na(x$prop_id[i]), NA, ifelse(x$race[i]==x$race[x$group_id == x$prop_id[i]], 1, 0))
+     
+     #Offers made to each participant every round
+     prop_p <- numeric(0)
+     for (j in 1:3) prop_p[j] <- which(x$group_id==j)
+     
+     ##Identifying how much was offered to each group member each round
+     roni <- as.matrix(t(x[prop_p, paste0("prop", 1:3)]))
+     x$p.offered <- as.numeric(roni[, prop_id])
+    
+     ##Identifies me for exclusion
+     for (w in 1:3) x$prop_dummy[w]<- ifelse(is.na(x$prop_id[w]), NA, ifelse(x$group_id[w]==x$prop_id[w], 1, 0))
+     x$sd.p.offered<-sd(x$p.offered)
+     
+   }
+   
+   return(x) 
+ })

> mydf <- do.call("rbind", tmp)

> mydf<-mydf[order(mydf$session, mydf$period,mydf$group, mydf$group_id),]

> rm(tmp)

>  tmp<-by(mydf, interaction(mydf$ugroup, mydf$period),  function(x) {
+    for (i in 1:nrow(x))
+    { #Characteristics of the "receivers" 
+      x$go1[i]<-as.character(x[1,"gender"])
+      x$go2[i]<-as.character(x[2,"gender"])
+      x$go3[i]<-as.character(x[3,"gender"])
+      x$ro1[i]<-as.character(x[1,"race"])
+      x$ro2[i]<-as.character(x[2,"race"])
+      x$ro3[i]<-as.character(x[3,"race"])
+      x$spo1[i]<-as.character(x[1,"sp"])
+      x$spo2[i]<-as.character(x[2,"sp"])
+      x$spo3[i]<-as.character(x[3,"sp"])
+     }
+    return(x) 
+  })

>  mydf <- do.call("rbind", tmp)

>  mydf<-mydf[order(mydf$session, mydf$period,mydf$group, mydf$group_id),]

>  rm(tmp) 

> #Corrections to make sure no there are no problems in the data frame
>  
>  mydf$p.gender[is.na(mydf$diff_other_prop)] <-NA

>  mydf$p.race[is.na(mydf$diff_other_prop)] <-NA

> #Checks
> #r1<-mydf[mydf$round==1,]
> #check<-mydf[ c("group_id", "gender", "prop2", "prop3","offer",  "p.offered" ) ]
> #rm(r1)
> 
> ###########
> #Decision in Dictator Game added to all corresponding subj cells (needed for data analysis)
> maxp<-max(mydf$userperiod)

> mydf<- merge(mydf, mydf[mydf$userperiod == maxp, c("uid","pd1", "pd2", "pd3", "generosity")], by.x = "uid", by.y = "uid", suffixes = c("", "all")) 

> mydf<-mydf[order(mydf$session, mydf$period,mydf$mg, mydf$group_id),]

> mydf<-mydf[order(mydf$session, mydf$period,mydf$group, mydf$group_id),]

>  write.csv(mydf,file="GRI_mydf.csv",row.names=F)

> ######################## 
> ####################################################################### 
> ############# Data Analysis
> ####################################################################### 
> ########################
> 
>  mydf<-read.csv("GRI_mydf.csv")  

> ####################################
> ##########Subsetting data frames
> #################################### 
>  
> ps<-cbind(mydf$prop1, mydf$prop2, mydf$prop3)

> mydf<-transform(mydf, SD.props=apply(ps,1, sd, na.rm = TRUE))

> rm(ps)

> mydf$mg_id <- as.numeric(mydf$umg)

> ######## Subsetting data
> 
> 
> #Subsets of data
> mydf$umg<-paste(mydf$session, mydf$mg,  sep=".")

> #Reshaping long, first round of the data frame
> vars <- c(outer(c("prop", "go", "ro", "spo"), 1:3, FUN=paste0)) 

> mydf.l <- reshape(mydf[,c("treatment" , "id", "userperiod", "round", "uid" ,  "umg", "mg_id", "mg", "group", "ugroup",
+                           "group_id", "gender","race" , "race2", "g.gender", "g.race", "g.sp.sd" , "sp", 
+                           "generosityall", "vote", "p.offered", "zero.prop", vars)], 
+                   idvar=c("treatment" , "id", "userperiod", "round", "mg", "uid" , "umg", "mg_id", "group", "ugroup", 
+                           "group_id", "gender", "race" , "race2",  "g.gender", "g.race", "g.sp.sd" , "sp",
+                           "generosityall", "vote", "p.offered", "zero.prop" ), timevar="recipient",
+                   varying=list(prop=paste0("prop", 1:3), go1=paste0("go", 1:3), ro=paste0("ro", 1:3), spo=paste0("spo", 1:3)), 
+                   direction="long", new.row.names=1:(nrow(mydf)*3))

> for (i in 1:nrow(mydf.l)){
+   mydf.l$me[i]<- if (mydf.l$group_id[i]==mydf.l$recipient[i]) 1 else 0
+ }

> ### Creating independent variables of interest in long data frame
> 
> #Simplification of race categories
> mydf.l$ro2<- as.character(mydf.l$ro1)

> mydf.l$ro2[mydf.l$ro2 == "brown" ]<-"other"

> mydf.l$ro2[mydf.l$ro2 == "black" ]<-"other"

> #Ideological Distance of the proposer to the "other" group member
> pair<-list(rep(NA, 3))

> not_in_pair<-c(NA)

> mydf.l$go.o<-NA

> mydf.l$ro.o<-NA

> mydf.l$sp.o<-NA

> #mydf<-mydf[order(mydf$session, mydf$period,mydf$group, mydf$group_id),]
> #check<-mydf.l[, c("group_id", "spo1", "sp.o", "go1", "ro2")]
> #View(check)
> tmp<-by(mydf.l, interaction(mydf.l$ugroup, mydf.l$userperiod, mydf.l$group_id),  function(x) {
+   for (i in 1:nrow(x))
+   {if(x$recipient[i] != x$group_id[i]){
+     pair[i]<-list(c(x$group_id[i], x$recipient[i] ))
+     not_in_pair[i] <- setdiff(1:3, unlist(pair[i]))
+     n<-not_in_pair[i]
+     
+     # Characteristics of the 3rd group member
+     x$sp.o[i]<-x$spo1[n]
+     x$go.o[i]<-as.character(x$go1[n])
+     x$ro.o[i]<-x$ro2[n]
+     x$ro.o.all[i]<-as.character(x$ro1[n])
+     
+   } else {
+     x$sp.o[i]<-NA
+     x$go.o[i]<-NA
+     x$ro.o[i]<-NA
+     x$ro.o.all[i]<-NA
+   }
+   }
+   return(x) 
+ })

> mydf.l <- do.call("rbind", tmp)

> mydf.l <-mydf.l[order(mydf.l$userperiod, mydf.l$umg,  mydf.l$ugroup, mydf.l$group_id ),]

> rm(tmp)

> #Difference in Difference, distance with the receiver and other. 
> mydf.l$did.sp<-NA

> mydf.l$did.sp<-with(mydf.l, abs(abs(sp - spo1) - abs(sp - sp.o)) )

> #Ideological distance
> mydf.l$spo1<-as.numeric(mydf.l$spo1)

> mydf.l$ideo.diff<- abs(mydf.l$sp-mydf.l$spo1)

> mydf.l$ideo.diff.o<-abs(mydf.l$sp - mydf.l$sp.o)

> #same race and gender categories for treatment
> mydf.l$same.g <- ifelse(mydf.l$gender == mydf.l$go1, 1, 0)

> mydf.l$same.r <- ifelse(mydf.l$race2 == mydf.l$ro2, 1, 0)

> mydf.l$same.r.all<- ifelse(mydf.l$race == mydf.l$ro1, 1, 0)

> mydf.l$same.g.o<-ifelse(mydf.l$gender==mydf.l$go.o, 1, 0)

> mydf.l$same.r.o<-ifelse(mydf.l$race2==mydf.l$ro.o, 1, 0)

> mydf.l$same.r.o.all<- ifelse(mydf.l$race==mydf.l$ro.o.all, 1, 0)

> #check<-mydf.l[, c("userperiod", "group_id", "recipient", "sp", "spo1", "sp.o", "gender", "go1", "go.o", "same.g.o" ,"race2", "ro2", "ro.o", "same.r.o")]
> #View(check)
> 
> #Time variable long dataset, for panel robustness tests
> mydf.l$plm.time<- paste(mydf.l$userperiod, mydf.l$recipient,  sep=".")

> #########Separating treatment and baseline dataframes 
> # differences in the amounts given to each of the other part in the first round of negotiation after period 2
> #(valid for comparison purposed)
> base.dfl<- subset(mydf.l, treatment== "Control")

> base.df<-subset(mydf, treatment== "Control")

> treat.dfl<- subset(mydf.l, treatment== "GRI")

> treat.df<- subset(mydf, treatment== "GRI")

> #Exclusion of proposer for analysis of votes
> treat.df.o<-subset(treat.df, prop_dummy==0 )

> #Data frame for offers to the other 2 participants
> treat.dfl.o<-subset(treat.dfl, me== 0)

> base.dfl.o<-subset(base.dfl, me== 0)

> mydf.l.o<-subset(mydf.l, me== 0)

> #identifying which other group member was allocated zero
> treat.dfl.o$non.zero<-0

> treat.dfl.o$non.zero[treat.dfl.o$prop1 > 0 ] <- 1

> treat.dfl.o$non.zero[is.na(treat.dfl.o$prop1)] <- NA

> ########## Subsets of data for round 1
> treat.r1.df<-subset(treat.df, round==1)

> treat.r1.dfl<-subset(treat.dfl, round==1)

> treat.r1.df.o<-subset(treat.df.o, round==1)

> treat.r1.dfl.o<-subset(treat.dfl.o, round==1)

> base.r1.df.o<-subset(mydf, treatment=="Control" & round==1 & prop_dummy==0)

> base.r1.dfl.o<-subset(base.dfl.o, round==1)

> ##########################################
> ###########################  General Graphics
> ##########################################
> 
> 
> library(MASS)

> # Joint Kernall Density
> h1 <- hist(treat.r1.df$prop.A, freq=F)

> h2 <- hist(treat.r1.df$prop.B, freq=F)

> #top <- max(h1$counts, h2$counts)
> #k <- kde2d(df$x, df$y, n=25)
> 
> 
> 
> 
> 
> 
>  
>  #### Histograms for variables of interest
>   
> #######Gender
> # png(filename=paste0(bd, "hist_gender.png", sep=""))
>  histogram(treat.r1.df$gender, col="gray", xlab ="Gender")

> # dev.off()
> 
>  race3<-factor(treat.r1.dfl$race2)

>  #Race
>  png(filename=paste0(bd, "hist_race.png", sep=""))

>  histogram(race3, col="gray", xlab="Race") 

>  dev.off() 
RStudioGD 
        2 

> # latex(summary(treat.r1.df$race), caption="Number of subjects per race category", file=paste("race", ".tex", sep="") )
>  
> ###### Histogram Offers
>  png(filename=paste0(bd, "offers.png", sep=""))

>  hist(treat.r1.dfl.o$prop1, freq=F, col="gray",bar.width=0.8, main="", xlim=c(0,17), xlab="Pounds Offered" )                     # centered at 4

>  dev.off()
RStudioGD 
        2 

>  props<-hist(treat.r1.dfl.o$prop1, freq=F, col="blue", xaxt="n", main="", xlab="pounds") 

>  + axis(side=1,at=props$mids,labels=c(0:12))
 [1]  0.5  1.5  2.5  3.5  4.5  5.5  6.5  7.5  8.5  9.5 10.5 11.5 12.5

>  #ggsave("C:/Users/Andr? Laroze/Dropbox/group ID in legislative bargaining/Presentations/hist_props_others.png")
>  
>  
>  #### Dataset of offers towards other people
>  
>  # Plots Gender in different circumstances
>  pg <- ggplot(treat.r1.dfl.o, aes(gender, prop1)) 

>  pg <- pg + geom_boxplot(aes(fill = factor(same.g)))

>  pg <- pg + xlab("Proposer's Gender") + ylab("pounds") + ggtitle("Offers")

>  pg <- pg + scale_fill_discrete(name="Same Gender", labels=c("Different", "Same"))

>  pg <- pg + facet_wrap( ~ g.gender) + theme_bw()

>  pg

>  ggsave(paste0(bd, "prop_gender_gt.png", sep=""))
Saving 3.15 x 4.6 in image

>  #lmpg<-lm(prop1~go1*factor(g.gender)+gender, data= treat.r1.dfl.o)
>  #summary(lmpg)
>  #lmpg.cl<-cl(lmpg, treat.r1.dfl.o$umg)
>  
>  
>  #library(effects) # for plotting interaction terms, but it's very basic
>  #plot(effect(term="go1*g.gender",mod=lmpg,default.levels=20),multiline=TRUE)
>  
>   
>  # Plots Race in different circumstances
>  pr <- ggplot(treat.r1.dfl.o, aes(race2, prop1)) 

>  pr <- pr + geom_boxplot(aes(fill = factor(same.r)))

>  pr <- pr + xlab("Proposer's Race") + ylab("pounds") + ggtitle("Offers") 

>  pr <- pr + scale_fill_discrete(name="Same Race", labels=c("Different", "Same"))

>  pr <- pr + facet_wrap( ~ g.race) + theme_bw()

>  pr

>  ggsave(paste0(bd, "prop_race_gt.png", sep=""))
Saving 3.15 x 4.6 in image

>  #lmpr<-lm(prop1~ro2*factor(g.race)+race2, data= treat.r1.dfl.o)
>  #summary(lmpr) 
>  #lmpr.cl<-cl(lmpr, treat.r1.dfl.o$umg)
>  
>  #Ideological distance by N? female group members
>  qplot(ideo.diff, prop1, data = treat.r1.dfl.o, geom = c("point", "smooth"),
+        method="lm", shape=factor(g.gender), colour=factor(g.gender), ylab="pounds",
+        xlab="Absolute value ideological distance" ,main="Offers to other participants ",  
+        na.rm=TRUE) + facet_grid(g.gender~.)
Warning: Ignoring unknown parameters: method

>  #Ideological distance by N? white group members
>  qplot(ideo.diff, prop1, data = treat.r1.dfl.o, geom = c("point", "smooth"),
+        method="lm", shape=factor(g.race), colour=factor(g.race), ylab="pounds",
+        xlab="Absolute value ideological distance" ,main="Offers to other participants ",  
+        na.rm=TRUE) + facet_grid(g.race~.)
Warning: Ignoring unknown parameters: method

>  ######## Tables
>  
>  #### mean offers to participants, if man in 1 female 2 male group
> 
>  #Table male subjects
>  type1.1<- treat.r1.dfl.o$gender=="male" & treat.r1.dfl.o$go=="female" & treat.r1.dfl.o$g.gender==1 

>  type2.1<- treat.r1.dfl.o$gender=="male" & treat.r1.dfl.o$go=="male" & treat.r1.dfl.o$g.gender==1 

>  type3.1<- treat.r1.dfl.o$gender=="male" & treat.r1.dfl.o$go=="female" & treat.r1.dfl.o$g.gender==2 

>  type4.1<- treat.r1.dfl.o$gender=="male" & treat.r1.dfl.o$go=="male" & treat.r1.dfl.o$g.gender==2 

>  #Table Gender Interactions
>  type1.2<- treat.r1.dfl.o$gender=="female" & treat.r1.dfl.o$go=="female" & treat.r1.dfl.o$g.gender==1 

>  type2.2<- treat.r1.dfl.o$gender=="female" & treat.r1.dfl.o$go=="male" & treat.r1.dfl.o$g.gender==1 

>  type3.2<- treat.r1.dfl.o$gender=="female" & treat.r1.dfl.o$go=="female" & treat.r1.dfl.o$g.gender==2 

>  type4.2<- treat.r1.dfl.o$gender=="female" & treat.r1.dfl.o$go=="male" & treat.r1.dfl.o$g.gender==2 

>  t1.1<-summary(treat.r1.dfl.o$prop1[type1.1])

>  t2.1<-summary(treat.r1.dfl.o$prop1[type2.1])

>  t3.1<-summary(treat.r1.dfl.o$prop1[type3.1])

>  t4.1<-summary(treat.r1.dfl.o$prop1[type4.1])

>  t1.2<-summary(treat.r1.dfl.o$prop1[type1.2])

>  t2.2<-summary(treat.r1.dfl.o$prop1[type2.2])

>  t3.2<-summary(treat.r1.dfl.o$prop1[type3.2])

>  t4.2<-summary(treat.r1.dfl.o$prop1[type4.2])

>  table.lags1 <- as.table(cbind(t1.1[4], t2.1[4], t1.2[4], t2.2[4]))

>  table.lags2 <- as.table(cbind(t3.1[4], t4.1[4], t3.2[4], t4.2[4]))

>  table.lags <- as.table(rbind(table.lags1, table.lags2))

>  colnames(table.lags) <- c("MF", "MM", "FF", "FM")

>  rownames(table.lags) <- c("1F 2M", "2F 1M")

>  table.lags
      MF MM FF FM
1F 2M            
2F 1M            

> ####################################### 
> ### Ideology and distance  -  Figure 2
> #######################################
>  
>  png(filename=paste0(bd, "hist_sp.png"))

>  discrete.histogram(treat.r1.dfl$sp, prob.col="gray",bar.width=0.8 , xlab="Ideological Self-Placement", freq=F, main="", cex.lab=1.5)

>  dev.off()
RStudioGD 
        2 

>  png(filename=paste0(bd, "hist_ideo_diff.png"))

>  discrete.histogram(treat.r1.dfl.o$ideo.diff, prob.col="gray",bar.width=0.8 , xlab="Absolute value ideological distance", freq=F, main="", cex.lab=1.5)

>  dev.off()
RStudioGD 
        2 

> #############
> #### Figure 3 - left
> ############## 
>  prop.A<-treat.r1.df$prop.A

>  prop.B<-treat.r1.df$prop.B  

>  #Graph of the offers to other participants
>  h.offers<-data.matrix(cbind(prop.A, prop.B))

>  require(ggplot2)

>  p <- ggplot(treat.r1.df, aes(max_other_prop, min_other_prop)) + scale_fill_gradient(low="grey90", high="black")

>  p <- p + stat_bin2d(bins = 20) + xlab("Larger offer") +  ylab("Smaller offer") + xlim(c(0,15)) + ylim(c(0,15)) + theme_bw()

>  p <-p + geom_text(aes(4, 0.2, label="NE"), colour="blue") +  theme(text=element_text(size=24))

>  p

>  ggsave(filename=paste0(bd, "offers.png", sep=""),  width=9, height=6)

> ###################### 
> #### Figure 3 - right
> ######################## 
>  #Descriptive statistics
>  
>  treat.r1.df$votetable<-treat.r1.df$vote_result

>  treat.r1.df$votetable[treat.r1.df$votetable==0]<-"Rejected"

>  treat.r1.df$votetable[treat.r1.df$votetable==1]<-"Accepted"

>  treat.r1.df$votetable<-as.factor(treat.r1.df$votetable)

>  votetable<-with(treat.r1.df,table(votetable, useNA = "no"))

>  votetable<-prop.table(votetable)

>  tablenames<-c("Accepted", "Rejected")

>  print(votetable[c(1,3)])
votetable
  Accepted   Rejected 
0.92333333 0.07666667 

>  png(paste0(bd, "votes_model.png"))

>  barplot(votetable[c(1,3)], main="",
+          xlab="Vote Result", col="grey", 
+          ylab="Ratio", ylim=0:1, cex.names=1.5, cex.axis=1.5)

>  dev.off()
RStudioGD 
        2 

>  ### Treatment sessions vs control
> # votetable<-with(mydf.r1,table(vote, Treatment = treatment, useNA = "no"))
> # votetable<-prop.table(votetable,2)
> # print(votetable)
>  #Latex
> # votetable<-xtable(votetable)
> # print(votetable,floating=FALSE)
>  
>   
> ####################################################################
> ######################### Empirical Analysis
> #################################################################### 
> 
> ###Analysis on round 1 of the 10 periods. 
> 
> 
> ########################## 
> #Descriptive statistics
> #########################
>  with(treat.r1.dfl, table(go1, g.gender))
        g.gender
go1         0    1    2    3
  female    0  369 1608 1593
  male    288  738  804    0

>  cor(treat.r1.df$generosityall, treat.r1.df$sp)
[1] -0.2167555

>  cor(as.numeric(treat.r1.df$gender), treat.r1.df$sp)
[1] 0.08873674

>  cor(as.numeric(treat.r1.df$race), treat.r1.df$sp)
[1] -0.07066373

> ############################################ 
> ### Manuscript Models of interest - Table 1
> ############################################
>  
>   #DV: Offer  - Definition 1 same group
>  lm.M1<-ols(prop1~ideo.diff + same.g + same.r, data=treat.r1.dfl.o, y=T, x=T)

>  lm.M1.cl<-robcov(lm.M1, treat.r1.dfl.o$umg)

>  lm.M1.cl
Linear Regression Model
 
 ols(formula = prop1 ~ ideo.diff + same.g + same.r, data = treat.r1.dfl.o, 
     x = T, y = T)
 
                                 Model Likelihood     Discrimination    
                                    Ratio Test           Indexes        
 Obs                    3600     LR chi2     37.06    R2       0.010    
 sigma                2.2659     d.f.            3    R2 adj   0.009    
 d.f.                   3596     Pr(> chi2) 0.0000    g        0.258    
 Cluster ontreat.r1.dfl.o$umg                                           
 Clusters                 30                                            
 
 Residuals
 
     Min      1Q  Median      3Q     Max 
 -5.2280 -0.6332  0.5656  1.0852  8.6484 
 
 
           Coef    S.E.   t     Pr(>|t|)
 Intercept  5.1292 0.1485 34.54 <0.0001 
 ideo.diff -0.1296 0.0405 -3.20 0.0014  
 same.g     0.0988 0.1348  0.73 0.4637  
 same.r    -0.0948 0.1180 -0.80 0.4218  
 

>  #DV: Offer  - Definition 1 with controles
>  lm.M2<-ols(prop1~ideo.diff + ideo.diff.o + same.g + + same.g.o +same.r+ same.g.o + same.r.o, data=treat.r1.dfl.o, y=T, x=T)

>  lm.M2.cl<-robcov(lm.M2, treat.r1.dfl.o$umg)

>  lm.M2.cl
Linear Regression Model
 
 ols(formula = prop1 ~ ideo.diff + ideo.diff.o + same.g + +same.g.o + 
     same.r + same.g.o + same.r.o, data = treat.r1.dfl.o, x = T, 
     y = T)
 
                                 Model Likelihood     Discrimination    
                                    Ratio Test           Indexes        
 Obs                    3600     LR chi2     46.69    R2       0.013    
 sigma                2.2639     d.f.            6    R2 adj   0.011    
 d.f.                   3593     Pr(> chi2) 0.0000    g        0.285    
 Cluster ontreat.r1.dfl.o$umg                                           
 Clusters                 30                                            
 
 Residuals
 
     Min      1Q  Median      3Q     Max 
 -5.3648 -0.6070  0.5501  1.0790  8.4607 
 
 
             Coef    S.E.   t     Pr(>|t|)
 Intercept    5.1048 0.1533 33.29 <0.0001 
 ideo.diff   -0.1571 0.0479 -3.28 0.0010  
 ideo.diff.o  0.0629 0.0287  2.19 0.0285  
 same.g       0.1593 0.1418  1.12 0.2615  
 same.g.o    -0.1320 0.1363 -0.97 0.3330  
 same.r      -0.1447 0.1258 -1.15 0.2501  
 same.r.o     0.1196 0.0953  1.25 0.2096  
 

>  lm.M3<-ols(prop1~ideo.diff + same.g+same.r+ ideo.diff.o + same.g.o + same.r.o + sp + gender + race2 , data=treat.r1.dfl.o, y=T, x=T)

>  lm.M3.cl<-robcov(lm.M3, treat.r1.dfl.o$umg)

>  lm.M3.cl
Linear Regression Model
 
 ols(formula = prop1 ~ ideo.diff + same.g + same.r + ideo.diff.o + 
     same.g.o + same.r.o + sp + gender + race2, data = treat.r1.dfl.o, 
     x = T, y = T)
 
                                 Model Likelihood     Discrimination    
                                    Ratio Test           Indexes        
 Obs                    3600     LR chi2     52.92    R2       0.015    
 sigma                2.2628     d.f.            9    R2 adj   0.012    
 d.f.                   3590     Pr(> chi2) 0.0000    g        0.306    
 Cluster ontreat.r1.dfl.o$umg                                           
 Clusters                 30                                            
 
 Residuals
 
     Min      1Q  Median      3Q     Max 
 -5.4498 -0.6398  0.5457  1.0790  8.2164 
 
 
             Coef    S.E.   t     Pr(>|t|)
 Intercept    5.2910 0.1714 30.87 <0.0001 
 ideo.diff   -0.1572 0.0482 -3.26 0.0011  
 same.g       0.1561 0.1344  1.16 0.2457  
 same.r      -0.1518 0.1254 -1.21 0.2263  
 ideo.diff.o  0.0645 0.0286  2.26 0.0242  
 same.g.o    -0.1213 0.1228 -0.99 0.3231  
 same.r.o     0.1050 0.0896  1.17 0.2412  
 sp          -0.0456 0.0202 -2.26 0.0239  
 gender=male -0.0089 0.1132 -0.08 0.9377  
 race2=white  0.0573 0.0823  0.70 0.4861  
 

>  screenreg(list(lm.M1.cl, lm.M2.cl, lm.M3.cl))

==================================================
             Model 1      Model 2      Model 3    
--------------------------------------------------
Intercept       5.13 ***     5.10 ***     5.29 ***
               (0.15)       (0.15)       (0.17)   
ideo.diff      -0.13 **     -0.16 **     -0.16 ** 
               (0.04)       (0.05)       (0.05)   
same.g          0.10         0.16         0.16    
               (0.13)       (0.14)       (0.13)   
same.r         -0.09        -0.14        -0.15    
               (0.12)       (0.13)       (0.13)   
ideo.diff.o                  0.06 *       0.06 *  
                            (0.03)       (0.03)   
same.g.o                    -0.13        -0.12    
                            (0.14)       (0.12)   
same.r.o                     0.12         0.10    
                            (0.10)       (0.09)   
sp                                       -0.05 *  
                                         (0.02)   
gender=male                              -0.01    
                                         (0.11)   
race2=white                               0.06    
                                         (0.08)   
--------------------------------------------------
Num. obs.    3600         3600         3600       
R^2             0.01         0.01         0.01    
Adj. R^2        0.01         0.01         0.01    
L.R.           37.06        46.69        52.92    
==================================================
*** p < 0.001, ** p < 0.01, * p < 0.05

>  # Partner and vote models
>  
>  log.p <- lrm(non.zero ~ ideo.diff+  same.g + same.r + ideo.diff.o+ same.g.o +same.r.o + sp + gender + race2 , data=treat.r1.dfl.o, x=T, y=T ) 

>  log.p.cl <- robcov(log.p, treat.r1.dfl.o$umg) 

>  log.p.cl
Logistic Regression Model
 
 lrm(formula = non.zero ~ ideo.diff + same.g + same.r + ideo.diff.o + 
     same.g.o + same.r.o + sp + gender + race2, data = treat.r1.dfl.o, 
     x = T, y = T)
 
                                    Model Likelihood     Discrimination    Rank Discrim.    
                                       Ratio Test           Indexes           Indexes       
 Obs                       3600    LR chi2     105.40    R2       0.065    C       0.666    
  0                         309    d.f.             9    g        0.685    Dxy     0.332    
  1                        3291    Pr(> chi2) <0.0001    gr       1.984    gamma   0.332    
 Cluster on  treat.r1.dfl.o$umg                          gp       0.053    tau-a   0.052    
 Clusters                    30                          Brier    0.076                     
 max |deriv|              1e-12                                                             
 
             Coef    S.E.   Wald Z Pr(>|Z|)
 Intercept    3.3011 0.5275  6.26  <0.0001 
 ideo.diff   -0.2209 0.0703 -3.14  0.0017  
 same.g       0.2937 0.1475  1.99  0.0464  
 same.r      -0.2688 0.1489 -1.80  0.0711  
 ideo.diff.o  0.0849 0.0436  1.95  0.0515  
 same.g.o     0.0064 0.1896  0.03  0.9731  
 same.r.o     0.1960 0.2237  0.88  0.3811  
 sp          -0.0397 0.0588 -0.68  0.4994  
 gender=male -0.7875 0.2607 -3.02  0.0025  
 race2=white -0.1843 0.2627 -0.70  0.4831  
 

>  screenreg(log.p.cl)

========================
             Model 1    
------------------------
Intercept       3.30 ***
               (0.53)   
ideo.diff      -0.22 ** 
               (0.07)   
same.g          0.29 *  
               (0.15)   
same.r         -0.27    
               (0.15)   
ideo.diff.o     0.08    
               (0.04)   
same.g.o        0.01    
               (0.19)   
same.r.o        0.20    
               (0.22)   
sp             -0.04    
               (0.06)   
gender=male    -0.79 ** 
               (0.26)   
race2=white    -0.18    
               (0.26)   
------------------------
Num. obs.    3600       
Pseudo R^2      0.07    
L.R.          105.40    
========================
*** p < 0.001, ** p < 0.01, * p < 0.05

>  #DV: Vote  - Basic model with clustered se for correlation  within groups
>  log.v1<- lrm(vote ~    prop.ideo.diff + prop.same.gender + prop.same.race  + sp + gender + race2, data=treat.r1.df.o, x=T, y=T)

>  log.v1.cl <- robcov(log.v1, treat.r1.df.o$umg)

>  log.v1.cl
Logistic Regression Model
 
 lrm(formula = vote ~ prop.ideo.diff + prop.same.gender + prop.same.race + 
     sp + gender + race2, data = treat.r1.df.o, x = T, y = T)
 
                                  Model Likelihood     Discrimination    Rank Discrim.    
                                     Ratio Test           Indexes           Indexes       
 Obs                      1200    LR chi2     20.60    R2       0.024    C       0.582    
  0                        363    d.f.            6    g        0.317    Dxy     0.164    
  1                        837    Pr(> chi2) 0.0022    gr       1.374    gamma   0.165    
 Cluster on  treat.r1.df.o$umg                         gp       0.067    tau-a   0.069    
 Clusters                   30                         Brier    0.207                     
 max |deriv|             3e-13                                                            
 
                  Coef    S.E.   Wald Z Pr(>|Z|)
 Intercept         1.4880 0.3277  4.54  <0.0001 
 prop.ideo.diff   -0.1468 0.0501 -2.93  0.0034  
 prop.same.gender -0.0223 0.1873 -0.12  0.9053  
 prop.same.race    0.1823 0.1787  1.02  0.3075  
 sp               -0.0558 0.0424 -1.32  0.1883  
 gender=male       0.0521 0.2300  0.23  0.8208  
 race2=white      -0.2455 0.1721 -1.43  0.1539  
 

>  log.v2<- lrm(vote ~  prop.ideo.diff + prop.same.gender + prop.same.race + sp + gender + race2 + p.offered, data=treat.r1.df.o, x=T, y=T)

>  log.v2.cl <- robcov(log.v2, treat.r1.df.o$umg)

>  log.v2.cl
Logistic Regression Model
 
 lrm(formula = vote ~ prop.ideo.diff + prop.same.gender + prop.same.race + 
     sp + gender + race2 + p.offered, data = treat.r1.df.o, x = T, 
     y = T)
 
                                   Model Likelihood     Discrimination    Rank Discrim.    
                                      Ratio Test           Indexes           Indexes       
 Obs                      1200    LR chi2     634.57    R2       0.581    C       0.901    
  0                        363    d.f.             7    g        2.431    Dxy     0.802    
  1                        837    Pr(> chi2) <0.0001    gr      11.367    gamma   0.803    
 Cluster on  treat.r1.df.o$umg                          gp       0.326    tau-a   0.339    
 Clusters                   30                          Brier    0.100                     
 max |deriv|             6e-13                                                             
 
                  Coef    S.E.   Wald Z Pr(>|Z|)
 Intercept        -3.0200 0.7495 -4.03  <0.0001 
 prop.ideo.diff   -0.0372 0.0731 -0.51  0.6106  
 prop.same.gender -0.2985 0.2771 -1.08  0.2812  
 prop.same.race    0.2035 0.1931  1.05  0.2920  
 sp               -0.0804 0.0829 -0.97  0.3319  
 gender=male      -0.0751 0.3705 -0.20  0.8395  
 race2=white      -0.1663 0.3318 -0.50  0.6163  
 p.offered         0.9979 0.1183  8.43  <0.0001 
 

>  screenreg(list(log.p.cl, log.v1, log.v2.cl))

=======================================================
                  Model 1      Model 2      Model 3    
-------------------------------------------------------
Intercept            3.30 ***     1.49 ***    -3.02 ***
                    (0.53)       (0.24)       (0.75)   
ideo.diff           -0.22 **                           
                    (0.07)                             
same.g               0.29 *                            
                    (0.15)                             
same.r              -0.27                              
                    (0.15)                             
ideo.diff.o          0.08                              
                    (0.04)                             
same.g.o             0.01                              
                    (0.19)                             
same.r.o             0.20                              
                    (0.22)                             
sp                  -0.04        -0.06        -0.08    
                    (0.06)       (0.03)       (0.08)   
gender=male         -0.79 **      0.05        -0.08    
                    (0.26)       (0.14)       (0.37)   
race2=white         -0.18        -0.25        -0.17    
                    (0.26)       (0.15)       (0.33)   
prop.ideo.diff                   -0.15 ***    -0.04    
                                 (0.04)       (0.07)   
prop.same.gender                 -0.02        -0.30    
                                 (0.13)       (0.28)   
prop.same.race                    0.18         0.20    
                                 (0.14)       (0.19)   
p.offered                                      1.00 ***
                                              (0.12)   
-------------------------------------------------------
Num. obs.         3600         1200         1200       
Pseudo R^2           0.07         0.02         0.58    
L.R.               105.40        20.60       634.57    
=======================================================
*** p < 0.001, ** p < 0.01, * p < 0.05

>  ### Printing all models as 1 table
>  texreg(file= paste0(bd, "base_all_models.tex", sep=""), 
+         list(lm.M1.cl, lm.M2.cl, lm.M3.cl, log.p.cl, log.v1.cl, log.v2.cl), 
+         custom.model.names = c("M1 Offer", "M2 Offer", "M3 Offer", "M4 Partner", "M5 Vote", "M6 Vote"), 
+         custom.coef.names = c("Intercept", "Diff SP P-R", "Same Gender", "Same Race", 
+                               "Diff SP P-3rd", "Same Gender P-3rd", "Same Race P-3rd", 
+                               "Self-Placement", "Proposer-Male", "Proposer-White", 
+                               "Diff SP P-R", "Same Gender", "Same Race", "Amount Offered" ),
+         caption = "Statistical Models on Proposal and Voting Behaviour",
+         label="table:base_model",
+         booktabs = F, dcolumn = F)
The table was written to the file 'C:/Users/Denise Laroze/Dropbox/group ID in legislative bargaining/Social Identity 2019-20/Data analysis/base_all_models.tex'.


>  #  ### Print Models in 2 separate tables
>  # texreg(file= paste0(bd, "base_models.tex", sep=""), 
>  #        list(lm.M1.cl, lm.M2.cl, lm.M3.cl), 
>  #        custom.model.names = c("M1 Offer", "M2 Offer", "M3 Offer"), 
>  #        custom.coef.names = c("Intercept", "Diff SP P-R", "Same Gender", "Same Race", 
>  #                              "Diff SP P-3rd", "Same Gender P-3rd", "Same Race P-3rd", 
>  #                              "Self-Placement", "Proposer-Male", "Proposer-White" ),
>  #        booktabs = F, dcolumn = F)
>  # 
>  # 
>  # texreg(#file= paste0(bd, "log_models.tex", sep=""), 
>  #   list(log.p.cl, log.v1, log.v2.cl), 
>  #   custom.model.names = c("M4 Partner", "M5 Vote", "M6 Vote"), 
>  #   custom.coef.names = c("Intercept", "Diff SP P-R", "Same Gender", "Same Race", 
>  #                         "Diff SP P-3rd", "Same Gender P-3rd", "Same Race P-3rd", 
>  #                         "Self-Placement", "Proposer-Male", "Proposer-White", 
>  #                         "Diff SP P-R", "Same Gender", "Same Race", "Amount Offered" ),
>  #   booktabs = F, dcolumn = F,
>  #   stars=c(0.001, 0.01, 0.05,  0.1))
>  # 
>  # screenreg(list(lm.M1.cl, lm.M2.cl, lm.M3.cl))
>  # 
>  
>  screenreg(list(log.v1.cl, log.v2.cl))

==========================================
                  Model 1      Model 2    
------------------------------------------
Intercept            1.49 ***    -3.02 ***
                    (0.33)       (0.75)   
prop.ideo.diff      -0.15 **     -0.04    
                    (0.05)       (0.07)   
prop.same.gender    -0.02        -0.30    
                    (0.19)       (0.28)   
prop.same.race       0.18         0.20    
                    (0.18)       (0.19)   
sp                  -0.06        -0.08    
                    (0.04)       (0.08)   
gender=male          0.05        -0.08    
                    (0.23)       (0.37)   
race2=white         -0.25        -0.17    
                    (0.17)       (0.33)   
p.offered                         1.00 ***
                                 (0.12)   
------------------------------------------
Num. obs.         1200         1200       
Pseudo R^2           0.02         0.58    
L.R.                20.60       634.57    
==========================================
*** p < 0.001, ** p < 0.01, * p < 0.05

>  plotreg(lm.M3.cl, file = paste0(bd, "base_model.png", sep=""),
+          custom.model.names = "OLS - Amount Offered to Others",
+          custom.coef.names = c("Intercept", "Diff SP P-R", "Same Gender", "Same Race", 
+                                "Diff SP P-3rd", "Same Gender P-3rd", "Same Race P-3rd", 
+                                "Self-Placement", "Proposer-Male", "Proposer-White"),
+          omit.coef = "Intercept",  ci.level = 0.95)
Model 1: bars denote 0.5 (inner) resp. 0.95 (outer) confidence intervals (computed from standard errors).
RStudioGD 
        2 

>  plotreg(log.p.cl, file = paste0(bd, "partner_model.png", sep=""),
+          custom.model.names = "Logit- Partner Selection",
+          custom.coef.names = c("Intercept", "Diff SP P-R", "Same Gender", "Same Race", 
+                                "Diff SP P-3rd", "Same Gender P-3rd", "Same Race P-3rd", 
+                                "Self-Placement", "Proposer-Male", "Proposer-White"),
+          omit.coef = "Intercept",  ci.level = 0.95)
Model 1: bars denote 0.5 (inner) resp. 0.95 (outer) confidence intervals (computed from standard errors).
RStudioGD 
        2 

>  plotreg(log.v2.cl, file = paste0(bd, "vote_result.png", sep=""),
+          custom.model.names = "Logit - Vote",
+          custom.coef.names = c("Intercept", "Diff SP P-R", "Same Gender", "Same Race", 
+                                "Self-Placement", "Proposer-Male", "Proposer-White",
+                                "Amount Offered" ),
+          omit.coef = "Intercept",  ci.level = 0.95)
Model 1: bars denote 0.5 (inner) resp. 0.95 (outer) confidence intervals (computed from standard errors).
RStudioGD 
        2 

> ###########################################
> ### Matching group statistics -- Figure 4
> ############################################
>  base.r1.dfl.o$mg_id<-as.numeric(factor(base.r1.dfl.o$umg))

>  treat.r1.dfl.o$mg_id <- as.numeric(factor(treat.r1.dfl.o$umg))

>  treat.dfl.o$mg_id<- as.numeric(factor(treat.dfl.o$umg))

>  ##### Matching group level statistics, on amount given to others
>  #ideo.diff Treatment GRI
>  ideo.mg<-rep(NA, 30)

>  gender.mg<-rep(NA, 30)

>  race.mg<-rep(NA, 30)

>  for(i in 1:30){
+    lm<-lm(prop1~ideo.diff + same.g + same.r, data=subset(treat.r1.dfl.o, treat.r1.dfl.o$mg_id==i))
+    summary(lm)
+    ideo.mg[i]<-lm$coef[2]
+    gender.mg[i]<-lm$coef[3]
+    race.mg[i]<-lm$coef[4]
+  }

>  ideo.mg
 [1] -0.18869604 -0.16136364  0.12816240 -0.04139555 -0.05740396  0.03645494  0.11343005 -0.23460331  0.22130829 -0.43945179 -0.30597978 -0.02786260 -0.26984536  0.14631249  0.21337657 -0.46514228 -0.85111537
[18] -0.12126120 -0.13325072 -0.25245279 -0.30284056  0.02198478  0.26277426  0.05984711 -0.17685683 -0.13268765 -0.03718590 -0.37340130 -1.18913613 -0.41730600

>  ### Figure 4
>  #### Graphs for matching groups
>  png(filename= paste0(bd, "ideo_mg.png", sep=""))

>  plot(ideo.mg, ylab="Coef. Diff SP P-R", xlab="Matching Group", cex.lab=1.5) + abline(h=0, col="red")# +  theme(text=element_text(size=24))
integer(0)

>  dev.off()
RStudioGD 
        2 

>  mean(ideo.mg)
[1] -0.1658529

>  sum(ideo.mg<0) # Number of matching group with coeff below 0
[1] 21

>  wilcox.test(ideo.mg, data=ideo.diff) # Non-parametric test if mean is equal to zero

	Wilcoxon signed rank test

data:  ideo.mg
V = 98, p-value = 0.004665
alternative hypothesis: true location is not equal to 0


>  png(filename= paste0(bd, "gender_mg.png", sep=""))

>  plot(gender.mg, ylab="Coef. Same Gender", xlab="Matching Group") + abline(h=0, col="red")
integer(0)

>  dev.off()
RStudioGD 
        2 

>  wilcox.test(gender.mg, data=ideo.diff) # Non-parametric test if mean is equal to zero

	Wilcoxon signed rank test

data:  gender.mg
V = 210, p-value = 0.8842
alternative hypothesis: true location is not equal to 0


>  png(filename= paste0(bd, "race_mg.png", sep=""))

>  plot(race.mg, ylab="Coef. Same Race", xlab="Matching Group") + abline(h=0, col="red")
integer(0)

>  dev.off()
RStudioGD 
        2 

>  wilcox.test(race.mg, data=ideo.diff) # Non-parametric test if mean is equal to zero

	Wilcoxon signed rank test

data:  race.mg
V = 130, p-value = 0.8229
alternative hypothesis: true location is not equal to 0


>  ##### Matching group analysis for ideo.diff.o
>  ideo.diff.o<-rep(NA, 30)

>  for(i in 1:30){
+    lm<-lm(prop1~ideo.diff.o + ideo.diff + same.g + same.r, data=subset(treat.r1.dfl.o, treat.r1.dfl.o$mg_id==i))
+    summary(lm)
+    names(lm)
+    ideo.diff.o[i]<-lm$coef[2]
+  }

>  plot(ideo.diff.o)+ abline(h=0, col="red")
integer(0)

>  wilcox.test(ideo.diff.o, data=ideo.diff.o)

	Wilcoxon signed rank test

data:  ideo.diff.o
V = 275, p-value = 0.3931
alternative hypothesis: true location is not equal to 0


>  ideo.diff.o<-table(ideo.diff.o)

>  sum(ideo.diff.o[names(ideo.diff.o)<0])
[1] 13

>  ##### Matching group level statistics, on partner selection
>  ideo.partner<-rep(NA, 30)

>  for(i in 1:30){
+    log.M1 <- glm(non.zero ~ ideo.diff + same.g + same.r , data=subset(treat.dfl.o, treat.dfl.o$mg_id==i), family = "binomial") 
+    summary(log.M1)
+    ideo.partner[i]<-log.M1$coef[2]
+  }

>  plot(ideo.partner, ylab="Coef. Diff SP P-R", xlab="Matching Group") + abline(h=0, col="red")
integer(0)

>  wilcox.test(ideo.partner, data=ideo.partner) 

	Wilcoxon signed rank test

data:  ideo.partner
V = 177, p-value = 0.2621
alternative hypothesis: true location is not equal to 0


>  data=subset(treat.dfl.o, treat.dfl.o$mg_id==i)

>  ###############################################
> #### Coaliton formation - Table 2
> ###############################################
>  
>  
>  #Identification of who is closest
>  
>  id<-rep(NA, nrow(mydf))

>  others<-list(rep(NA, 2))

>  #Identifying who is closer in gender, race and ideology to the proposer, and who the proposer is offering more to.
>  for (i in 1:nrow(mydf)){
+    id[i]<-mydf$group_id[i]
+    others <- setdiff(1:3, id[i])
+    
+    if (mydf$treatment[i]=="GRI"){
+      mydf$ideo.dist.A[i]<-abs(mydf$sp[i]-mydf[[paste0("spo", others[1], sep="")]][[i]]) 
+      mydf$ideo.dist.B[i]<-abs(mydf$sp[i]-mydf[[paste0("spo", others[2], sep="")]][[i]]) 
+      var.ideo<-c("ideo.dist.A", "ideo.dist.B")
+      mydf$closer.ideo[i]<-ifelse( mydf$ideo.dist.A[i]==mydf$ideo.dist.B[i] , "Equal" ,names(which.min(mydf[i,var.ideo])) )
+      
+      props.i.want<-paste0("prop.", c("A","B"), sep="")
+      mydf$offer.more[i]<-ifelse(mydf$prop.A[i]==mydf$prop.B[i] , "Equal" ,names(which.max(mydf[i,props.i.want])) )
+    }
+    else {
+      mydf$ideo.dist.A[i]<-NA
+      mydf$ideo.dist.B[i]<-NA
+      mydf$closer.ideo[i]<-NA
+      mydf$offer.more[i]<-NA
+    }
+  }

>  rm(id, others)

>  mydf$closer.ideo[is.na(mydf$offer)]<-NA

>  mydf$closer.ideo[mydf$closer.ideo=="ideo.dist.A"]<-"A" #simplification of values

>  mydf$closer.ideo[mydf$closer.ideo=="ideo.dist.B"]<-"B"

>  mydf$offer.more[mydf$offer.more=="prop.A"]<-"A"

>  mydf$offer.more[mydf$offer.more=="prop.B"]<-"B"

>  tmp<-by(mydf, interaction(mydf$ugroup, mydf$period),  function(x) {
+    
+    c.v<-if ( 0 %in% x$vote) "Minimal" else "Grand"
+    x$c.type<-c.v
+    x$c.type[x$vote_result=="Rejected"]<-"Rejected"
+    x$c.type[is.na(x$prop1)]<-NA
+    
+    id<-rep(NA, nrow(x))
+    others<-list(rep(NA, 2))
+    
+    for (i in 1:nrow(x)){
+      id<-x$group_id[i]
+      others <- setdiff(1:3, id)
+      x$v.favour[i]<-ifelse(is.na(x$prop1[i]), NA, ifelse(x$vote[others[1]]=="1", "A" , "B"))  
+      
+    }
+    
+    x$v.favour[x$c.type=="Grand"]<-"Grand"
+    x$v.favour[x$vote_result=="Rejected"]<-"Rejected"
+    return(x) 
+  })

>  coalition.df <- do.call("rbind", tmp)

>  rm(tmp) 

>  coalition.df<-coalition.df[order(coalition.df$session, coalition.df$period,coalition.df$group, coalition.df$group_id),]

>  coalition.df.me<-subset(coalition.df, prop_dummy==1)

>  coalition.df.me<-coalition.df.me[, c("treatment", "userperiod", "group_id", "offer", "prop_dummy", "vote", "vote_result", "p.offered", "closer.ideo", "c.type", "v.favour" )]

>  coalition.df.me$closer.ideo[is.na(coalition.df.me$vote)]<-NA

>  ##### Table with coalition partner
>  coalition.df.me$coalition.vote<-NA

>  coalition.df.me$coalition.vote[coalition.df.me$c.type=="Minimal" & coalition.df.me$closer.ideo!=coalition.df.me$v.favour]<- "Disconnected"

>  coalition.df.me$coalition.vote[coalition.df.me$c.type=="Minimal" & coalition.df.me$closer.ideo==coalition.df.me$v.favour]<-"Connected"

>  coalition.df.me$coalition.vote[coalition.df.me$c.type=="Minimal" & coalition.df.me$closer.ideo=="Equal"]<-"Equal"

>  coalition.df.me$coalition.vote[coalition.df.me$c.type=="Grand"]<-"Grand"

>  coalition.df.me$coalition.vote[coalition.df.me$c.type=="Rejected"]<-"Rejected"

>  #Coalitions for Treatment Group
>  coalition.t<-table(coalition.df.me$coalition.vote[coalition.df.me$treatment=="GRI"])

>  coalition.t<-coalition.t[1:4]

>  prop.t<-prop.table(t(coalition.t), 1)*100

>  coalition.t<-t(rbind(coalition.t, prop.t))

>  coalition.t
             coalition.t         
Connected            140 23.33333
Disconnected          97 16.16667
Equal                 68 11.33333
Grand                295 49.16667

>  # % minimal group
>  coalition.min<-coalition.t[1:3]

>  prop.min<-prop.table(t(coalition.min), 1)*100

>  prop.min[4]<-"--"

>  #table
>  coalition.t<-cbind(coalition.t, prop.min)

>  coalition.t
             coalition.t                    prop.min          
Connected    "140"       "23.3333333333333" "45.9016393442623"
Disconnected "97"        "16.1666666666667" "31.8032786885246"
Equal        "68"        "11.3333333333333" "22.2950819672131"
Grand        "295"       "49.1666666666667" "--"              

>  #Coalitions Control
>  coalition.base<-table(coalition.df.me$c.type[coalition.df.me$treatment=="Control"])

>  coalition.base<-coalition.base[1:2]

>  coalition.base.p<-prop.table(t(coalition.base), 1)

>  coalition.base.p
      
           Grand   Minimal
  [1,] 0.5166667 0.4833333

>  coalition.b <- matrix(nrow = 4, ncol = 2)

>  coalition.b[2, 1]<-coalition.base[1]

>  coalition.b[4, 1]<-coalition.base[2]

>  coalition.b[2, 2]<-coalition.base.p[1]*100

>  coalition.b[4, 2]<-coalition.base.p[2]*100

>  coalition.b<-as.table(coalition.b)

>  main.coalition<-cbind(coalition.t, coalition.b)

>  main.coalition
             coalition.t                    prop.min           A     B                 
Connected    "140"       "23.3333333333333" "45.9016393442623" NA    NA                
Disconnected "97"        "16.1666666666667" "31.8032786885246" "124" "51.6666666666667"
Equal        "68"        "11.3333333333333" "22.2950819672131" NA    NA                
Grand        "295"       "49.1666666666667" "--"               "116" "48.3333333333333"

>  colnames(main.coalition) <- c( "Number", "%", "%", "Number", "%")

>  rownames(main.coalition)<-c("Minimal-Connected", "Minimal-Disconnected", "Minimal-Equal", "Grand")

>  main.coalition
                     Number %                  %                  Number %                 
Minimal-Connected    "140"  "23.3333333333333" "45.9016393442623" NA     NA                
Minimal-Disconnected "97"   "16.1666666666667" "31.8032786885246" "124"  "51.6666666666667"
Minimal-Equal        "68"   "11.3333333333333" "22.2950819672131" NA     NA                
Grand                "295"  "49.1666666666667" "--"               "116"  "48.3333333333333"

>  xtable(main.coalition, caption="Types of Coalitions", label="table:coalitions")
% latex table generated in R 3.5.2 by xtable 1.8-4 package
% Thu Mar 05 16:23:06 2020
\begin{table}[ht]
\centering
\begin{tabular}{rlllll}
  \hline
 & Number & \% & \% & Number & \% \\ 
  \hline
Minimal-Connected & 140 & 23.3333333333333 & 45.9016393442623 &  &  \\ 
  Minimal-Disconnected & 97 & 16.1666666666667 & 31.8032786885246 & 124 & 51.6666666666667 \\ 
  Minimal-Equal & 68 & 11.3333333333333 & 22.2950819672131 &  &  \\ 
  Grand & 295 & 49.1666666666667 & -- & 116 & 48.3333333333333 \\ 
   \hline
\end{tabular}
\caption{Types of Coalitions} 
\label{table:coalitions}
\end{table}

> ###############################
> #### Love - Hate - Figure 5
> ############################################ 
>  #Offers by ideological distance  - Treatment
>  
>  plot.df<-ddply(treat.r1.dfl.o, .(ideo.diff), summarise,
+                 prop = mean(prop1)
+  )

>  p <- ggplot(plot.df, aes(ideo.diff, prop)) + theme_bw()

>  p<- p + geom_point() + labs(x = "Absolute value ideological distance", y= "Mean offer") + theme(text=element_text(size=24))

>  p<- p + geom_hline(yintercept=mean(treat.r1.dfl.o$prop1),linetype="dashed", color = "red") + geom_hline(yintercept=mean(base.dfl.o$prop1, na.rm=T), color = "blue")

>  p

>  ggsave(filename=paste0(bd, "mean_offers_ideo_treat.png", sep=""),  width=6, height=6)

>  #Offers by ideological distance  - Baseline
>  sp<-qplot(ideo.diff, prop1, data = base.dfl.o, geom = c("point", "smooth"),
+            method="lm", ylab="pounds",
+            xlab="Absolute value ideological distance" ,main="Offers to other participants - Baseline ",  
+            na.rm=TRUE)
Warning: Ignoring unknown parameters: method

>  sp<-sp + geom_hline(yintercept=mean(treat.r1.dfl.o$prop1),linetype="dashed", color = "red")

>  sp<-sp + geom_hline(yintercept=mean(base.dfl.o$prop1, na.rm=T), color = "darkgreen") + theme_bw()

>  sp    

>  ggsave(filename=paste0(bd, "offers_ideo_base.png", sep=""),  width=6, height=6) 

>  ####################################
>  #####  Appendix  - Robustness tests
>  ####################################
> # Table A.1 - generated manually bu the authors
>  
> 
>  
>  
>  ############################################  
>  ##### Characteristics of the sample - Table A.2
>  ############################################
>  
>  ### Mean, Min and Max earnings, commented in text
>  f.earnings<-mydf$final_earnings[mydf$userperiod==0] ##0 GRI and Baseline

>  summary(f.earnings)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
   4.00    9.50   11.00   11.06   13.00   17.40 

>  ###Gender and Race Composition of treatment group  - Table A.2
>  t.gr <- table(mydf$gender[mydf$userperiod==0 & mydf$treatment=="GRI"], mydf$race[mydf$userperiod==0 & mydf$treatment=="GRI"] ) # A will be rows, B will be columns 

>  t.gr # print table - Table in Appendix
        
         black brown white
  female    27    14    78
  male      12     3    46

>  #latex(t.gr, caption="Frequences of Gender and Race in treatment sample ", file=paste0(bd, "t_gr", ".tex", sep="") )
>  
>  
>  #Gender
>  gender_GRI<-mydf$gender[mydf$userperiod==0 & mydf$treatment=="GRI"]

>  #gender_2d<-mydf.2d.$gender[mydf.2d.$period==1 ]
>  #tot.gender<-c(as.character(gender_GRI), as.character(gender_2d))
>  #g<-table(tot.gender)
>  #g
>  #prop.table(g) # cell percentages
>  
>  #Race
>  race_GRI<-mydf$race2[mydf$userperiod==0 & mydf$treatment=="GRI"]

>  #race_2d<-mydf.2d.$race2[mydf.2d.$period==1 ]
>  #tot.race<-c(as.character(race_GRI), as.character(race_2d))
>  #r <-table(tot.race) 
>  #r
>  #prop.table(r)
>  
>  #Nationalities in Main treatment and 2Dict samples
>  nation<-mydf$nationality[mydf$userperiod==0] # Main tratment

>  #nation.2d<-mydf.2d.$nationality[mydf.2d.$userperiod==1] # 2dictator
>  #nation<-c(as.character(nation), as.character(nation.2d))
>  table(nation) # Table with nationalities included in the sample
nation
       Albania          Austria        Bulgaria          Cyprus         Estonia         Finland          France         Germany          Greece           Italy         Jamaica          Latvia       Lithuania 
              2               2               9               5               2               2              24               4               8              20               1               1               8 
      Mauritius     Netherlands          Norway           Other          Poland        Portugal Slovak Republic           Spain     Switzerland  United Kingdom 
              1               4               3               4               1               2               3              10               1             135 

>  #############################
>  ### Pro-Social types
>  #############################
>  treat.r1.dfl.o$prosocial<-NA

>  treat.r1.dfl.o$prosocial[treat.r1.dfl.o$generosityall>0]<-1

>  treat.r1.dfl.o$prosocial[treat.r1.dfl.o$generosityall==0]<-0

>  describe(treat.r1.dfl.o$prosocial)
   vars    n mean   sd median trimmed mad min max range  skew kurtosis   se
X1    1 3600 0.58 0.49      1     0.6   0   0   1     1 -0.34    -1.89 0.01

>  table(treat.r1.dfl.o$generosityall[unique(treat.r1.dfl.o$uid)])

  0 0.2   1 1.6 1.8   2 
 84   6  34   2   2  52 

>  table(treat.r1.dfl.o$prosocial[unique(treat.r1.dfl.o$uid)])

 0  1 
84 96 

>  #DV: Offer  - M2 basic covariates + 3er player controles 
>  lm.M1.ps<-ols(prop1~ideo.diff*prosocial + ideo.diff.o*prosocial + same.g*prosocial + same.g.o*prosocial +same.r*prosocial+ same.g.o*prosocial + same.r.o*prosocial, data=treat.r1.dfl.o, y=T, x=T)

>  lm.M1.ps.cl<-robcov(lm.M1.ps, treat.r1.dfl.o$umg)

>  lm.M1.ps.cl
Linear Regression Model
 
 ols(formula = prop1 ~ ideo.diff * prosocial + ideo.diff.o * prosocial + 
     same.g * prosocial + same.g.o * prosocial + same.r * prosocial + 
     same.g.o * prosocial + same.r.o * prosocial, data = treat.r1.dfl.o, 
     x = T, y = T)
 
                                 Model Likelihood     Discrimination    
                                    Ratio Test           Indexes        
 Obs                    3600     LR chi2    153.28    R2       0.042    
 sigma                2.2328     d.f.           13    R2 adj   0.038    
 d.f.                   3586     Pr(> chi2) 0.0000    g        0.504    
 Cluster ontreat.r1.dfl.o$umg                                           
 Clusters                 30                                            
 
 Residuals
 
     Min      1Q  Median      3Q     Max 
 -5.5155 -0.5884  0.4110  1.0909  8.0529 
 
 
                         Coef    S.E.   t     Pr(>|t|)
 Intercept                4.8065 0.1159 41.47 <0.0001 
 ideo.diff               -0.2720 0.0879 -3.09 0.0020  
 prosocial                0.5521 0.2365  2.33 0.0196  
 ideo.diff.o              0.1301 0.0606  2.15 0.0320  
 same.g                   0.4378 0.1923  2.28 0.0229  
 same.g.o                -0.2045 0.1627 -1.26 0.2089  
 same.r                  -0.1793 0.1440 -1.25 0.2130  
 same.r.o                 0.0485 0.1368  0.35 0.7230  
 ideo.diff * prosocial    0.1502 0.0849  1.77 0.0769  
 prosocial * ideo.diff.o -0.0767 0.0741 -1.03 0.3011  
 prosocial * same.g      -0.4940 0.1664 -2.97 0.0030  
 prosocial * same.g.o     0.0726 0.2062  0.35 0.7249  
 prosocial * same.r       0.0564 0.1368  0.41 0.6798  
 prosocial * same.r.o     0.1929 0.2116  0.91 0.3620  
 

>  #DV: Offer  - M3 basic covariates + 3er player controles + proposer characteristics
>  lm.M2.ps<-ols(prop1~ideo.diff*prosocial + ideo.diff.o*prosocial + same.g*prosocial + same.g.o*prosocial +same.r*prosocial+ same.g.o*prosocial + same.r.o*prosocial + sp + gender + race2 , data=treat.r1.dfl.o, y=T, x=T)

>  lm.M2.ps.cl<-robcov(lm.M2.ps, treat.r1.dfl.o$umg)

>  lm.M2.ps.cl 
Linear Regression Model
 
 ols(formula = prop1 ~ ideo.diff * prosocial + ideo.diff.o * prosocial + 
     same.g * prosocial + same.g.o * prosocial + same.r * prosocial + 
     same.g.o * prosocial + same.r.o * prosocial + sp + gender + 
     race2, data = treat.r1.dfl.o, x = T, y = T)
 
                                 Model Likelihood     Discrimination    
                                    Ratio Test           Indexes        
 Obs                    3600     LR chi2    157.65    R2       0.043    
 sigma                2.2323     d.f.           16    R2 adj   0.039    
 d.f.                   3583     Pr(> chi2) 0.0000    g        0.512    
 Cluster ontreat.r1.dfl.o$umg                                           
 Clusters                 30                                            
 
 Residuals
 
     Min      1Q  Median      3Q     Max 
 -5.5643 -0.5403  0.4015  1.1046  7.8735 
 
 
                         Coef    S.E.   t     Pr(>|t|)
 Intercept                4.7760 0.1248 38.28 <0.0001 
 ideo.diff               -0.2713 0.0882 -3.08 0.0021  
 prosocial                0.5530 0.2349  2.35 0.0186  
 ideo.diff.o              0.1285 0.0611  2.10 0.0355  
 same.g                   0.4588 0.1860  2.47 0.0137  
 same.g.o                -0.1675 0.1640 -1.02 0.3073  
 same.r                  -0.2187 0.1415 -1.54 0.1225  
 same.r.o                 0.0224 0.1417  0.16 0.8743  
 sp                      -0.0181 0.0202 -0.90 0.3688  
 gender=male              0.1230 0.1139  1.08 0.2804  
 race2=white              0.1016 0.0885  1.15 0.2508  
 ideo.diff * prosocial    0.1471 0.0846  1.74 0.0821  
 prosocial * ideo.diff.o -0.0754 0.0739 -1.02 0.3074  
 prosocial * same.g      -0.4948 0.1649 -3.00 0.0027  
 prosocial * same.g.o     0.0868 0.2072  0.42 0.6752  
 prosocial * same.r       0.0722 0.1351  0.53 0.5932  
 prosocial * same.r.o     0.1905 0.2129  0.89 0.3709  
 

>  screenreg(list(lm.M1.ps.cl, lm.M2.ps.cl))

=================================================
                         Model 1      Model 2    
-------------------------------------------------
Intercept                   4.81 ***     4.78 ***
                           (0.12)       (0.12)   
ideo.diff                  -0.27 **     -0.27 ** 
                           (0.09)       (0.09)   
prosocial                   0.55 *       0.55 *  
                           (0.24)       (0.23)   
ideo.diff.o                 0.13 *       0.13 *  
                           (0.06)       (0.06)   
same.g                      0.44 *       0.46 *  
                           (0.19)       (0.19)   
same.g.o                   -0.20        -0.17    
                           (0.16)       (0.16)   
same.r                     -0.18        -0.22    
                           (0.14)       (0.14)   
same.r.o                    0.05         0.02    
                           (0.14)       (0.14)   
ideo.diff * prosocial       0.15         0.15    
                           (0.08)       (0.08)   
prosocial * ideo.diff.o    -0.08        -0.08    
                           (0.07)       (0.07)   
prosocial * same.g         -0.49 **     -0.49 ** 
                           (0.17)       (0.16)   
prosocial * same.g.o        0.07         0.09    
                           (0.21)       (0.21)   
prosocial * same.r          0.06         0.07    
                           (0.14)       (0.14)   
prosocial * same.r.o        0.19         0.19    
                           (0.21)       (0.21)   
sp                                      -0.02    
                                        (0.02)   
gender=male                              0.12    
                                        (0.11)   
race2=white                              0.10    
                                        (0.09)   
-------------------------------------------------
Num. obs.                3600         3600       
R^2                         0.04         0.04    
Adj. R^2                    0.04         0.04    
L.R.                      153.28       157.65    
=================================================
*** p < 0.001, ** p < 0.01, * p < 0.05

>  #############################################
>  ######Comparison to Baseline and placebo tests
>  #############################################
>  
>  var.treat<-treat.r1.df.o$sd.p.offered[treat.r1.df.o$vote_result=="Accepted"]

>  var.base<-base.r1.df.o$sd.p.offered[base.r1.df.o$vote_result=="Accepted"]

>  var.test(var.treat,var.base)

	F test to compare two variances

data:  var.treat and var.base
F = 0.80322, num df = 1107, denom df = 443, p-value = 0.004988
alternative hypothesis: true ratio of variances is not equal to 1
95 percent confidence interval:
 0.6853978 0.9363406
sample estimates:
ratio of variances 
          0.803221 


>  t.test(var.treat,var.base)

	Welch Two Sample t-test

data:  var.treat and var.base
t = -1.5309, df = 743.26, p-value = 0.1262
alternative hypothesis: true difference in means is not equal to 0
95 percent confidence interval:
 -0.40489592  0.05009338
sample estimates:
mean of x mean of y 
 2.039967  2.217369 


>  #DV: Offer  - A.M1 placebo only basic covariates
>  p.lm.M1<-ols(prop1~ideo.diff + same.g + same.r, data=base.r1.dfl.o, y=T, x=T)

>  p.lm.M1.cl<-robcov(p.lm.M1, base.r1.dfl.o$umg)

>  #DV: Offer  - A.M2 placebo basic covariates + 3er player controles 
>  p.lm.M2<-ols(prop1~ideo.diff + ideo.diff.o + same.g + + same.g.o +same.r+ same.g.o + same.r.o, data=base.r1.dfl.o, y=T, x=T)

>  p.lm.M2.cl<-robcov(p.lm.M2, base.r1.dfl.o$umg)

>  #DV: Offer  - A.M3 placebo basic covariates + 3er player controles + proposer characteristics
>  p.lm.M3<-ols(prop1~ideo.diff + same.g+same.r+ ideo.diff.o + same.g.o + same.r.o + sp + gender + race2 , data=base.r1.dfl.o, y=T, x=T)

>  p.lm.M3.cl<-robcov(p.lm.M3, base.r1.dfl.o$umg)

>  ##### Partner and vote models
>  
>  #### DV: A.M4 placebo Non-Zero offer ==1 Partner Selection 
>  #p.log.p <- lrm(non.zero ~ ideo.diff+  same.g + same.r + ideo.diff.o+ same.g.o +same.r.o + sp + gender + race2 , data=base.r1.dfl.o, x=T, y=T ) 
>  #p.log.p.cl <- robcov(p.log.p, base.r1.dfl.o$umg) 
>  
>  #DV: Vote  - A.M5 placebo Model on acceptance of offers 
>  p.log.v1<- lrm(vote ~    prop.ideo.diff + prop.same.gender + prop.same.race  + sp + gender + race2, data=base.r1.df.o, x=T, y=T)

>  p.log.v1.cl <- robcov(p.log.v1, base.r1.df.o$umg)

>  #DV: Vote  - A.M6  placebo Model on acceptance of offers accounting for amount offered 
>  p.log.v2<- lrm(vote ~  prop.ideo.diff + prop.same.gender + prop.same.race + sp + gender + race2 + p.offered, data=base.r1.df.o, x=T, y=T)

>  p.log.v2.cl <- robcov(p.log.v2, base.r1.df.o$umg)

>  ########################################### 
>  ############### Table Placebo #############
>  ########################################### 
>  
>  # screenreg(list(p.lm.M1.cl, p.lm.M2.cl, p.lm.M3.cl, p.log.p.cl, p.log.v1.cl, p.log.v2.cl))
>  # 
>  # 
>  # ### Printing all models as 1 table
>  # texreg(file= paste0(bd, "placebo_all_models.tex", sep=""), 
>  #        list(lm.M1.cl, lm.M2.cl, lm.M3.cl, log.p.cl, log.v1.cl, log.v2.cl), 
>  #        custom.model.names = c("A.M1 Offer placebo", "A.M2 Offer placebo", "A.M3 Offer placebo", "A.M4 Partner placebo", 
>  #                               "A.M5 Vote placebo", "A.M6 Vote placebo"), 
>  #        custom.coef.names = c("Intercept", "Ideo. Dist. P-R", "Same Gender", "Same Race", 
>  #                              "Ideo. Dist. P-3rd", "Same Gender P-3rd", "Same Race P-3rd", 
>  #                              "Self-Placement", "Proposer-Male", "Proposer-White", 
>  #                              "Ideo. Dist. P-R", "Same Gender", "Same Race", "Amount Offered" ),
>  #        caption = "Regression models on amount offered to other participant (Offer), whether a 
>  #        participant was chosen as coalition partner by giving more than zero (Partner), and whether 
>  #        a participant chose to accept the offer they received (Vote).",
>  #        label="table:base_model",
>  #        booktabs = F, dcolumn = F)
>  
>  
>  
>  
>  
>  
>  ###########################
>  ### Panel Specification Table A.3
>  ############################
>  
>  #Fixed Effects Models on proposal
>  fe1 <- plm(prop1~ideo.diff +  same.g + same.r + ideo.diff.o + same.g.o + same.r.o, 
+             data=treat.r1.dfl.o, index=c("uid", "plm.time"), model="within")

>  summary(fe1)
Oneway (individual) effect Within Model

Call:
plm(formula = prop1 ~ ideo.diff + same.g + same.r + ideo.diff.o + 
    same.g.o + same.r.o, data = treat.r1.dfl.o, model = "within", 
    index = c("uid", "plm.time"))

Unbalanced Panel: n = 180, T = 20-20, N = 3600

Residuals:
    Min.  1st Qu.   Median  3rd Qu.     Max. 
-5.66714 -0.54800  0.11639  0.93474  6.70645 

Coefficients:
             Estimate Std. Error t-value  Pr(>|t|)    
ideo.diff   -0.182730   0.028020 -6.5213 7.997e-11 ***
same.g       0.217213   0.093336  2.3272   0.02001 *  
same.r      -0.216143   0.095150 -2.2716   0.02317 *  
ideo.diff.o  0.054320   0.034520  1.5736   0.11568    
same.g.o    -0.111683   0.129991 -0.8592   0.39031    
same.r.o     0.153853   0.125067  1.2302   0.21872    
---
Signif. codes:  0 *** 0.001 ** 0.01 * 0.05 . 0.1   1

Total Sum of Squares:    16764
Residual Sum of Squares: 16516
R-Squared:      0.014842
Adj. R-Squared: -0.038542
F-statistic: 8.57261 on 6 and 3414 DF, p-value: 2.8519e-09

>  fe1.pse<-coeftest(fe1, vcov=vcovHC(fe1, method="arellano"))

>  fe1.pse

t test of coefficients:

             Estimate Std. Error t value  Pr(>|t|)    
ideo.diff   -0.182730   0.046093 -3.9643 7.511e-05 ***
same.g       0.217213   0.134290  1.6175   0.10586    
same.r      -0.216143   0.141433 -1.5282   0.12655    
ideo.diff.o  0.054320   0.023141  2.3473   0.01897 *  
same.g.o    -0.111683   0.060479 -1.8466   0.06489 .  
same.r.o     0.153853   0.075318  2.0427   0.04116 *  
---
Signif. codes:  0 *** 0.001 ** 0.01 * 0.05 . 0.1   1


>  #Fixed Effects Models on proposal
>  fe2 <- plm(prop1~ideo.diff +  same.g + same.r, 
+             data=treat.r1.dfl.o, index=c("uid", "plm.time"), model="within")

>  summary(fe2)
Oneway (individual) effect Within Model

Call:
plm(formula = prop1 ~ ideo.diff + same.g + same.r, data = treat.r1.dfl.o, 
    model = "within", index = c("uid", "plm.time"))

Unbalanced Panel: n = 180, T = 20-20, N = 3600

Residuals:
    Min.  1st Qu.   Median  3rd Qu.     Max. 
-5.59398 -0.51086  0.12266  0.92026  6.71455 

Coefficients:
           Estimate Std. Error t-value  Pr(>|t|)    
ideo.diff -0.170202   0.026970 -6.3108 3.133e-10 ***
same.g     0.198637   0.090402  2.1973   0.02807 *  
same.r    -0.182678   0.090681 -2.0145   0.04403 *  
---
Signif. codes:  0 *** 0.001 ** 0.01 * 0.05 . 0.1   1

Total Sum of Squares:    16764
Residual Sum of Squares: 16536
R-Squared:      0.013601
Adj. R-Squared: -0.038938
F-statistic: 15.705 on 3 and 3417 DF, p-value: 3.8334e-10

>  fe2.pse<-coeftest(fe2, vcov=vcovHC(fe1, method="arellano"))

>  fe2.pse

t test of coefficients:

           Estimate Std. Error t value  Pr(>|t|)    
ideo.diff -0.170202   0.046093 -3.6925 0.0002255 ***
same.g     0.198637   0.134290  1.4792 0.1391873    
same.r    -0.182678   0.141433 -1.2916 0.1965739    
---
Signif. codes:  0 *** 0.001 ** 0.01 * 0.05 . 0.1   1


>  # Conditional Logit models on partner and vote
>  
>  #partner
>  cl1 <- clogit(non.zero ~ ideo.diff+  same.g + same.r + ideo.diff.o+ same.g.o +same.r.o 
+                + strata(uid),  
+                data=treat.r1.dfl.o)

>  summary(cl1)
Call:
coxph(formula = Surv(rep(1, 3600L), non.zero) ~ ideo.diff + same.g + 
    same.r + ideo.diff.o + same.g.o + same.r.o + strata(uid), 
    data = treat.r1.dfl.o, method = "exact")

  n= 3600, number of events= 3291 

                coef exp(coef) se(coef)      z Pr(>|z|)    
ideo.diff   -0.25535   0.77465  0.04992 -5.116 3.13e-07 ***
same.g       0.30926   1.36242  0.17427  1.775   0.0760 .  
same.r      -0.32660   0.72137  0.18509 -1.765   0.0776 .  
ideo.diff.o  0.09711   1.10198  0.05574  1.742   0.0815 .  
same.g.o    -0.06616   0.93599  0.23625 -0.280   0.7795    
same.r.o     0.46417   1.59069  0.23367  1.986   0.0470 *  
---
Signif. codes:  0 *** 0.001 ** 0.01 * 0.05 . 0.1   1

            exp(coef) exp(-coef) lower .95 upper .95
ideo.diff      0.7746     1.2909    0.7025    0.8543
same.g         1.3624     0.7340    0.9682    1.9171
same.r         0.7214     1.3862    0.5019    1.0368
ideo.diff.o    1.1020     0.9075    0.9879    1.2292
same.g.o       0.9360     1.0684    0.5891    1.4872
same.r.o       1.5907     0.6287    1.0062    2.5147

Concordance= 0.599  (se = 0.021 )
Rsquare= 0.01   (max possible= 0.258 )
Likelihood ratio test= 35.55  on 6 df,   p=3e-06
Wald test            = 32.66  on 6 df,   p=1e-05
Score (logrank) test = 34.53  on 6 df,   p=5e-06


>  #vote
>  cl2 <- clogit(vote ~    prop.ideo.diff + prop.same.gender + prop.same.race 
+                + strata(uid),
+                data=treat.r1.df.o)

>  summary(cl2)
Call:
coxph(formula = Surv(rep(1, 1200L), vote) ~ prop.ideo.diff + 
    prop.same.gender + prop.same.race + strata(uid), data = treat.r1.df.o, 
    method = "exact")

  n= 1200, number of events= 837 

                     coef exp(coef) se(coef)      z Pr(>|z|)    
prop.ideo.diff   -0.16989   0.84375  0.05139 -3.306 0.000947 ***
prop.same.gender -0.03882   0.96192  0.17923 -0.217 0.828520    
prop.same.race    0.15855   1.17181  0.18261  0.868 0.385266    
---
Signif. codes:  0 *** 0.001 ** 0.01 * 0.05 . 0.1   1

                 exp(coef) exp(-coef) lower .95 upper .95
prop.ideo.diff      0.8438     1.1852    0.7629    0.9332
prop.same.gender    0.9619     1.0396    0.6770    1.3668
prop.same.race      1.1718     0.8534    0.8193    1.6761

Concordance= 0.561  (se = 0.026 )
Rsquare= 0.01   (max possible= 0.483 )
Likelihood ratio test= 11.85  on 3 df,   p=0.008
Wald test            = 11.5  on 3 df,   p=0.009
Score (logrank) test = 11.74  on 3 df,   p=0.008


>  cl3 <- clogit(vote ~    prop.ideo.diff + prop.same.gender + prop.same.race + p.offered
+                + strata(uid),
+                data=treat.r1.df.o)

>  summary(cl3)
Call:
coxph(formula = Surv(rep(1, 1200L), vote) ~ prop.ideo.diff + 
    prop.same.gender + prop.same.race + p.offered + strata(uid), 
    data = treat.r1.df.o, method = "exact")

  n= 1200, number of events= 837 

                     coef exp(coef) se(coef)      z Pr(>|z|)    
prop.ideo.diff    0.01239   1.01247  0.10169  0.122    0.903    
prop.same.gender -0.36962   0.69100  0.31537 -1.172    0.241    
prop.same.race   -0.05479   0.94668  0.30989 -0.177    0.860    
p.offered         1.39452   4.03305  0.13568 10.278   <2e-16 ***
---
Signif. codes:  0 *** 0.001 ** 0.01 * 0.05 . 0.1   1

                 exp(coef) exp(-coef) lower .95 upper .95
prop.ideo.diff      1.0125     0.9877    0.8295     1.236
prop.same.gender    0.6910     1.4472    0.3724     1.282
prop.same.race      0.9467     1.0563    0.5157     1.738
p.offered           4.0331     0.2480    3.0913     5.262

Concordance= 0.933  (se = 0.015 )
Rsquare= 0.353   (max possible= 0.483 )
Likelihood ratio test= 523.2  on 4 df,   p=<2e-16
Wald test            = 107.8  on 4 df,   p=<2e-16
Score (logrank) test = 413  on 4 df,   p=<2e-16


>  #### FE Models
>  screenreg(list(fe2, fe1, cl1, cl2, cl3))

=================================================================================
                  Model 1      Model 2      Model 3      Model 4      Model 5    
---------------------------------------------------------------------------------
ideo.diff           -0.17 ***    -0.18 ***    -0.26 ***                          
                    (0.03)       (0.03)       (0.05)                             
same.g               0.20 *       0.22 *       0.31                              
                    (0.09)       (0.09)       (0.17)                             
same.r              -0.18 *      -0.22 *      -0.33                              
                    (0.09)       (0.10)       (0.19)                             
ideo.diff.o                       0.05         0.10                              
                                 (0.03)       (0.06)                             
same.g.o                         -0.11        -0.07                              
                                 (0.13)       (0.24)                             
same.r.o                          0.15         0.46 *                            
                                 (0.13)       (0.23)                             
prop.ideo.diff                                             -0.17 ***     0.01    
                                                           (0.05)       (0.10)   
prop.same.gender                                           -0.04        -0.37    
                                                           (0.18)       (0.32)   
prop.same.race                                              0.16        -0.05    
                                                           (0.18)       (0.31)   
p.offered                                                                1.39 ***
                                                                        (0.14)   
---------------------------------------------------------------------------------
R^2                  0.01         0.01         0.01         0.01         0.35    
Adj. R^2            -0.04        -0.04                                           
Num. obs.         3600         3600         3600         1200         1200       
AIC                                         1049.54       785.99       276.65    
Max. R^2                                       0.26         0.48         0.48    
Num. events                                 3291          837          837       
Missings                                       0            0            0       
=================================================================================
*** p < 0.001, ** p < 0.01, * p < 0.05

>  ### Printing all models as 1 table
>  texreg(file= paste0(bd, "FE_all_models.tex", sep=""), 
+         list(fe2.pse, fe1.pse, cl1, cl2, cl3), 
+         custom.model.names = c("A.M1 Offer FE", "A.M2 Offer FE", "A.M3 Partner C.logit", "A.M4 Vote C.logit", "A.M5 Vote C.logit"), 
+         custom.coef.names = c("Ideo. Dist. P-R", "Same Gender", "Same Race", 
+                               "Ideo. Dist. P-3rd", "Same Gender P-3rd", "Same Race P-3rd", 
+                               "Ideo. Dist. P-R", "Same Gender", "Same Race", "Amount Offered" ),
+         caption = "Fixed effects regression models on amount offered to other participant (Offer) and conditional logit models
+         on whether a participant was chosen as coalition partner by giving more than zero (Partner), and whether 
+         a participant chose to accept the offer they received (Vote).",
+         label="table:base_model",
+         booktabs = F, dcolumn = F) 
The table was written to the file 'C:/Users/Denise Laroze/Dropbox/group ID in legislative bargaining/Social Identity 2019-20/Data analysis/FE_all_models.tex'.


>  ########################
>  ###### Effect of Time Table A.4
>  ########################
>  
>  treat.r1.dfl.o.05<-subset(treat.r1.dfl.o, userperiod<6)

>  treat.r1.dfl.o.610<-subset(treat.r1.dfl.o, userperiod>=6)

>  treat.r1.df.o.05<-subset(treat.r1.df.o, userperiod<6)

>  treat.r1.df.o.610<-subset(treat.r1.df.o, userperiod>=6)

>  #DV: Offer  - M3 basic covariates + 3er player controles + proposer characteristics
>  t1.lm.M3<-ols(prop1~ideo.diff + same.g+same.r+ ideo.diff.o + same.g.o + same.r.o + sp + gender + race2 , data=treat.r1.dfl.o.05, y=T, x=T)

>  t1.lm.M3.cl<-robcov(t1.lm.M3, treat.r1.dfl.o.05$umg)

>  t2.lm.M3<-ols(prop1~ideo.diff + same.g+same.r+ ideo.diff.o + same.g.o + same.r.o + sp + gender + race2 , data=treat.r1.dfl.o.610, y=T, x=T)

>  t2.lm.M3.cl<-robcov(t2.lm.M3, treat.r1.dfl.o.610$umg)

>  ##### Partner and vote models
>  
>  #### DV: M4 Non-Zero offer ==1 Partner Selection 
>  t1.log.p <- lrm(non.zero ~ ideo.diff+  same.g + same.r + ideo.diff.o+ same.g.o +same.r.o + sp + gender + race2 , data=treat.r1.dfl.o.05, x=T, y=T ) 

>  t1.log.p.cl <- robcov(t1.log.p, treat.r1.dfl.o.05$umg) 

>  t2.log.p <- lrm(non.zero ~ ideo.diff+  same.g + same.r + ideo.diff.o+ same.g.o +same.r.o + sp + gender + race2 , data=treat.r1.dfl.o.610, x=T, y=T ) 

>  t2.log.p.cl <- robcov(t2.log.p, treat.r1.dfl.o.610$umg) 

>  #DV: Vote  - M6  Model on acceptance of offers accounting for amount offered 
>  t1.log.v2<- lrm(vote ~  prop.ideo.diff + prop.same.gender + prop.same.race + sp + gender + race2 + p.offered, data=treat.r1.df.o.05, x=T, y=T)

>  t1.log.v2.cl <- robcov(t1.log.v2, treat.r1.df.o.05$umg)

>  t2.log.v2<- lrm(vote ~  prop.ideo.diff + prop.same.gender + prop.same.race + sp + gender + race2 + p.offered, data=treat.r1.df.o.610, x=T, y=T)

>  t2.log.v2.cl <- robcov(t2.log.v2, treat.r1.df.o.610$umg)

>  rm(treat.r1.dfl.o.05, treat.r1.dfl.o.610, treat.r1.df.o.05, treat.r1.df.o.610 )

>  ########################################### 
>  ############### Table Time ################
>  ########################################### 
>  
>  screenreg(list(t1.lm.M3.cl, t2.lm.M3.cl, t1.log.p.cl, t2.log.p.cl, t1.log.v2.cl, t2.log.v2.cl))

============================================================================================
                  Model 1      Model 2      Model 3      Model 4      Model 5     Model 6   
--------------------------------------------------------------------------------------------
Intercept            5.33 ***     5.27 ***     3.63 ***     3.11 ***   -4.14 ***   -2.60 ***
                    (0.20)       (0.19)       (0.66)       (0.53)      (1.01)      (0.72)   
ideo.diff           -0.11 **     -0.20 ***    -0.23 **     -0.23 **                         
                    (0.04)       (0.06)       (0.08)       (0.08)                           
same.g               0.01         0.31         0.14         0.41 *                          
                    (0.11)       (0.20)       (0.19)       (0.16)                           
same.r              -0.08        -0.23        -0.29        -0.28                            
                    (0.14)       (0.15)       (0.27)       (0.15)                           
ideo.diff.o          0.04         0.09 *       0.02         0.12 **                         
                    (0.02)       (0.04)       (0.07)       (0.04)                           
same.g.o             0.00        -0.25         0.35        -0.19                            
                    (0.13)       (0.15)       (0.24)       (0.21)                           
same.r.o            -0.05         0.23 *      -0.08         0.31                            
                    (0.10)       (0.11)       (0.30)       (0.23)                           
sp                  -0.03        -0.06 *       0.01        -0.06       -0.12       -0.06    
                    (0.02)       (0.03)       (0.08)       (0.05)      (0.12)      (0.08)   
gender=male          0.01        -0.02        -0.81 *      -0.80 **     0.07       -0.08    
                    (0.12)       (0.12)       (0.36)       (0.26)      (0.47)      (0.41)   
race2=white          0.10         0.03        -0.00        -0.27        0.19       -0.56    
                    (0.08)       (0.09)       (0.33)       (0.25)      (0.38)      (0.37)   
prop.ideo.diff                                                         -0.14        0.05    
                                                                       (0.08)      (0.09)   
prop.same.gender                                                       -0.34       -0.17    
                                                                       (0.33)      (0.34)   
prop.same.race                                                         -0.01        0.30    
                                                                       (0.23)      (0.25)   
p.offered                                                               1.29 ***    0.87 ***
                                                                       (0.17)      (0.10)   
--------------------------------------------------------------------------------------------
Num. obs.         1800         1800         1800         1800         600         600       
R^2                  0.01         0.02                                                      
Adj. R^2             0.00         0.02                                                      
L.R.                17.85        39.83        44.51        72.21      318.26      328.91    
Pseudo R^2                                     0.07         0.08        0.60        0.59    
============================================================================================
*** p < 0.001, ** p < 0.01, * p < 0.05

>  ### Printing all models as 1 table
>  texreg(file= paste0(bd, "time_all_models.tex", sep=""), 
+         list(t1.lm.M3.cl, t2.lm.M3.cl, t1.log.p.cl, t2.log.p.cl, t1.log.v2.cl, t2.log.v2.cl), 
+         custom.model.names = c("A.M3 Offer p0-5", "A.M3 Offer p6-10", "A.M4 Partner p0-5", 
+                                "A.M4 Partner  p6-10", "A.M6 Vote p0-5", "A.M6 Vote  p6-10"), 
+         custom.coef.names = c("Intercept", "Ideo. Dist. P-R", "Same Gender", "Same Race", 
+                               "Ideo. Dist. P-3rd", "Same Gender P-3rd", "Same Race P-3rd", 
+                               "Self-Placement", "Proposer-Male", "Proposer-White", 
+                               "Ideo. Dist. P-R", "Same Gender", "Same Race", "Amount Offered" ),
+         caption = "Regression models on amount offered to other participant (Offer), whether a 
+         participant was chosen as coalition partner by giving more than zero (Partner), and whether 
+         a participant chose to accept the offer they received (Vote). The table presents results for
+         periods 0--5 and 6--10, to account for learning effects.",
+         label="table:time_model",
+         booktabs = F, dcolumn = F)
The table was written to the file 'C:/Users/Denise Laroze/Dropbox/group ID in legislative bargaining/Social Identity 2019-20/Data analysis/time_all_models.tex'.


>  ###########################################
>  
>  #### Interaction with mixed gender and race
>  #### Subsets of data with and without
>  #### Mixed gender and race groups Table A.5
>  ######################################
>  
>  treat.r1.dfl.o.g<-subset(treat.r1.dfl.o, g.gender>0 & g.gender<3)

>  treat.r1.dfl.o.r<-subset(treat.r1.dfl.o, g.race>0 & g.race<3)

>  treat.r1.df.o.g<-subset(treat.r1.df.o, g.gender>0 & g.gender<3)

>  treat.r1.df.o.r<-subset(treat.r1.df.o, g.race>0 & g.race<3)

>  #### Interaction models
>  #DV: Offer  - M3 basic covariates + 3er player controles + proposer characteristics
>  int.lm.M3<-ols(prop1~ideo.diff + same.g*g.gender + same.r*g.race + ideo.diff.o + same.g.o + same.r.o + sp + gender + race2 , data=treat.r1.dfl.o, y=T, x=T)

>  int.lm.M3.cl<-robcov(int.lm.M3, treat.r1.dfl.o$umg)

>  #Visualization
>  #lp <- ggplot(data=treat.r1.dfl.o, aes(x=g.gender, y=prop1, shape=factor(same.g), 
>  #                            colour=factor(same.g))) + stat_smooth(method="lm") + geom_point()
>  #lp
>  
>  
>  #### Only mixed gender groups
>  ##### Partner and vote models
>  # DV: M4 Non-Zero offer ==1 Partner Selection 
>  int.log.p <- lrm(non.zero ~ ideo.diff+  same.g*g.gender + same.r*g.race + ideo.diff.o+ same.g.o +same.r.o + sp + gender + race2 , data=treat.r1.dfl.o, x=T, y=T ) 

>  int.log.p.cl <- robcov(int.log.p, treat.r1.dfl.o$umg) 

>  #DV: Vote  - M6  Model on acceptance of offers accounting for amount offered 
>  int.log.v2<- lrm(vote ~  prop.ideo.diff + prop.same.gender*g.gender + prop.same.race*g.race + sp + gender + race2 + p.offered, data=treat.r1.df.o, x=T, y=T)

>  int.log.v2.cl <- robcov(int.log.v2, treat.r1.df.o$umg)

>  screenreg(list(int.lm.M3.cl, int.log.p.cl, int.log.v2.cl))

==================================================================
                             Model 1      Model 2      Model 3    
------------------------------------------------------------------
Intercept                       5.08 ***     3.15 ***    -3.38 ***
                               (0.36)       (0.57)       (0.84)   
ideo.diff                      -0.16 **     -0.22 **              
                               (0.05)       (0.07)                
same.g                          0.51         0.32                 
                               (0.37)       (0.47)                
g.gender                        0.12         0.02        -0.13    
                               (0.15)       (0.27)       (0.34)   
same.r                         -0.04        -0.25                 
                               (0.33)       (0.58)                
g.race                          0.02         0.10         0.18    
                               (0.14)       (0.32)       (0.22)   
ideo.diff.o                     0.07 *       0.08 *               
                               (0.03)       (0.04)                
same.g.o                       -0.12         0.00                 
                               (0.12)       (0.19)                
same.r.o                        0.11         0.18                 
                               (0.08)       (0.22)                
sp                             -0.05 *      -0.04        -0.07    
                               (0.02)       (0.06)       (0.08)   
gender=male                    -0.09        -0.79 **      0.28    
                               (0.13)       (0.27)       (0.39)   
race2=white                     0.09        -0.24        -0.29    
                               (0.09)       (0.18)       (0.36)   
same.g * g.gender              -0.20        -0.02                 
                               (0.17)       (0.26)                
same.r * g.race                -0.06        -0.03                 
                               (0.16)       (0.34)                
prop.ideo.diff                                           -0.03    
                                                         (0.07)   
prop.same.gender                                         -1.21    
                                                         (0.76)   
prop.same.race                                            0.23    
                                                         (0.55)   
p.offered                                                 1.01 ***
                                                         (0.12)   
prop.same.gender * g.gender                               0.49    
                                                         (0.40)   
prop.same.race * g.race                                  -0.02    
                                                         (0.30)   
------------------------------------------------------------------
Num. obs.                    3600         3600         1200       
R^2                             0.02                              
Adj. R^2                        0.01                              
L.R.                           55.93       105.96       641.28    
Pseudo R^2                                   0.07         0.59    
==================================================================
*** p < 0.001, ** p < 0.01, * p < 0.05

>  ### Printing interaction with gender and race composition of groups
>  texreg(file= paste0(bd, "int_gender_race_models.tex", sep=""), 
+         list(int.lm.M3.cl, int.log.p.cl, int.log.v2.cl), 
+         custom.model.names = c("A.M3 Offer Int group type", "A.M4 Partner Int group type"
+                                , "A.M6 Vote Int group type"), 
+         custom.coef.names = c("Intercept", "Ideo. Dist. P-R", "Same Gender", "N.Female",  
+                               "Same Race", "N. White", 
+                               "Ideo. Dist. P-3rd", "Same Gender P-3rd", "Same Race P-3rd", 
+                               "Self-Placement", "Proposer-Male", "Proposer-White", 
+                               "S.Gender x N.Female", "S.Race x N. White",
+                               "Ideo. Dist. P-R", "Same Gender", "Same Race", "Amount Offered",
+                               "S.Gender x N.Female", "S.Race x N. White"),
+         reorder.coef=c( 1, 2, 3, 4, 13, 5, 6, 14, 7, 8, 9, 10, 11, 12, 15),
+         caption = "Regression models on amount offered to other participant (Offer), whether a 
+         participant was chosen as coalition partner by giving more than zero (Partner), and whether 
+         a participant chose to accept the offer they received (Vote). The table presents results of interactions
+         between same gender and the number of women in a group and same race and a number of white participants
+         in the group.",
+         label="table:int_gender_race_models",
+         booktabs = F, dcolumn = F)
The table was written to the file 'C:/Users/Denise Laroze/Dropbox/group ID in legislative bargaining/Social Identity 2019-20/Data analysis/int_gender_race_models.tex'.


>  #### Only mixed gender groups
>  #DV: Offer  - M3 basic covariates + 3er player controles + proposer characteristics
>  g.lm.M3<-ols(prop1~ideo.diff + same.g+same.r+ ideo.diff.o + same.g.o + same.r.o + sp + gender + race2 , data=treat.r1.dfl.o.g, y=T, x=T)

>  g.lm.M3.cl<-robcov(g.lm.M3, treat.r1.dfl.o.g$umg)

>  ##### Partner and vote models
>  # DV: M4 Non-Zero offer ==1 Partner Selection 
>  g.log.p <- lrm(non.zero ~ ideo.diff+  same.g + same.r + ideo.diff.o+ same.g.o +same.r.o + sp + gender + race2 , data=treat.r1.dfl.o.g, x=T, y=T ) 

>  g.log.p.cl <- robcov(g.log.p, treat.r1.dfl.o.g$umg) 

>  #DV: Vote  - M6  Model on acceptance of offers accounting for amount offered 
>  g.log.v2<- lrm(vote ~  prop.ideo.diff + prop.same.gender + prop.same.race + sp + gender + race2 + p.offered, data=treat.r1.df.o.g, x=T, y=T)

>  g.log.v2.cl <- robcov(g.log.v2, treat.r1.df.o.g$umg)

>  screenreg(list(g.lm.M3.cl, g.log.p.cl, g.log.v2.cl))

======================================================
                  Model 1      Model 2      Model 3   
------------------------------------------------------
Intercept            5.36 ***     3.25 ***   -2.76 ***
                    (0.17)       (0.57)      (0.81)   
ideo.diff           -0.18 ***    -0.25 ***            
                    (0.05)       (0.07)               
same.g               0.27         0.29                
                    (0.18)       (0.20)               
same.r              -0.33 *      -0.34                
                    (0.16)       (0.26)               
ideo.diff.o          0.07 *       0.09 *              
                    (0.03)       (0.04)               
same.g.o            -0.09        -0.03                
                    (0.12)       (0.19)               
same.r.o             0.16         0.31                
                    (0.11)       (0.25)               
sp                  -0.04        -0.02       -0.03    
                    (0.02)       (0.06)      (0.10)   
gender=male         -0.02        -0.80 **     0.13    
                    (0.11)       (0.28)      (0.34)   
race2=white          0.05        -0.19       -0.17    
                    (0.10)       (0.28)      (0.39)   
prop.ideo.diff                               -0.07    
                                             (0.07)   
prop.same.gender                             -0.48    
                                             (0.33)   
prop.same.race                                0.08    
                                             (0.22)   
p.offered                                     0.90 ***
                                             (0.11)   
------------------------------------------------------
Num. obs.         2346         2346         782       
R^2                  0.02                             
Adj. R^2             0.02                             
L.R.                51.09        79.52      400.74    
Pseudo R^2                        0.07        0.56    
======================================================
*** p < 0.001, ** p < 0.01, * p < 0.05

>  ### Printing mixed gender models 
>  texreg(#file= paste0(bd, "m_gender_models.tex", sep=""), 
+    list(g.lm.M3.cl, g.log.p.cl, g.log.v2.cl), 
+    custom.model.names = c("A.M3 Offer Mix gender", "A.M4 Partner  Mix gender"
+                           , "A.M6 Vote Mix gender"), 
+    custom.coef.names = c("Intercept", "Ideo. Dist. P-R", "Same Gender", "Same Race", 
+                          "Ideo. Dist. P-3rd", "Same Gender P-3rd", "Same Race P-3rd", 
+                          "Self-Placement", "Proposer-Male", "Proposer-White", 
+                          "Ideo. Dist. P-R", "Same Gender", "Same Race", "Amount Offered" ),
+    caption = "Regression models on amount offered to other participant (Offer), whether a 
+    participant was chosen as coalition partner by giving more than zero (Partner), and whether 
+    a participant chose to accept the offer they received (Vote). The table presents results a subset of
+    the data that only includes mixed gender groups.",
+    label="table:m_gender_model",
+    booktabs = F, dcolumn = F)

\begin{table}
\begin{center}
\begin{tabular}{l c c c }
\hline
 & A.M3 Offer Mix gender & A.M4 Partner  Mix gender & A.M6 Vote Mix gender \\
\hline
Intercept         & $5.36^{***}$  & $3.25^{***}$  & $-2.76^{***}$ \\
                  & $(0.17)$      & $(0.57)$      & $(0.81)$      \\
Ideo. Dist. P-R   & $-0.18^{***}$ & $-0.25^{***}$ & $-0.07$       \\
                  & $(0.05)$      & $(0.07)$      & $(0.07)$      \\
Same Gender       & $0.27$        & $0.29$        & $-0.48$       \\
                  & $(0.18)$      & $(0.20)$      & $(0.33)$      \\
Same Race         & $-0.33^{*}$   & $-0.34$       & $0.08$        \\
                  & $(0.16)$      & $(0.26)$      & $(0.22)$      \\
Ideo. Dist. P-3rd & $0.07^{*}$    & $0.09^{*}$    &               \\
                  & $(0.03)$      & $(0.04)$      &               \\
Same Gender P-3rd & $-0.09$       & $-0.03$       &               \\
                  & $(0.12)$      & $(0.19)$      &               \\
Same Race P-3rd   & $0.16$        & $0.31$        &               \\
                  & $(0.11)$      & $(0.25)$      &               \\
Self-Placement    & $-0.04$       & $-0.02$       & $-0.03$       \\
                  & $(0.02)$      & $(0.06)$      & $(0.10)$      \\
Proposer-Male     & $-0.02$       & $-0.80^{**}$  & $0.13$        \\
                  & $(0.11)$      & $(0.28)$      & $(0.34)$      \\
Proposer-White    & $0.05$        & $-0.19$       & $-0.17$       \\
                  & $(0.10)$      & $(0.28)$      & $(0.39)$      \\
Amount Offered    &               &               & $0.90^{***}$  \\
                  &               &               & $(0.11)$      \\
\hline
Num. obs.         & 2346          & 2346          & 782           \\
R$^2$             & 0.02          &               &               \\
Adj. R$^2$        & 0.02          &               &               \\
L.R.              & 51.09         & 79.52         & 400.74        \\
Pseudo R$^2$      &               & 0.07          & 0.56          \\
\hline
\multicolumn{4}{l}{\scriptsize{$^{***}p<0.001$, $^{**}p<0.01$, $^*p<0.05$}}
\end{tabular}
\caption{Regression models on amount offered to other participant (Offer), whether a 
   participant was chosen as coalition partner by giving more than zero (Partner), and whether 
   a participant chose to accept the offer they received (Vote). The table presents results a subset of
   the data that only includes mixed gender groups.}
\label{table:m_gender_model}
\end{center}
\end{table}

>  #### Only mixed race groups
>  #DV: Offer  - M3 basic covariates + 3er player controles + proposer characteristics
>  r.lm.M3<-ols(prop1~ideo.diff + same.g+same.r+ ideo.diff.o + same.g.o + same.r.o + sp + gender + race2 , data=treat.r1.dfl.o.r, y=T, x=T)

>  r.lm.M3.cl<-robcov(r.lm.M3, treat.r1.dfl.o.r$umg)

>  ##### Partner and vote models
>  # DV: M4 Non-Zero offer ==1 Partner Selection 
>  r.log.p <- lrm(non.zero ~ ideo.diff+  same.g + same.r + ideo.diff.o+ same.g.o +same.r.o + sp + gender + race2 , data=treat.r1.dfl.o.r, x=T, y=T ) 

>  r.log.p.cl <- robcov(r.log.p, treat.r1.dfl.o.r$umg) 

>  #DV: Vote  - M6  Model on acceptance of offers accounting for amount offered 
>  r.log.v2<- lrm(vote ~  prop.ideo.diff + prop.same.gender + prop.same.race + sp + gender + race2 + p.offered, data=treat.r1.df.o.r, x=T, y=T)

>  r.log.v2.cl <- robcov(r.log.v2, treat.r1.df.o.r$umg)

>  rm(treat.r1.dfl.o.g, treat.r1.dfl.o.r, treat.r1.df.o.g, treat.r1.df.o.r)

>  screenreg(list(r.lm.M3.cl, r.log.p.cl, r.log.v2.cl))

======================================================
                  Model 1      Model 2      Model 3   
------------------------------------------------------
Intercept            5.30 ***     3.27 ***   -2.68 ***
                    (0.20)       (0.53)      (0.70)   
ideo.diff           -0.17 **     -0.20                
                    (0.06)       (0.10)               
same.g               0.16         0.37 *              
                    (0.15)       (0.18)               
same.r              -0.21        -0.34 *              
                    (0.16)       (0.15)               
ideo.diff.o          0.06         0.07                
                    (0.04)       (0.06)               
same.g.o            -0.20         0.01                
                    (0.16)       (0.22)               
same.r.o             0.10         0.11                
                    (0.09)       (0.26)               
sp                  -0.03        -0.03       -0.07    
                    (0.02)       (0.07)      (0.10)   
gender=male          0.08        -0.92 ***    0.07    
                    (0.13)       (0.24)      (0.39)   
race2=white          0.04        -0.17       -0.32    
                    (0.08)       (0.22)      (0.32)   
prop.ideo.diff                               -0.10    
                                             (0.08)   
prop.same.gender                             -0.08    
                                             (0.26)   
prop.same.race                                0.21    
                                             (0.19)   
p.offered                                     0.93 ***
                                             (0.13)   
------------------------------------------------------
Num. obs.         2334         2334         778       
R^2                  0.02                             
Adj. R^2             0.01                             
L.R.                39.87        77.13      370.63    
Pseudo R^2                        0.08        0.54    
======================================================
*** p < 0.001, ** p < 0.01, * p < 0.05

>  ### Printing mixed race models 
>  texreg(#file= paste0(bd, "m_race_models.tex", sep=""), 
+    list(r.lm.M3.cl, r.log.p.cl, r.log.v2.cl), 
+    custom.model.names = c("A.M3 Offer Mix gender", "A.M4 Partner  Mix gender"
+                           , "A.M6 Vote Mix gender"), 
+    custom.coef.names = c("Intercept", "Ideo. Dist. P-R", "Same Gender", "Same Race", 
+                          "Ideo. Dist. P-3rd", "Same Gender P-3rd", "Same Race P-3rd", 
+                          "Self-Placement", "Proposer-Male", "Proposer-White", 
+                          "Ideo. Dist. P-R", "Same Gender", "Same Race", "Amount Offered" ),
+    caption = "Regression models on amount offered to other participant (Offer), whether a 
+    participant was chosen as coalition partner by giving more than zero (Partner), and whether 
+    a participant chose to accept the offer they received (Vote). The table presents results a subset of
+    the data that only includes mixed race groups.",
+    label="table:m_race_model",
+    booktabs = F, dcolumn = F)

\begin{table}
\begin{center}
\begin{tabular}{l c c c }
\hline
 & A.M3 Offer Mix gender & A.M4 Partner  Mix gender & A.M6 Vote Mix gender \\
\hline
Intercept         & $5.30^{***}$ & $3.27^{***}$  & $-2.68^{***}$ \\
                  & $(0.20)$     & $(0.53)$      & $(0.70)$      \\
Ideo. Dist. P-R   & $-0.17^{**}$ & $-0.20$       & $-0.10$       \\
                  & $(0.06)$     & $(0.10)$      & $(0.08)$      \\
Same Gender       & $0.16$       & $0.37^{*}$    & $-0.08$       \\
                  & $(0.15)$     & $(0.18)$      & $(0.26)$      \\
Same Race         & $-0.21$      & $-0.34^{*}$   & $0.21$        \\
                  & $(0.16)$     & $(0.15)$      & $(0.19)$      \\
Ideo. Dist. P-3rd & $0.06$       & $0.07$        &               \\
                  & $(0.04)$     & $(0.06)$      &               \\
Same Gender P-3rd & $-0.20$      & $0.01$        &               \\
                  & $(0.16)$     & $(0.22)$      &               \\
Same Race P-3rd   & $0.10$       & $0.11$        &               \\
                  & $(0.09)$     & $(0.26)$      &               \\
Self-Placement    & $-0.03$      & $-0.03$       & $-0.07$       \\
                  & $(0.02)$     & $(0.07)$      & $(0.10)$      \\
Proposer-Male     & $0.08$       & $-0.92^{***}$ & $0.07$        \\
                  & $(0.13)$     & $(0.24)$      & $(0.39)$      \\
Proposer-White    & $0.04$       & $-0.17$       & $-0.32$       \\
                  & $(0.08)$     & $(0.22)$      & $(0.32)$      \\
Amount Offered    &              &               & $0.93^{***}$  \\
                  &              &               & $(0.13)$      \\
\hline
Num. obs.         & 2334         & 2334          & 778           \\
R$^2$             & 0.02         &               &               \\
Adj. R$^2$        & 0.01         &               &               \\
L.R.              & 39.87        & 77.13         & 370.63        \\
Pseudo R$^2$      &              & 0.08          & 0.54          \\
\hline
\multicolumn{4}{l}{\scriptsize{$^{***}p<0.001$, $^{**}p<0.01$, $^*p<0.05$}}
\end{tabular}
\caption{Regression models on amount offered to other participant (Offer), whether a 
   participant was chosen as coalition partner by giving more than zero (Partner), and whether 
   a participant chose to accept the offer they received (Vote). The table presents results a subset of
   the data that only includes mixed race groups.}
\label{table:m_race_model}
\end{center}
\end{table}

>  ########################### 
>  ######## Bootstraping Figures A.2-A.6
>  ###########################
>  
>  c.data<-treat.r1.dfl.o[, c( "prop1", "non.zero",  "ideo.diff", "ideo.diff.o", "same.g", "same.r", "same.g.o", "same.r.o", "sp",
+                              "gender", "race2", "umg")]

>  c.data$mg_id<- as.numeric(factor(c.data$umg))

>  #Bootstrapped coefficients for Amount Offered (M3)
>  boot_mg_lm<-function(R, eq){
+    
+    var.1<-rep(NA, R)
+    var.2<-rep(NA, R)
+    var.3<-rep(NA, R)
+    var.4<-rep(NA, R)
+    var.5<-rep(NA, R)
+    var.6<-rep(NA, R)
+    
+    for (i in 1:R){
+      # get a vector with all clusters
+      c <- sort(unique(c.data$mg_id))
+      
+      # group the data points per cluster
+      clust.group <- function(c) {
+        c.data[c.data$mg_id==c,]
+      }
+      
+      clust.list <- lapply(c,clust.group)
+      
+      # resample clusters with replacement
+      c.sample <- sample(c, replace=T)
+      
+      clust.sample <- clust.list[c.sample]
+      
+      clust.size <- 120
+      
+      # combine the cluster list back to a single data matrix
+      clust.bind <- function(c) {
+        matrix(unlist(c),nrow=clust.size)
+      }
+      
+      c.boot <- do.call(rbind,lapply(clust.sample,clust.bind))
+      
+      # Just to maintain columns name
+      colnames(c.boot) <- names(c.data)
+      
+      c.boot<-as.data.frame(c.boot)
+      # the new data set (single bootstrap replicate)
+      c.boot$prop1<-as.numeric(c.boot$prop1)
+      c.boot$ideo.diff<-as.numeric(c.boot$ideo.diff)
+      c.boot$ideo.diff.o<-as.numeric(c.boot$ideo.diff.o)
+      c.boot$sp<-as.numeric(c.boot$sp)
+      
+      lm<-lm(eq,  c.boot)
+      var.1[i]<-lm$coef[2]
+      var.2[i]<-lm$coef[3]
+      var.3[i]<-lm$coef[4]
+      var.4[i]<-lm$coef[5]
+      var.5[i]<-lm$coef[6]
+      var.6[i]<-lm$coef[7]
+      results<-cbind(var.1,var.2, var.3, var.4,var.5, var.6 )
+    }
+    
+    return(results)
+  }

>  results<-boot_mg_lm(10000, eq=prop1~ideo.diff + ideo.diff.o + same.g  + same.g.o + same.r + same.r.o + sp + gender + race2)

>  coef.ideo.diff<-results[,1]

>  coef.ideo.diff.o<-results[, 2]

>  png(filename=paste0(bd, "boot_ideodiff_mg.png", sep=""))

>  mean<-mean(coef.ideo.diff)

>  sd<-sd(coef.ideo.diff)

>  ll<-mean-1.96*sd

>  ul<-mean+1.96*sd

>  hist(coef.ideo.diff, freq=F, xlab="Bootstrapped Coef. for Ideo. Dist.  P-R", main="")

>  abline(v=ll, col = "red", lwd = 1)

>  abline(v=ul, col = "red", lwd = 1)

>  dev.off() 
RStudioGD 
        2 

>  png(filename=paste0(bd, "boot_ideodiff3rd_mg.png", sep=""))

>  mean<-mean(coef.ideo.diff.o)

>  sd<-sd(coef.ideo.diff.o)

>  ll.o<-mean-1.96*sd

>  ul.o<-mean+1.96*sd

>  hist(coef.ideo.diff.o, freq=F, xlab="Bootstrapped Coef. for Ideo. Dist. P-3rd", main="")

>  abline(v=ll.o, col = "red", lwd = 1)

>  abline(v=ul.o, col = "red", lwd = 1)

>  dev.off()  
RStudioGD 
        2 

>  #### Bootstrapped coefficients for Partner Models (M4)
>  
>  boot_mg_glm<-function(R, eq){
+    
+    var.1<-rep(NA, R)
+    var.2<-rep(NA, R)
+    var.3<-rep(NA, R)
+    var.4<-rep(NA, R)
+    var.5<-rep(NA, R)
+    var.6<-rep(NA, R)
+    
+    for (i in 1:R){
+      # get a vector with all clusters
+      c <- sort(unique(c.data$mg_id))
+      
+      # group the data points per cluster
+      clust.group <- function(c) {
+        c.data[c.data$mg_id==c,]
+      }
+      
+      clust.list <- lapply(c,clust.group)
+      
+      # resample clusters with replacement
+      c.sample <- sample(c, replace=T)
+      
+      clust.sample <- clust.list[c.sample]
+      
+      clust.size <- 120
+      
+      # combine the cluster list back to a single data matrix
+      clust.bind <- function(c) {
+        matrix(unlist(c),nrow=clust.size)
+      }
+      
+      c.boot <- do.call(rbind,lapply(clust.sample,clust.bind))
+      
+      # Just to maintain columns name
+      colnames(c.boot) <- names(c.data)
+      
+      c.boot<-as.data.frame(c.boot)
+      # the new data set (single bootstrap replicate)
+      c.boot$prop1<-as.numeric(c.boot$prop1)
+      c.boot$ideo.diff<-as.numeric(c.boot$ideo.diff)
+      c.boot$ideo.diff.o<-as.numeric(c.boot$ideo.diff.o)
+      c.boot$sp<-as.numeric(c.boot$sp)
+      
+      glm<-glm(eq,  c.boot, family = "binomial")
+      var.1[i]<-glm$coef[2]
+      var.2[i]<-glm$coef[3]
+      var.3[i]<-glm$coef[4]
+      var.4[i]<-glm$coef[5]
+      var.5[i]<-glm$coef[6]
+      var.6[i]<-glm$coef[7]
+      results.glm<-cbind(var.1,var.2, var.3, var.4,var.5, var.6 )
+    }
+    
+    return(results.glm)
+  }

>  results.glm<-boot_mg_glm(10000, eq=non.zero~ideo.diff + ideo.diff.o + same.g  + same.g.o + same.r + same.r.o + sp + gender + race2)

>  coef.glm.ideo.diff<-results.glm[,1]

>  coef.glm.ideo.diff.o<-results.glm[, 2]

>  coef.glm.gender<-results.glm[, 3]

>  png(filename=paste0(bd, "boot_p_ideodiff_mg.png", sep=""))

>  mean<-mean(coef.glm.ideo.diff)

>  sd<-sd(coef.glm.ideo.diff)

>  ll<-mean-1.96*sd

>  ul<-mean+1.96*sd

>  hist(coef.glm.ideo.diff, freq=F, xlab="Bootstrapped Coef. for Ideo. Dist. P-R", main="")

>  abline(v=ll, col = "red", lwd = 1)

>  abline(v=ul, col = "red", lwd = 1)

>  dev.off() 
RStudioGD 
        2 

>  png(filename=paste0(bd, "boot_p_ideodiff3rd_mg.png", sep=""))

>  mean<-mean(coef.glm.ideo.diff.o)

>  sd<-sd(coef.glm.ideo.diff.o)

>  ll.o<-mean-1.96*sd

>  ul.o<-mean+1.96*sd

>  hist(coef.glm.ideo.diff.o, freq=F, xlab="Bootstrapped Coef. for Ideo. Dist. P-3rd", main="")

>  abline(v=ll.o, col = "red", lwd = 1)

>  abline(v=ul.o, col = "red", lwd = 1)

>  dev.off()  
RStudioGD 
        2 

>  png(filename=paste0(bd, "boot_p_sgender_mg.png", sep=""))

>  mean<-mean(coef.glm.gender)

>  sd<-sd(coef.glm.gender)

>  ll<-mean-1.96*sd

>  ul<-mean+1.96*sd

>  hist(coef.glm.gender, freq=F, xlab="Bootstrapped Coef. for Same Gender", main="")

>  abline(v=ll, col = "red", lwd = 1)

>  abline(v=ul, col = "red", lwd = 1)

>  dev.off() 
RStudioGD 
        2 

>  #####
>   ##############################################
>  #### Model with Disaggregated Race Categories A.6
>  ##############################################
>  lm.M1.race<-ols(prop1~ideo.diff + same.g + same.r.all, data=treat.r1.dfl.o, y=T, x=T)

>  lm.M1.race.cl<-robcov(lm.M1.race, treat.r1.dfl.o$umg)

>  lm.M1.race.cl
Linear Regression Model
 
 ols(formula = prop1 ~ ideo.diff + same.g + same.r.all, data = treat.r1.dfl.o, 
     x = T, y = T)
 
                                 Model Likelihood     Discrimination    
                                    Ratio Test           Indexes        
 Obs                    3600     LR chi2     39.14    R2       0.011    
 sigma                2.2653     d.f.            3    R2 adj   0.010    
 d.f.                   3596     Pr(> chi2) 0.0000    g        0.266    
 Cluster ontreat.r1.dfl.o$umg                                           
 Clusters                 30                                            
 
 Residuals
 
     Min      1Q  Median      3Q     Max 
 -5.2482 -0.6192  0.5453  1.1031  8.6188 
 
 
            Coef    S.E.   t     Pr(>|t|)
 Intercept   5.1547 0.1494 34.51 <0.0001 
 ideo.diff  -0.1289 0.0403 -3.20 0.0014  
 same.g      0.0934 0.1350  0.69 0.4890  
 same.r.all -0.1445 0.1185 -1.22 0.2229  
 

>  lm.M2.race<-ols(prop1~ideo.diff + ideo.diff.o + same.g + + same.g.o +same.r.all+ same.g.o + same.r.o.all, data=treat.r1.dfl.o, y=T, x=T)

>  lm.M2.race.cl<-robcov(lm.M2.race, treat.r1.dfl.o$umg)

>  lm.M2.race.cl
Linear Regression Model
 
 ols(formula = prop1 ~ ideo.diff + ideo.diff.o + same.g + +same.g.o + 
     same.r.all + same.g.o + same.r.o.all, data = treat.r1.dfl.o, 
     x = T, y = T)
 
                                 Model Likelihood     Discrimination    
                                    Ratio Test           Indexes        
 Obs                    3600     LR chi2     50.40    R2       0.014    
 sigma                2.2627     d.f.            6    R2 adj   0.012    
 d.f.                   3593     Pr(> chi2) 0.0000    g        0.296    
 Cluster ontreat.r1.dfl.o$umg                                           
 Clusters                 30                                            
 
 Residuals
 
     Min      1Q  Median      3Q     Max 
 -5.4112 -0.5852  0.5499  1.0917  8.4345 
 
 
              Coef    S.E.   t     Pr(>|t|)
 Intercept     5.1083 0.1553 32.90 <0.0001 
 ideo.diff    -0.1582 0.0487 -3.25 0.0012  
 ideo.diff.o   0.0677 0.0309  2.19 0.0284  
 same.g        0.1560 0.1421  1.10 0.2721  
 same.g.o     -0.1360 0.1359 -1.00 0.3171  
 same.r.all   -0.2151 0.1327 -1.62 0.1050  
 same.r.o.all  0.1675 0.1238  1.35 0.1763  
 

>  lm.M3.race<-ols(prop1~ideo.diff + same.g+same.r.all+ ideo.diff.o + same.g.o + same.r.o.all + sp + gender + race , data=treat.r1.dfl.o, y=T, x=T)

>  lm.M3.race.cl<-robcov(lm.M3.race, treat.r1.dfl.o$umg)

>  lm.M3.race.cl
Linear Regression Model
 
 ols(formula = prop1 ~ ideo.diff + same.g + same.r.all + ideo.diff.o + 
     same.g.o + same.r.o.all + sp + gender + race, data = treat.r1.dfl.o, 
     x = T, y = T)
 
                                 Model Likelihood     Discrimination    
                                    Ratio Test           Indexes        
 Obs                    3600     LR chi2     70.49    R2       0.019    
 sigma                2.2576     d.f.           10    R2 adj   0.017    
 d.f.                   3589     Pr(> chi2) 0.0000    g        0.351    
 Cluster ontreat.r1.dfl.o$umg                                           
 Clusters                 30                                            
 
 Residuals
 
     Min      1Q  Median      3Q     Max 
 -5.4320 -0.6206  0.5398  1.0650  8.1700 
 
 
              Coef    S.E.   t     Pr(>|t|)
 Intercept     5.4359 0.1564 34.75 <0.0001 
 ideo.diff    -0.1536 0.0471 -3.26 0.0011  
 same.g        0.1534 0.1335  1.15 0.2506  
 same.r.all   -0.2493 0.1334 -1.87 0.0617  
 ideo.diff.o   0.0694 0.0307  2.26 0.0240  
 same.g.o     -0.1250 0.1221 -1.02 0.3061  
 same.r.o.all  0.1185 0.1113  1.06 0.2872  
 sp           -0.0416 0.0211 -1.98 0.0483  
 gender=male  -0.0294 0.1127 -0.26 0.7943  
 race=brown   -0.5367 0.2312 -2.32 0.0204  
 race=white   -0.0532 0.0989 -0.54 0.5902  
 

>  log.p.race <- lrm(non.zero ~ ideo.diff+  same.g + same.r.all + ideo.diff.o+ same.g.o +same.r.o.all + sp + gender + race , data=treat.r1.dfl.o, x=T, y=T ) 

>  log.p.race.cl <- robcov(log.p.race, treat.r1.dfl.o$umg) 

>  log.p.race.cl
Logistic Regression Model
 
 lrm(formula = non.zero ~ ideo.diff + same.g + same.r.all + ideo.diff.o + 
     same.g.o + same.r.o.all + sp + gender + race, data = treat.r1.dfl.o, 
     x = T, y = T)
 
                                    Model Likelihood     Discrimination    Rank Discrim.    
                                       Ratio Test           Indexes           Indexes       
 Obs                       3600    LR chi2     135.36    R2       0.083    C       0.685    
  0                         309    d.f.            10    g        0.801    Dxy     0.369    
  1                        3291    Pr(> chi2) <0.0001    gr       2.228    gamma   0.370    
 Cluster on  treat.r1.dfl.o$umg                          gp       0.060    tau-a   0.058    
 Clusters                    30                          Brier    0.075                     
 max |deriv|              2e-11                                                             
 
              Coef    S.E.   Wald Z Pr(>|Z|)
 Intercept     3.7768 0.6672  5.66  <0.0001 
 ideo.diff    -0.2059 0.0636 -3.23  0.0012  
 same.g        0.2776 0.1551  1.79  0.0736  
 same.r.all   -0.3182 0.1513 -2.10  0.0355  
 ideo.diff.o   0.0951 0.0498  1.91  0.0558  
 same.g.o     -0.0002 0.1924  0.00  0.9991  
 same.r.o.all  0.1725 0.2466  0.70  0.4844  
 sp           -0.0247 0.0607 -0.41  0.6844  
 gender=male  -0.8606 0.2829 -3.04  0.0023  
 race=brown   -1.3300 0.6416 -2.07  0.0382  
 race=white   -0.6803 0.3879 -1.75  0.0795  
 

>  log.v1.race<- lrm(vote ~    prop.ideo.diff + prop.same.gender + prop.same.race.all  + sp + gender + race, data=treat.r1.df.o, x=T, y=T)

>  log.v1.race.cl <- robcov(log.v1.race, treat.r1.df.o$umg)

>  log.v1.race.cl
Logistic Regression Model
 
 lrm(formula = vote ~ prop.ideo.diff + prop.same.gender + prop.same.race.all + 
     sp + gender + race, data = treat.r1.df.o, x = T, y = T)
 
                                  Model Likelihood     Discrimination    Rank Discrim.    
                                     Ratio Test           Indexes           Indexes       
 Obs                      1200    LR chi2     26.51    R2       0.031    C       0.586    
  0                        363    d.f.            7    g        0.365    Dxy     0.172    
  1                        837    Pr(> chi2) 0.0004    gr       1.440    gamma   0.172    
 Cluster on  treat.r1.df.o$umg                         gp       0.076    tau-a   0.073    
 Clusters                   30                         Brier    0.206                     
 max |deriv|             4e-13                                                            
 
                    Coef    S.E.   Wald Z Pr(>|Z|)
 Intercept           1.6909 0.3513  4.81  <0.0001 
 prop.ideo.diff     -0.1394 0.0475 -2.93  0.0034  
 prop.same.gender   -0.0216 0.1883 -0.11  0.9086  
 prop.same.race.all  0.1250 0.2053  0.61  0.5426  
 sp                 -0.0504 0.0414 -1.22  0.2232  
 gender=male         0.0280 0.2296  0.12  0.9029  
 race=brown         -0.6172 0.4153 -1.49  0.1372  
 race=white         -0.4415 0.2190 -2.02  0.0439  
 

>  log.v2.race<- lrm(vote ~  prop.ideo.diff + prop.same.gender + prop.same.race.all + sp + gender + race + p.offered, data=treat.r1.df.o, x=T, y=T)

>  log.v2.race.cl <- robcov(log.v2.race, treat.r1.df.o$umg)

>  log.v2.race.cl
Logistic Regression Model
 
 lrm(formula = vote ~ prop.ideo.diff + prop.same.gender + prop.same.race.all + 
     sp + gender + race + p.offered, data = treat.r1.df.o, x = T, 
     y = T)
 
                                   Model Likelihood     Discrimination    Rank Discrim.    
                                      Ratio Test           Indexes           Indexes       
 Obs                      1200    LR chi2     635.21    R2       0.582    C       0.902    
  0                        363    d.f.             8    g        2.431    Dxy     0.805    
  1                        837    Pr(> chi2) <0.0001    gr      11.369    gamma   0.805    
 Cluster on  treat.r1.df.o$umg                          gp       0.326    tau-a   0.340    
 Clusters                   30                          Brier    0.100                     
 max |deriv|             6e-13                                                             
 
                    Coef    S.E.   Wald Z Pr(>|Z|)
 Intercept          -2.9344 0.7728 -3.80  0.0001  
 prop.ideo.diff     -0.0356 0.0716 -0.50  0.6191  
 prop.same.gender   -0.2896 0.2820 -1.03  0.3044  
 prop.same.race.all  0.2121 0.1896  1.12  0.2633  
 sp                 -0.0784 0.0830 -0.94  0.3447  
 gender=male        -0.0859 0.3670 -0.23  0.8150  
 race=brown         -0.2346 0.6488 -0.36  0.7176  
 race=white         -0.2610 0.3326 -0.78  0.4326  
 p.offered           0.9955 0.1183  8.41  <0.0001 
 

>  texreg(file= paste0(bd, "base_raceall_models.tex", sep=""), 
+         list(lm.M1.race.cl, lm.M2.race.cl, lm.M3.race.cl, log.p.race.cl, log.v1.race.cl, log.v2.race.cl), 
+         custom.model.names = c("M1 Offer", "M2 Offer", "M3 Offer", "M4 Partner", "M5 Vote", "M6 Vote"), 
+         custom.coef.names = c("Intercept", "Ideo. Dist. P-R", "Same Gender", "Same Race All", 
+                               "Ideo. Dist. P-3rd", "Same Gender P-3rd", "Same Race P-3rd All", 
+                               "Self-Placement", "Proposer-Male", "Proposer-Brown" ,"Proposer-White", 
+                               "Ideo. Dist. P-R", "Same Gender", "Same Race All", "Amount Offered" ),
+         caption = "Statistical Models on proposal and voting behavior using a disaggregated race category",
+         label="table:base_race_model",
+         booktabs = F, dcolumn = F)
The table was written to the file 'C:/Users/Denise Laroze/Dropbox/group ID in legislative bargaining/Social Identity 2019-20/Data analysis/base_raceall_models.tex'.


>  ###########################
>  ######## Count Models
>  ###########################
>  
>  library(MASS)

>  #describe(treat.r1.dfl.o$prop1.p)
>  
>  treat.r1.dfl.o$prop1.p<-treat.r1.dfl.o$prop1*100

>  poisson1 <- glm(prop1.p~ideo.diff +  same.g + same.r + ideo.diff.o + same.g.o + same.r.o + sp + gender + race2, data= treat.r1.dfl.o, family=poisson)

>  summary(poisson1)

Call:
glm(formula = prop1.p ~ ideo.diff + same.g + same.r + ideo.diff.o + 
    same.g.o + same.r.o + sp + gender + race2, family = poisson, 
    data = treat.r1.dfl.o)

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-33.136   -2.935    2.400    4.835   30.978  

Coefficients:
              Estimate Std. Error  z value Pr(>|z|)    
(Intercept)  6.2749956  0.0031849 1970.210  < 2e-16 ***
ideo.diff   -0.0330249  0.0005052  -65.364  < 2e-16 ***
same.g       0.0325996  0.0017588   18.535  < 2e-16 ***
same.r      -0.0312675  0.0017461  -17.907  < 2e-16 ***
ideo.diff.o  0.0135505  0.0005336   25.396  < 2e-16 ***
same.g.o    -0.0251954  0.0020542  -12.265  < 2e-16 ***
same.r.o     0.0214839  0.0019494   11.021  < 2e-16 ***
sp          -0.0095360  0.0004006  -23.805  < 2e-16 ***
gendermale  -0.0017219  0.0017456   -0.986    0.324    
race2white   0.0117839  0.0018024    6.538 6.24e-11 ***
---
Signif. codes:  0 *** 0.001 ** 0.01 * 0.05 . 0.1   1

(Dispersion parameter for poisson family taken to be 1)

    Null deviance: 563712  on 3599  degrees of freedom
Residual deviance: 558037  on 3590  degrees of freedom
AIC: 584364

Number of Fisher Scoring iterations: 5


>  negbin1 <- glm.nb(prop1.p~ideo.diff +  same.g + same.r + ideo.diff.o + same.g.o + same.r.o + sp + gender + race2, data= treat.r1.dfl.o)

>  negbin1 # if the theta is stat sign then the data is overdispersed

Call:  glm.nb(formula = prop1.p ~ ideo.diff + same.g + same.r + ideo.diff.o + 
    same.g.o + same.r.o + sp + gender + race2, data = treat.r1.dfl.o, 
    init.theta = 4075395.377, link = log)

Coefficients:
(Intercept)    ideo.diff       same.g       same.r  ideo.diff.o     same.g.o     same.r.o           sp   gendermale   race2white  
   6.274996    -0.033025     0.032600    -0.031268     0.013551    -0.025196     0.021484    -0.009536    -0.001722     0.011784  

Degrees of Freedom: 3599 Total (i.e. Null);  3590 Residual
Null Deviance:	    563700 
Residual Deviance: 558000 	AIC: 584300

>  ########################################## 
>  ### Models with interaction g.sp.sd*same.Table g A.8
>  ##########################################
>  #DV: Offer  - Definition 1 same group
>  lm.M1.sp<-ols(prop1~ ideo.diff + same.g*g.sp.sd + same.r, data=treat.r1.dfl.o, y=T, x=T)

>  lm.M1.sp.cl<-robcov(lm.M1.sp, treat.r1.dfl.o$umg)

>  lm.M1.sp.cl
Linear Regression Model
 
 ols(formula = prop1 ~ ideo.diff + same.g * g.sp.sd + same.r, 
     data = treat.r1.dfl.o, x = T, y = T)
 
                                 Model Likelihood     Discrimination    
                                    Ratio Test           Indexes        
 Obs                    3600     LR chi2     52.70    R2       0.015    
 sigma                2.2616     d.f.            5    R2 adj   0.013    
 d.f.                   3594     Pr(> chi2) 0.0000    g        0.308    
 Cluster ontreat.r1.dfl.o$umg                                           
 Clusters                 30                                            
 
 Residuals
 
     Min      1Q  Median      3Q     Max 
 -5.5861 -0.6034  0.5275  1.1026  8.6077 
 
 
                  Coef    S.E.   t     Pr(>|t|)
 Intercept         4.9064 0.2070 23.70 <0.0001 
 ideo.diff        -0.2086 0.0636 -3.28 0.0010  
 same.g            0.1262 0.2599  0.49 0.6273  
 g.sp.sd           0.2295 0.1084  2.12 0.0343  
 same.r           -0.1152 0.1181 -0.98 0.3292  
 same.g * g.sp.sd -0.0067 0.1184 -0.06 0.9550  
 

>  #DV: Offer  - Definition 1 with controles
>  lm.M2.sp<-ols(prop1~ ideo.diff + same.g*g.sp.sd + ideo.diff.o + same.g.o +same.r+ same.g.o + same.r.o, data=treat.r1.dfl.o, y=T, x=T)

>  lm.M2.sp.cl<-robcov(lm.M2.sp, treat.r1.dfl.o$umg)

>  lm.M2.sp.cl
Linear Regression Model
 
 ols(formula = prop1 ~ ideo.diff + same.g * g.sp.sd + ideo.diff.o + 
     same.g.o + same.r + same.g.o + same.r.o, data = treat.r1.dfl.o, 
     x = T, y = T)
 
                                 Model Likelihood     Discrimination    
                                    Ratio Test           Indexes        
 Obs                    3600     LR chi2     58.45    R2       0.016    
 sigma                2.2608     d.f.            8    R2 adj   0.014    
 d.f.                   3591     Pr(> chi2) 0.0000    g        0.323    
 Cluster ontreat.r1.dfl.o$umg                                           
 Clusters                 30                                            
 
 Residuals
 
     Min      1Q  Median      3Q     Max 
 -5.5616 -0.5767  0.5274  1.1103  8.4758 
 
 
                  Coef    S.E.   t     Pr(>|t|)
 Intercept         4.9379 0.2196 22.49 <0.0001 
 ideo.diff        -0.2183 0.0656 -3.33 0.0009  
 same.g            0.1961 0.2632  0.74 0.4564  
 g.sp.sd           0.2082 0.1044  1.99 0.0461  
 ideo.diff.o       0.0389 0.0255  1.53 0.1273  
 same.g.o         -0.1494 0.1350 -1.11 0.2685  
 same.r           -0.1507 0.1258 -1.20 0.2310  
 same.r.o          0.0901 0.0904  1.00 0.3189  
 same.g * g.sp.sd -0.0106 0.1188 -0.09 0.9286  
 

>  lm.M3.sp<-ols(prop1~ideo.diff + same.g*g.sp.sd + ideo.diff.o + same.g.o +same.r+ same.g.o + same.r.o + sp + gender + race2 , data=treat.r1.dfl.o, y=T, x=T)

>  lm.M3.sp.cl<-robcov(lm.M3.sp, treat.r1.dfl.o$umg)

>  lm.M3.sp.cl
Linear Regression Model
 
 ols(formula = prop1 ~ ideo.diff + same.g * g.sp.sd + ideo.diff.o + 
     same.g.o + same.r + same.g.o + same.r.o + sp + gender + race2, 
     data = treat.r1.dfl.o, x = T, y = T)
 
                                 Model Likelihood     Discrimination    
                                    Ratio Test           Indexes        
 Obs                    3600     LR chi2     63.64    R2       0.018    
 sigma                2.2601     d.f.           11    R2 adj   0.015    
 d.f.                   3588     Pr(> chi2) 0.0000    g        0.337    
 Cluster ontreat.r1.dfl.o$umg                                           
 Clusters                 30                                            
 
 Residuals
 
     Min      1Q  Median      3Q     Max 
 -5.6641 -0.5876  0.5344  1.1064  8.2769 
 
 
                  Coef    S.E.   t     Pr(>|t|)
 Intercept         5.1088 0.2500 20.44 <0.0001 
 ideo.diff        -0.2155 0.0657 -3.28 0.0011  
 same.g            0.1922 0.2600  0.74 0.4599  
 g.sp.sd           0.2003 0.1052  1.90 0.0569  
 ideo.diff.o       0.0413 0.0245  1.69 0.0913  
 same.g.o         -0.1410 0.1216 -1.16 0.2464  
 same.r           -0.1591 0.1263 -1.26 0.2079  
 same.r.o          0.0770 0.0851  0.90 0.3657  
 sp               -0.0403 0.0208 -1.94 0.0521  
 gender=male      -0.0206 0.1146 -0.18 0.8571  
 race2=white       0.0623 0.0848  0.74 0.4622  
 same.g * g.sp.sd -0.0119 0.1200 -0.10 0.9211  
 

>  # Partner and vote models
>  
>  log.p.sp <- lrm(non.zero ~ ideo.diff + same.g*g.sp.sd + ideo.diff.o + same.g.o +same.r+ same.g.o + same.r.o + sp + gender + race2, data=treat.r1.dfl.o, x=T, y=T ) 

>  log.p.sp.cl <- robcov(log.p.sp, treat.r1.dfl.o$umg) 

>  log.p.sp.cl
Logistic Regression Model
 
 lrm(formula = non.zero ~ ideo.diff + same.g * g.sp.sd + ideo.diff.o + 
     same.g.o + same.r + same.g.o + same.r.o + sp + gender + race2, 
     data = treat.r1.dfl.o, x = T, y = T)
 
                                    Model Likelihood     Discrimination    Rank Discrim.    
                                       Ratio Test           Indexes           Indexes       
 Obs                       3600    LR chi2     106.50    R2       0.066    C       0.667    
  0                         309    d.f.            11    g        0.690    Dxy     0.335    
  1                        3291    Pr(> chi2) <0.0001    gr       1.993    gamma   0.336    
 Cluster on  treat.r1.dfl.o$umg                          gp       0.054    tau-a   0.053    
 Clusters                    30                          Brier    0.076                     
 max |deriv|              8e-13                                                             
 
                  Coef    S.E.   Wald Z Pr(>|Z|)
 Intercept         3.2371 0.6314  5.13  <0.0001 
 ideo.diff        -0.2571 0.0741 -3.47  0.0005  
 same.g            0.2417 0.4823  0.50  0.6163  
 g.sp.sd           0.0941 0.1421  0.66  0.5079  
 ideo.diff.o       0.0765 0.0415  1.84  0.0652  
 same.g.o         -0.0017 0.1869 -0.01  0.9929  
 same.r           -0.2728 0.1454 -1.88  0.0606  
 same.r.o          0.1855 0.2241  0.83  0.4077  
 sp               -0.0372 0.0582 -0.64  0.5221  
 gender=male      -0.7962 0.2589 -3.08  0.0021  
 race2=white      -0.1827 0.2662 -0.69  0.4926  
 same.g * g.sp.sd  0.0296 0.2167  0.14  0.8913  
 

>  #DV: Vote  - Basic model with clustered se for correlation  within groups
>  log.v1.sp<- lrm(vote ~  prop.ideo.diff +   prop.same.gender*g.sp.sd + prop.same.race  + sp + gender + race2, data=treat.r1.df.o, x=T, y=T)

>  log.v1.sp.cl <- robcov(log.v1.sp, treat.r1.df.o$umg)

>  log.v1.sp.cl
Logistic Regression Model
 
 lrm(formula = vote ~ prop.ideo.diff + prop.same.gender * g.sp.sd + 
     prop.same.race + sp + gender + race2, data = treat.r1.df.o, 
     x = T, y = T)
 
                                  Model Likelihood     Discrimination    Rank Discrim.    
                                     Ratio Test           Indexes           Indexes       
 Obs                      1200    LR chi2     21.33    R2       0.025    C       0.583    
  0                        363    d.f.            8    g        0.325    Dxy     0.166    
  1                        837    Pr(> chi2) 0.0063    gr       1.384    gamma   0.166    
 Cluster on  treat.r1.df.o$umg                         gp       0.068    tau-a   0.070    
 Clusters                   30                         Brier    0.207                     
 max |deriv|             3e-13                                                            
 
                            Coef    S.E.   Wald Z Pr(>|Z|)
 Intercept                   1.5158 0.4487  3.38  0.0007  
 prop.ideo.diff             -0.1703 0.0687 -2.48  0.0132  
 prop.same.gender           -0.1644 0.4355 -0.38  0.7058  
 g.sp.sd                     0.0190 0.1546  0.12  0.9024  
 prop.same.race              0.1712 0.1848  0.93  0.3541  
 sp                         -0.0550 0.0428 -1.28  0.1991  
 gender=male                 0.0424 0.2325  0.18  0.8554  
 race2=white                -0.2465 0.1713 -1.44  0.1502  
 prop.same.gender * g.sp.sd  0.0811 0.1812  0.45  0.6544  
 

>  log.v2.sp<- lrm(vote ~  prop.ideo.diff +   prop.same.gender*g.sp.sd + prop.same.race  + sp + gender + race2 + p.offered, data=treat.r1.df.o, x=T, y=T)

>  log.v2.sp.cl <- robcov(log.v2.sp, treat.r1.df.o$umg)

>  log.v2.sp.cl
Logistic Regression Model
 
 lrm(formula = vote ~ prop.ideo.diff + prop.same.gender * g.sp.sd + 
     prop.same.race + sp + gender + race2 + p.offered, data = treat.r1.df.o, 
     x = T, y = T)
 
                                   Model Likelihood     Discrimination    Rank Discrim.    
                                      Ratio Test           Indexes           Indexes       
 Obs                      1200    LR chi2     635.62    R2       0.582    C       0.901    
  0                        363    d.f.             9    g        2.435    Dxy     0.803    
  1                        837    Pr(> chi2) <0.0001    gr      11.411    gamma   0.803    
 Cluster on  treat.r1.df.o$umg                          gp       0.326    tau-a   0.339    
 Clusters                   30                          Brier    0.099                     
 max |deriv|             6e-13                                                             
 
                            Coef    S.E.   Wald Z Pr(>|Z|)
 Intercept                  -2.7683 0.8550 -3.24  0.0012  
 prop.ideo.diff             -0.0068 0.0864 -0.08  0.9372  
 prop.same.gender           -0.5921 0.6059 -0.98  0.3284  
 g.sp.sd                    -0.1925 0.2121 -0.91  0.3641  
 prop.same.race              0.2072 0.2048  1.01  0.3116  
 sp                         -0.0798 0.0820 -0.97  0.3303  
 gender=male                -0.0770 0.3751 -0.21  0.8373  
 race2=white                -0.1638 0.3311 -0.49  0.6209  
 p.offered                   1.0003 0.1193  8.39  <0.0001 
 prop.same.gender * g.sp.sd  0.1684 0.2521  0.67  0.5041  
 

>  screenreg(list(lm.M1.sp.cl, lm.M2.sp.cl, lm.M3.sp.cl, log.p.sp.cl, log.v1.sp.cl, log.v2.sp.cl))

========================================================================================================
                            Model 1      Model 2      Model 3      Model 4      Model 5      Model 6    
--------------------------------------------------------------------------------------------------------
Intercept                      4.91 ***     4.94 ***     5.11 ***     3.24 ***     1.52 ***    -2.77 ** 
                              (0.21)       (0.22)       (0.25)       (0.63)       (0.45)       (0.86)   
ideo.diff                     -0.21 **     -0.22 ***    -0.22 **     -0.26 ***                          
                              (0.06)       (0.07)       (0.07)       (0.07)                             
same.g                         0.13         0.20         0.19         0.24                              
                              (0.26)       (0.26)       (0.26)       (0.48)                             
g.sp.sd                        0.23 *       0.21 *       0.20         0.09         0.02        -0.19    
                              (0.11)       (0.10)       (0.11)       (0.14)       (0.15)       (0.21)   
same.r                        -0.12        -0.15        -0.16        -0.27                              
                              (0.12)       (0.13)       (0.13)       (0.15)                             
same.g * g.sp.sd              -0.01        -0.01        -0.01         0.03                              
                              (0.12)       (0.12)       (0.12)       (0.22)                             
ideo.diff.o                                 0.04         0.04         0.08                              
                                           (0.03)       (0.02)       (0.04)                             
same.g.o                                   -0.15        -0.14        -0.00                              
                                           (0.13)       (0.12)       (0.19)                             
same.r.o                                    0.09         0.08         0.19                              
                                           (0.09)       (0.09)       (0.22)                             
sp                                                      -0.04        -0.04        -0.05        -0.08    
                                                        (0.02)       (0.06)       (0.04)       (0.08)   
gender=male                                             -0.02        -0.80 **      0.04        -0.08    
                                                        (0.11)       (0.26)       (0.23)       (0.38)   
race2=white                                              0.06        -0.18        -0.25        -0.16    
                                                        (0.08)       (0.27)       (0.17)       (0.33)   
prop.ideo.diff                                                                    -0.17 *      -0.01    
                                                                                  (0.07)       (0.09)   
prop.same.gender                                                                  -0.16        -0.59    
                                                                                  (0.44)       (0.61)   
prop.same.race                                                                     0.17         0.21    
                                                                                  (0.18)       (0.20)   
prop.same.gender * g.sp.sd                                                         0.08         0.17    
                                                                                  (0.18)       (0.25)   
p.offered                                                                                       1.00 ***
                                                                                               (0.12)   
--------------------------------------------------------------------------------------------------------
Num. obs.                   3600         3600         3600         3600         1200         1200       
R^2                            0.01         0.02         0.02                                           
Adj. R^2                       0.01         0.01         0.01                                           
L.R.                          52.70        58.45        63.64       106.50        21.33       635.62    
Pseudo R^2                                                            0.07         0.02         0.58    
========================================================================================================
*** p < 0.001, ** p < 0.01, * p < 0.05

>  ### Printing all models as 1 table
>  texreg(file= paste0(bd, "Int_gender_models.tex", sep=""), 
+         list(lm.M1.sp.cl, lm.M2.sp.cl, lm.M3.sp.cl, log.p.sp.cl, log.v1.sp.cl, log.v2.sp.cl), 
+         custom.model.names = c("M1 Group SP*Gender", "M2 Group SP*Gender", "M3 Group SP*Gender", "M4 Group SP*Gender", "M5 Group SP*Gender", "M6 Group SP*Gender"), 
+         custom.coef.names = c("Intercept", "Ideo. Dist. P-R", "Same Gender", "SD SP Group" , "Same Race",
+                               "Same Gender * SD SP Group", 
+                               "Ideo. Dist. P-3rd", "Same Gender P-3rd", "Same Race P-3rd", 
+                               "Self-Placement", "Proposer-Male", "Proposer-White",  
+                               "Ideo. Dist. P-R", "Same Gender", "Same Race", "Same Gender * SD SP Group", "Amount Offered" ),
+         caption = "Statistical models on proposal and voting behaviour with interaction of Gender and Standard Deviation of Self-Placement in Groups ",
+         label="table:model_intgender",
+         booktabs = F, dcolumn = F)
The table was written to the file 'C:/Users/Denise Laroze/Dropbox/group ID in legislative bargaining/Social Identity 2019-20/Data analysis/Int_gender_models.tex'.


>  ########################################## 
>  ### Models with interaction g.sp.sd*same.r Table A.9
>  ##########################################
>  #DV: Offer  - Definition 1 same group
>  lm.M1.spr<-ols(prop1~ ideo.diff + same.g + same.r*g.sp.sd, data=treat.r1.dfl.o, y=T, x=T)

>  lm.M1.spr.cl<-robcov(lm.M1.spr, treat.r1.dfl.o$umg)

>  lm.M1.spr.cl
Linear Regression Model
 
 ols(formula = prop1 ~ ideo.diff + same.g + same.r * g.sp.sd, 
     data = treat.r1.dfl.o, x = T, y = T)
 
                                 Model Likelihood     Discrimination    
                                    Ratio Test           Indexes        
 Obs                    3600     LR chi2     52.76    R2       0.015    
 sigma                2.2616     d.f.            5    R2 adj   0.013    
 d.f.                   3594     Pr(> chi2) 0.0000    g        0.308    
 Cluster ontreat.r1.dfl.o$umg                                           
 Clusters                 30                                            
 
 Residuals
 
     Min      1Q  Median      3Q     Max 
 -5.5626 -0.6132  0.5287  1.1061  8.5956 
 
 
                  Coef    S.E.   t     Pr(>|t|)
 Intercept         4.8929 0.1779 27.51 <0.0001 
 ideo.diff        -0.2088 0.0639 -3.27 0.0011  
 same.g            0.1158 0.1347  0.86 0.3902  
 same.r           -0.0777 0.2292 -0.34 0.7346  
 g.sp.sd           0.2378 0.1224  1.94 0.0521  
 same.r * g.sp.sd -0.0221 0.1181 -0.19 0.8518  
 

>  #DV: Offer  - Definition 1 with controles
>  lm.M2.spr<-ols(prop1~ ideo.diff + same.g + ideo.diff.o + same.g.o +same.r*g.sp.sd+ same.g.o + same.r.o, data=treat.r1.dfl.o, y=T, x=T)

>  lm.M2.spr.cl<-robcov(lm.M2.spr, treat.r1.dfl.o$umg)

>  lm.M2.spr.cl
Linear Regression Model
 
 ols(formula = prop1 ~ ideo.diff + same.g + ideo.diff.o + same.g.o + 
     same.r * g.sp.sd + same.g.o + same.r.o, data = treat.r1.dfl.o, 
     x = T, y = T)
 
                                 Model Likelihood     Discrimination    
                                    Ratio Test           Indexes        
 Obs                    3600     LR chi2     58.52    R2       0.016    
 sigma                2.2608     d.f.            8    R2 adj   0.014    
 d.f.                   3591     Pr(> chi2) 0.0000    g        0.322    
 Cluster ontreat.r1.dfl.o$umg                                           
 Clusters                 30                                            
 
 Residuals
 
     Min      1Q  Median      3Q     Max 
 -5.5372 -0.5778  0.5350  1.1114  8.4793 
 
 
                  Coef    S.E.   t     Pr(>|t|)
 Intercept         4.9250 0.2059 23.92 <0.0001 
 ideo.diff        -0.2186 0.0660 -3.31 0.0009  
 same.g            0.1785 0.1417  1.26 0.2079  
 ideo.diff.o       0.0392 0.0262  1.50 0.1348  
 same.g.o         -0.1482 0.1357 -1.09 0.2748  
 same.r           -0.1091 0.2266 -0.48 0.6304  
 g.sp.sd           0.2156 0.1147  1.88 0.0603  
 same.r.o          0.0907 0.0912  0.99 0.3200  
 same.r * g.sp.sd -0.0247 0.1181 -0.21 0.8341  
 

>  lm.M3.spr<-ols(prop1~ideo.diff + same.g + ideo.diff.o + same.g.o +same.r*g.sp.sd+ same.g.o + same.r.o + sp + gender + race2 , data=treat.r1.dfl.o, y=T, x=T)

>  lm.M3.spr.cl<-robcov(lm.M3.spr, treat.r1.dfl.o$umg)

>  lm.M3.spr.cl
Linear Regression Model
 
 ols(formula = prop1 ~ ideo.diff + same.g + ideo.diff.o + same.g.o + 
     same.r * g.sp.sd + same.g.o + same.r.o + sp + gender + race2, 
     data = treat.r1.dfl.o, x = T, y = T)
 
                                 Model Likelihood     Discrimination    
                                    Ratio Test           Indexes        
 Obs                    3600     LR chi2     63.75    R2       0.018    
 sigma                2.2601     d.f.           11    R2 adj   0.015    
 d.f.                   3588     Pr(> chi2) 0.0000    g        0.336    
 Cluster ontreat.r1.dfl.o$umg                                           
 Clusters                 30                                            
 
 Residuals
 
     Min      1Q  Median      3Q     Max 
 -5.6355 -0.5995  0.5309  1.1072  8.2813 
 
 
                  Coef    S.E.   t     Pr(>|t|)
 Intercept         5.0933 0.2432 20.95 <0.0001 
 ideo.diff        -0.2158 0.0660 -3.27 0.0011  
 same.g            0.1725 0.1349  1.28 0.2009  
 ideo.diff.o       0.0418 0.0253  1.65 0.0988  
 same.g.o         -0.1398 0.1221 -1.14 0.2523  
 same.r           -0.1082 0.2227 -0.49 0.6272  
 g.sp.sd           0.2099 0.1132  1.85 0.0638  
 same.r.o          0.0778 0.0861  0.90 0.3665  
 sp               -0.0405 0.0207 -1.96 0.0501  
 gender=male      -0.0215 0.1146 -0.19 0.8516  
 race2=white       0.0621 0.0846  0.73 0.4629  
 same.r * g.sp.sd -0.0301 0.1175 -0.26 0.7978  
 

>  # Partner and vote models
>  
>  log.p.spr <- lrm(non.zero ~ ideo.diff + same.g + ideo.diff.o + same.g.o +same.r*g.sp.sd+ same.g.o + same.r.o + sp + gender + race2, data=treat.r1.dfl.o, x=T, y=T ) 

>  log.p.spr.cl <- robcov(log.p.spr, treat.r1.dfl.o$umg) 

>  log.p.spr.cl
Logistic Regression Model
 
 lrm(formula = non.zero ~ ideo.diff + same.g + ideo.diff.o + same.g.o + 
     same.r * g.sp.sd + same.g.o + same.r.o + sp + gender + race2, 
     data = treat.r1.dfl.o, x = T, y = T)
 
                                    Model Likelihood     Discrimination    Rank Discrim.    
                                       Ratio Test           Indexes           Indexes       
 Obs                       3600    LR chi2     107.11    R2       0.066    C       0.668    
  0                         309    d.f.            11    g        0.689    Dxy     0.335    
  1                        3291    Pr(> chi2) <0.0001    gr       1.991    gamma   0.336    
 Cluster on  treat.r1.dfl.o$umg                          gp       0.054    tau-a   0.053    
 Clusters                    30                          Brier    0.076                     
 max |deriv|              5e-13                                                             
 
                  Coef    S.E.   Wald Z Pr(>|Z|)
 Intercept         3.0909 0.5892  5.25  <0.0001 
 ideo.diff        -0.2584 0.0734 -3.52  0.0004  
 same.g            0.3043 0.1500  2.03  0.0425  
 ideo.diff.o       0.0760 0.0428  1.78  0.0756  
 same.g.o         -0.0029 0.1875 -0.02  0.9876  
 same.r           -0.0659 0.3727 -0.18  0.8597  
 g.sp.sd           0.1749 0.1351  1.30  0.1953  
 same.r.o          0.1871 0.2241  0.84  0.4037  
 sp               -0.0378 0.0585 -0.65  0.5181  
 gender=male      -0.7949 0.2608 -3.05  0.0023  
 race2=white      -0.1814 0.2634 -0.69  0.4911  
 same.r * g.sp.sd -0.1115 0.1754 -0.64  0.5250  
 

>  #DV: Vote  - Basic model with clustered se for correlation  within groups
>  log.v1.spr<- lrm(vote ~  prop.ideo.diff +   prop.same.gender + prop.same.race*g.sp.sd  + sp + gender + race2, data=treat.r1.df.o, x=T, y=T)

>  log.v1.spr.cl <- robcov(log.v1.spr, treat.r1.df.o$umg)

>  log.v1.spr.cl
Logistic Regression Model
 
 lrm(formula = vote ~ prop.ideo.diff + prop.same.gender + prop.same.race * 
     g.sp.sd + sp + gender + race2, data = treat.r1.df.o, x = T, 
     y = T)
 
                                  Model Likelihood     Discrimination    Rank Discrim.    
                                     Ratio Test           Indexes           Indexes       
 Obs                      1200    LR chi2     21.04    R2       0.025    C       0.583    
  0                        363    d.f.            8    g        0.323    Dxy     0.166    
  1                        837    Pr(> chi2) 0.0070    gr       1.381    gamma   0.166    
 Cluster on  treat.r1.df.o$umg                         gp       0.068    tau-a   0.070    
 Clusters                   30                         Brier    0.207                     
 max |deriv|             5e-13                                                            
 
                          Coef    S.E.   Wald Z Pr(>|Z|)
 Intercept                 1.4447 0.3634  3.98  <0.0001 
 prop.ideo.diff           -0.1696 0.0701 -2.42  0.0155  
 prop.same.gender         -0.0202 0.1895 -0.11  0.9152  
 prop.same.race            0.1400 0.3259  0.43  0.6676  
 g.sp.sd                   0.0530 0.1694  0.31  0.7544  
 sp                       -0.0546 0.0426 -1.28  0.2006  
 gender=male               0.0476 0.2294  0.21  0.8358  
 race2=white              -0.2454 0.1712 -1.43  0.1517  
 prop.same.race * g.sp.sd  0.0201 0.1956  0.10  0.9181  
 

>  log.v2.spr<- lrm(vote ~  prop.ideo.diff +   prop.same.gender + prop.same.race*g.sp.sd  + sp + gender + race2 + p.offered, data=treat.r1.df.o, x=T, y=T)

>  log.v2.spr.cl <- robcov(log.v2.spr, treat.r1.df.o$umg)

>  log.v2.spr.cl
Logistic Regression Model
 
 lrm(formula = vote ~ prop.ideo.diff + prop.same.gender + prop.same.race * 
     g.sp.sd + sp + gender + race2 + p.offered, data = treat.r1.df.o, 
     x = T, y = T)
 
                                   Model Likelihood     Discrimination    Rank Discrim.    
                                      Ratio Test           Indexes           Indexes       
 Obs                      1200    LR chi2     636.25    R2       0.582    C       0.902    
  0                        363    d.f.             9    g        2.441    Dxy     0.803    
  1                        837    Pr(> chi2) <0.0001    gr      11.485    gamma   0.804    
 Cluster on  treat.r1.df.o$umg                          gp       0.327    tau-a   0.339    
 Clusters                   30                          Brier    0.099                     
 max |deriv|             6e-13                                                             
 
                          Coef    S.E.   Wald Z Pr(>|Z|)
 Intercept                -2.8000 0.7719 -3.63  0.0003  
 prop.ideo.diff           -0.0023 0.0852 -0.03  0.9788  
 prop.same.gender         -0.3162 0.2868 -1.10  0.2703  
 prop.same.race           -0.1738 0.3603 -0.48  0.6297  
 g.sp.sd                  -0.2169 0.1899 -1.14  0.2534  
 sp                       -0.0734 0.0827 -0.89  0.3749  
 gender=male              -0.0767 0.3766 -0.20  0.8385  
 race2=white              -0.1633 0.3347 -0.49  0.6256  
 p.offered                 1.0040 0.1210  8.30  <0.0001 
 prop.same.race * g.sp.sd  0.2327 0.2119  1.10  0.2719  
 

>  screenreg(list(lm.M1.spr.cl, lm.M2.spr.cl, lm.M3.spr.cl, log.p.spr.cl, log.v1.spr.cl, log.v2.spr.cl))

======================================================================================================
                          Model 1      Model 2      Model 3      Model 4      Model 5      Model 6    
------------------------------------------------------------------------------------------------------
Intercept                    4.89 ***     4.92 ***     5.09 ***     3.09 ***     1.44 ***    -2.80 ***
                            (0.18)       (0.21)       (0.24)       (0.59)       (0.36)       (0.77)   
ideo.diff                   -0.21 **     -0.22 ***    -0.22 **     -0.26 ***                          
                            (0.06)       (0.07)       (0.07)       (0.07)                             
same.g                       0.12         0.18         0.17         0.30 *                            
                            (0.13)       (0.14)       (0.13)       (0.15)                             
same.r                      -0.08        -0.11        -0.11        -0.07                              
                            (0.23)       (0.23)       (0.22)       (0.37)                             
g.sp.sd                      0.24         0.22         0.21         0.17         0.05        -0.22    
                            (0.12)       (0.11)       (0.11)       (0.14)       (0.17)       (0.19)   
same.r * g.sp.sd            -0.02        -0.02        -0.03        -0.11                              
                            (0.12)       (0.12)       (0.12)       (0.18)                             
ideo.diff.o                               0.04         0.04         0.08                              
                                         (0.03)       (0.03)       (0.04)                             
same.g.o                                 -0.15        -0.14        -0.00                              
                                         (0.14)       (0.12)       (0.19)                             
same.r.o                                  0.09         0.08         0.19                              
                                         (0.09)       (0.09)       (0.22)                             
sp                                                    -0.04        -0.04        -0.05        -0.07    
                                                      (0.02)       (0.06)       (0.04)       (0.08)   
gender=male                                           -0.02        -0.79 **      0.05        -0.08    
                                                      (0.11)       (0.26)       (0.23)       (0.38)   
race2=white                                            0.06        -0.18        -0.25        -0.16    
                                                      (0.08)       (0.26)       (0.17)       (0.33)   
prop.ideo.diff                                                                  -0.17 *      -0.00    
                                                                                (0.07)       (0.09)   
prop.same.gender                                                                -0.02        -0.32    
                                                                                (0.19)       (0.29)   
prop.same.race                                                                   0.14        -0.17    
                                                                                (0.33)       (0.36)   
prop.same.race * g.sp.sd                                                         0.02         0.23    
                                                                                (0.20)       (0.21)   
p.offered                                                                                     1.00 ***
                                                                                             (0.12)   
------------------------------------------------------------------------------------------------------
Num. obs.                 3600         3600         3600         3600         1200         1200       
R^2                          0.01         0.02         0.02                                           
Adj. R^2                     0.01         0.01         0.01                                           
L.R.                        52.76        58.52        63.75       107.11        21.04       636.25    
Pseudo R^2                                                          0.07         0.02         0.58    
======================================================================================================
*** p < 0.001, ** p < 0.01, * p < 0.05

>  ### Printing all models as 1 table
>  texreg(file= paste0(bd, "Int_race_models.tex", sep=""), 
+         list(lm.M1.spr.cl, lm.M2.spr.cl, lm.M3.spr.cl, log.p.spr.cl, log.v1.spr.cl, log.v2.spr.cl), 
+         custom.model.names = c("M1 Group SP*Race", "M2 Group SP*Race", "M3 Group SP*Race", "M4 Group SP*Race", "M5 Group SP*Race", "M6 Group SP*Race"), 
+         custom.coef.names = c("Intercept", "Ideo. Dist. P-R", "Same Gender","Same Race", "SD SP Group" , 
+                               "Same Race * SD SP Group", 
+                               "Ideo. Dist. P-3rd", "Same Gender P-3rd", "Same Race P-3rd", 
+                               "Self-Placement", "Proposer-Male", "Proposer-White",  
+                               "Ideo. Dist. P-R", "Same Gender", "Same Race", "Same Race * SD SP Group", "Amount Offered" ),
+         caption = "Statistical models on proposal and voting behaviour with interaction of Race and Standard Deviation of Self-Placement in Groups ",
+         label="table:model_intrace",
+         booktabs = F, dcolumn = F)
The table was written to the file 'C:/Users/Denise Laroze/Dropbox/group ID in legislative bargaining/Social Identity 2019-20/Data analysis/Int_race_models.tex'.


>  ##################################################################################
>  #### Data Analysis Full Data Frame. Same models as using the round 1 results only A.7
>  #################################################################
>  
>  lm.FM1<-ols(prop1~ideo.diff + same.g + same.r, data=treat.dfl.o, y=T, x=T)

>  lm.FM1.cl<-robcov(lm.FM1, treat.dfl.o$umg)

>  lm.FM1.cl
Frequencies of Missing Values Due to Each Variable
    prop1 ideo.diff    same.g    same.r 
    14820         0         0         0 

Linear Regression Model
 
 ols(formula = prop1 ~ ideo.diff + same.g + same.r, data = treat.dfl.o, 
     x = T, y = T)
 
 
                              Model Likelihood     Discrimination    
                                 Ratio Test           Indexes        
 Obs                 3900     LR chi2     43.84    R2       0.011    
 sigma             2.2714     d.f.            3    R2 adj   0.010    
 d.f.                3896     Pr(> chi2) 0.0000    g        0.270    
 Cluster ontreat.dfl.o$umg                                           
 Clusters              30                                            
 
 Residuals
 
     Min      1Q  Median      3Q     Max 
 -5.1101 -0.9743  0.5911  1.1575  8.8365 
 
 
           Coef    S.E.   t     Pr(>|t|)
 Intercept  4.9783 0.1461 34.08 <0.0001 
 ideo.diff -0.1358 0.0389 -3.49 0.0005  
 same.g     0.1318 0.1380  0.95 0.3398  
 same.r    -0.0654 0.1166 -0.56 0.5749  
 

>  lm.FM1.r<-ols(prop1~ideo.diff + same.g + same.r, data=treat.dfl.o, y=T, x=T)

>  lm.FM1.r.cl<-robcov(lm.FM1.r, treat.dfl.o$umg)

>  lm.FM1.r.cl
Frequencies of Missing Values Due to Each Variable
    prop1 ideo.diff    same.g    same.r 
    14820         0         0         0 

Linear Regression Model
 
 ols(formula = prop1 ~ ideo.diff + same.g + same.r, data = treat.dfl.o, 
     x = T, y = T)
 
 
                              Model Likelihood     Discrimination    
                                 Ratio Test           Indexes        
 Obs                 3900     LR chi2     43.84    R2       0.011    
 sigma             2.2714     d.f.            3    R2 adj   0.010    
 d.f.                3896     Pr(> chi2) 0.0000    g        0.270    
 Cluster ontreat.dfl.o$umg                                           
 Clusters              30                                            
 
 Residuals
 
     Min      1Q  Median      3Q     Max 
 -5.1101 -0.9743  0.5911  1.1575  8.8365 
 
 
           Coef    S.E.   t     Pr(>|t|)
 Intercept  4.9783 0.1461 34.08 <0.0001 
 ideo.diff -0.1358 0.0389 -3.49 0.0005  
 same.g     0.1318 0.1380  0.95 0.3398  
 same.r    -0.0654 0.1166 -0.56 0.5749  
 

>  lm.FM2<-ols(prop1~ideo.diff + same.g+same.r+ ideo.diff.o + same.g.o + same.r.o, data=treat.dfl.o, y=T, x=T)

>  lm.FM2.cl<-robcov(lm.FM2, treat.dfl.o$umg)

>  lm.FM2.cl
Frequencies of Missing Values Due to Each Variable
      prop1   ideo.diff      same.g      same.r ideo.diff.o    same.g.o    same.r.o 
      14820           0           0           0           0           0           0 

Linear Regression Model
 
 ols(formula = prop1 ~ ideo.diff + same.g + same.r + ideo.diff.o + 
     same.g.o + same.r.o, data = treat.dfl.o, x = T, y = T)
 
 
                              Model Likelihood     Discrimination    
                                 Ratio Test           Indexes        
 Obs                 3900     LR chi2     57.08    R2       0.015    
 sigma             2.2684     d.f.            6    R2 adj   0.013    
 d.f.                3893     Pr(> chi2) 0.0000    g        0.303    
 Cluster ontreat.dfl.o$umg                                           
 Clusters              30                                            
 
 Residuals
 
     Min      1Q  Median      3Q     Max 
 -5.3068 -0.9851  0.5943  1.1702  8.6442 
 
 
             Coef    S.E.   t     Pr(>|t|)
 Intercept    4.9308 0.1569 31.42 <0.0001 
 ideo.diff   -0.1667 0.0473 -3.53 0.0004  
 same.g       0.1979 0.1434  1.38 0.1677  
 same.r      -0.1342 0.1221 -1.10 0.2720  
 ideo.diff.o  0.0709 0.0298  2.38 0.0175  
 same.g.o    -0.1436 0.1281 -1.12 0.2623  
 same.r.o     0.1705 0.0995  1.71 0.0869  
 

>  lm.FM3<-ols(prop1~ideo.diff + same.g+same.r+ ideo.diff.o + same.g.o + same.r.o + sp + gender + race2 , data=treat.dfl.o, y=T, x=T)

>  lm.FM3.cl<-robcov(lm.FM3, treat.dfl.o$umg)

>  lm.FM3.cl
Frequencies of Missing Values Due to Each Variable
      prop1   ideo.diff      same.g      same.r ideo.diff.o    same.g.o    same.r.o          sp      gender       race2 
      14820           0           0           0           0           0           0           0           0           0 

Linear Regression Model
 
 ols(formula = prop1 ~ ideo.diff + same.g + same.r + ideo.diff.o + 
     same.g.o + same.r.o + sp + gender + race2, data = treat.dfl.o, 
     x = T, y = T)
 
 
                              Model Likelihood     Discrimination    
                                 Ratio Test           Indexes        
 Obs                 3900     LR chi2     60.89    R2       0.015    
 sigma             2.2682     d.f.            9    R2 adj   0.013    
 d.f.                3890     Pr(> chi2) 0.0000    g        0.315    
 Cluster ontreat.dfl.o$umg                                           
 Clusters              30                                            
 
 Residuals
 
     Min      1Q  Median      3Q     Max 
 -5.3741 -0.9573  0.5923  1.1599  8.4659 
 
 
             Coef    S.E.   t     Pr(>|t|)
 Intercept    5.0742 0.1893 26.81 <0.0001 
 ideo.diff   -0.1666 0.0476 -3.50 0.0005  
 same.g       0.1951 0.1390  1.40 0.1606  
 same.r      -0.1391 0.1243 -1.12 0.2631  
 ideo.diff.o  0.0721 0.0297  2.43 0.0151  
 same.g.o    -0.1378 0.1104 -1.25 0.2119  
 same.r.o     0.1631 0.0947  1.72 0.0850  
 sp          -0.0344 0.0214 -1.61 0.1073  
 gender=male -0.0132 0.1112 -0.12 0.9057  
 race2=white  0.0398 0.0822  0.48 0.6284  
 

>  log.FMp <- lrm(non.zero ~ ideo.diff+  same.g + same.r + ideo.diff.o+ same.g.o +same.r.o + sp + gender + race2 , data=treat.dfl.o, x=T, y=T ) 

>  log.FMp.cl <- robcov(log.FMp, treat.dfl.o$umg) 

>  log.FMp.cl
Frequencies of Missing Values Due to Each Variable
   non.zero   ideo.diff      same.g      same.r ideo.diff.o    same.g.o    same.r.o          sp      gender       race2 
      14820           0           0           0           0           0           0           0           0           0 

Logistic Regression Model
 
 lrm(formula = non.zero ~ ideo.diff + same.g + same.r + ideo.diff.o + 
     same.g.o + same.r.o + sp + gender + race2, data = treat.dfl.o, 
     x = T, y = T)
 
 
                                 Model Likelihood     Discrimination    Rank Discrim.    
                                    Ratio Test           Indexes           Indexes       
 Obs                    3900    LR chi2     113.08    R2       0.064    C       0.666    
  0                      339    d.f.             9    g        0.681    Dxy     0.333    
  1                     3561    Pr(> chi2) <0.0001    gr       1.976    gamma   0.334    
 Cluster on  treat.dfl.o$umg                          gp       0.054    tau-a   0.053    
 Clusters                 30                          Brier    0.077                     
 max |deriv|           2e-12                                                             
 
             Coef    S.E.   Wald Z Pr(>|Z|)
 Intercept    3.2609 0.5450  5.98  <0.0001 
 ideo.diff   -0.2200 0.0696 -3.16  0.0016  
 same.g       0.2797 0.1452  1.93  0.0540  
 same.r      -0.2437 0.1416 -1.72  0.0852  
 ideo.diff.o  0.1000 0.0499  2.01  0.0449  
 same.g.o     0.0084 0.1826  0.05  0.9632  
 same.r.o     0.1756 0.2317  0.76  0.4485  
 sp          -0.0298 0.0561 -0.53  0.5951  
 gender=male -0.7898 0.2541 -3.11  0.0019  
 race2=white -0.2407 0.2582 -0.93  0.3513  
 

>  log.FMv1<- lrm(vote ~    prop.ideo.diff + prop.same.gender + prop.same.race  + sp + gender + race2, data=treat.df.o, x=T, y=T)

>  log.FMv1.cl <- robcov(log.FMv1, treat.df.o$umg)

>  log.FMv1.cl
Frequencies of Missing Values Due to Each Variable
            vote   prop.ideo.diff prop.same.gender   prop.same.race               sp           gender            race2 
            4700                0                0                0                0                0                0 

Logistic Regression Model
 
 lrm(formula = vote ~ prop.ideo.diff + prop.same.gender + prop.same.race + 
     sp + gender + race2, data = treat.df.o, x = T, y = T)
 
 
                               Model Likelihood     Discrimination    Rank Discrim.    
                                  Ratio Test           Indexes           Indexes       
 Obs                   1300    LR chi2     23.77    R2       0.026    C       0.584    
  0                     400    d.f.            6    g        0.324    Dxy     0.168    
  1                     900    Pr(> chi2) 0.0006    gr       1.383    gamma   0.169    
 Cluster on  treat.df.o$umg                         gp       0.069    tau-a   0.072    
 Clusters                30                         Brier    0.209                     
 max |deriv|          7e-13                                                            
 
                  Coef    S.E.   Wald Z Pr(>|Z|)
 Intercept         1.4165 0.3200  4.43  <0.0001 
 prop.ideo.diff   -0.1591 0.0463 -3.44  0.0006  
 prop.same.gender  0.0445 0.1703  0.26  0.7937  
 prop.same.race    0.1367 0.1658  0.82  0.4097  
 sp               -0.0535 0.0390 -1.37  0.1701  
 gender=male       0.0255 0.2186  0.12  0.9072  
 race2=white      -0.1559 0.1787 -0.87  0.3831  
 

>  log.FMv2<- lrm(vote ~  prop.ideo.diff + prop.same.gender + prop.same.race + sp + gender + race2 + p.offered, data=treat.df.o, x=T, y=T)

>  log.FMv2.cl <- robcov(log.FMv2, treat.df.o$umg)

>  log.FMv2.cl
Frequencies of Missing Values Due to Each Variable
            vote   prop.ideo.diff prop.same.gender   prop.same.race               sp           gender            race2        p.offered 
            4700                0                0                0                0                0                0             4700 

Logistic Regression Model
 
 lrm(formula = vote ~ prop.ideo.diff + prop.same.gender + prop.same.race + 
     sp + gender + race2 + p.offered, data = treat.df.o, x = T, 
     y = T)
 
 
                                Model Likelihood     Discrimination    Rank Discrim.    
                                   Ratio Test           Indexes           Indexes       
 Obs                   1300    LR chi2     676.72    R2       0.572    C       0.898    
  0                     400    d.f.             7    g        2.358    Dxy     0.795    
  1                     900    Pr(> chi2) <0.0001    gr      10.571    gamma   0.796    
 Cluster on  treat.df.o$umg                          gp       0.329    tau-a   0.339    
 Clusters                30                          Brier    0.104                     
 max |deriv|          2e-06                                                             
 
                  Coef    S.E.   Wald Z Pr(>|Z|)
 Intercept        -2.7037 0.6274 -4.31  <0.0001 
 prop.ideo.diff   -0.0576 0.0630 -0.91  0.3606  
 prop.same.gender -0.2790 0.2364 -1.18  0.2379  
 prop.same.race    0.1777 0.1657  1.07  0.2837  
 sp               -0.0719 0.0742 -0.97  0.3324  
 gender=male      -0.1180 0.3408 -0.35  0.7291  
 race2=white      -0.0872 0.2943 -0.30  0.7671  
 p.offered         0.9496 0.0986  9.64  <0.0001 
 

>  screenreg(list(lm.FM1.cl, lm.FM2.cl, lm.FM3.cl, log.FMp.cl, log.FMv1.cl, log.FMv2.cl))

==============================================================================================
                  Model 1      Model 2      Model 3      Model 4      Model 5      Model 6    
----------------------------------------------------------------------------------------------
Intercept            4.98 ***     4.93 ***     5.07 ***     3.26 ***     1.42 ***    -2.70 ***
                    (0.15)       (0.16)       (0.19)       (0.54)       (0.32)       (0.63)   
ideo.diff           -0.14 ***    -0.17 ***    -0.17 ***    -0.22 **                           
                    (0.04)       (0.05)       (0.05)       (0.07)                             
same.g               0.13         0.20         0.20         0.28                              
                    (0.14)       (0.14)       (0.14)       (0.15)                             
same.r              -0.07        -0.13        -0.14        -0.24                              
                    (0.12)       (0.12)       (0.12)       (0.14)                             
ideo.diff.o                       0.07 *       0.07 *       0.10 *                            
                                 (0.03)       (0.03)       (0.05)                             
same.g.o                         -0.14        -0.14         0.01                              
                                 (0.13)       (0.11)       (0.18)                             
same.r.o                          0.17         0.16         0.18                              
                                 (0.10)       (0.09)       (0.23)                             
sp                                            -0.03        -0.03        -0.05        -0.07    
                                              (0.02)       (0.06)       (0.04)       (0.07)   
gender=male                                   -0.01        -0.79 **      0.03        -0.12    
                                              (0.11)       (0.25)       (0.22)       (0.34)   
race2=white                                    0.04        -0.24        -0.16        -0.09    
                                              (0.08)       (0.26)       (0.18)       (0.29)   
prop.ideo.diff                                                          -0.16 ***    -0.06    
                                                                        (0.05)       (0.06)   
prop.same.gender                                                         0.04        -0.28    
                                                                        (0.17)       (0.24)   
prop.same.race                                                           0.14         0.18    
                                                                        (0.17)       (0.17)   
p.offered                                                                             0.95 ***
                                                                                     (0.10)   
----------------------------------------------------------------------------------------------
Num. obs.         3900         3900         3900         3900         1300         1300       
R^2                  0.01         0.01         0.02                                           
Adj. R^2             0.01         0.01         0.01                                           
L.R.                43.84        57.08        60.89       113.08        23.77       676.72    
Pseudo R^2                                                  0.06         0.03         0.57    
==============================================================================================
*** p < 0.001, ** p < 0.01, * p < 0.05

>  texreg(file= paste0(bd, "Full_base_models.tex", sep=""), 
+         list(lm.FM1.cl, lm.FM2.cl, lm.FM3.cl, log.FMp.cl, log.FMv1.cl, log.FMv2.cl), 
+         custom.model.names = c(" M1 Full Offer", "M2 Full Offer", "M3 Full Offer", "M4 Full Partner", "M5 Full Vote", "M6 Full Vote"), 
+         custom.coef.names = c("Intercept", "Ideo. Dist. P-R", "Same Gender", "Same Race", 
+                               "Ideo. Dist. P-3rd", "Same Gender P-3rd", "Same Race P-3rd", 
+                               "Self-Placement", "Proposer-Male", "Proposer-White", 
+                               "Ideo. Dist. P-R", "Same Gender", "Same Race", "Amount Offered" ),
+         caption="Models M1-M6 in main text, but including all rounds",
+         booktabs = F, dcolumn = F)
The table was written to the file 'C:/Users/Denise Laroze/Dropbox/group ID in legislative bargaining/Social Identity 2019-20/Data analysis/Full_base_models.tex'.


>  # Partner and vote models
>  
>  log.p <- lrm(non.zero ~ ideo.diff+ ideo.diff.o+ same.g+same.g.o + same.r+same.r.o + gender + race2 + sp, data=treat.dfl.o, x=T, y=T ) 

>  log.p.cl <- robcov(log.p, treat.dfl.o$umg) 

>  log.p.cl
Frequencies of Missing Values Due to Each Variable
   non.zero   ideo.diff ideo.diff.o      same.g    same.g.o      same.r    same.r.o      gender       race2          sp 
      14820           0           0           0           0           0           0           0           0           0 

Logistic Regression Model
 
 lrm(formula = non.zero ~ ideo.diff + ideo.diff.o + same.g + same.g.o + 
     same.r + same.r.o + gender + race2 + sp, data = treat.dfl.o, 
     x = T, y = T)
 
 
                                 Model Likelihood     Discrimination    Rank Discrim.    
                                    Ratio Test           Indexes           Indexes       
 Obs                    3900    LR chi2     113.08    R2       0.064    C       0.666    
  0                      339    d.f.             9    g        0.681    Dxy     0.333    
  1                     3561    Pr(> chi2) <0.0001    gr       1.976    gamma   0.334    
 Cluster on  treat.dfl.o$umg                          gp       0.054    tau-a   0.053    
 Clusters                 30                          Brier    0.077                     
 max |deriv|           2e-12                                                             
 
             Coef    S.E.   Wald Z Pr(>|Z|)
 Intercept    3.2609 0.5450  5.98  <0.0001 
 ideo.diff   -0.2200 0.0696 -3.16  0.0016  
 ideo.diff.o  0.1000 0.0499  2.01  0.0449  
 same.g       0.2797 0.1452  1.93  0.0540  
 same.g.o     0.0084 0.1826  0.05  0.9632  
 same.r      -0.2437 0.1416 -1.72  0.0852  
 same.r.o     0.1756 0.2317  0.76  0.4485  
 gender=male -0.7898 0.2541 -3.11  0.0019  
 race2=white -0.2407 0.2582 -0.93  0.3513  
 sp          -0.0298 0.0561 -0.53  0.5951  
 

>  screenreg(log.p.cl)

========================
             Model 1    
------------------------
Intercept       3.26 ***
               (0.54)   
ideo.diff      -0.22 ** 
               (0.07)   
ideo.diff.o     0.10 *  
               (0.05)   
same.g          0.28    
               (0.15)   
same.g.o        0.01    
               (0.18)   
same.r         -0.24    
               (0.14)   
same.r.o        0.18    
               (0.23)   
gender=male    -0.79 ** 
               (0.25)   
race2=white    -0.24    
               (0.26)   
sp             -0.03    
               (0.06)   
------------------------
Num. obs.    3900       
Pseudo R^2      0.06    
L.R.          113.08    
========================
*** p < 0.001, ** p < 0.01, * p < 0.05

>  #DV: Vote  - Basic model with clustered se for correlation  within groups
>  log.v1<- lrm(vote ~    prop.ideo.diff + prop.same.gender + prop.same.race + gender + race2+ sp, data=treat.df.o, x=T, y=T)

>  log.v1.cl <- robcov(log.v1, treat.df.o$umg)

>  log.v1.cl
Frequencies of Missing Values Due to Each Variable
            vote   prop.ideo.diff prop.same.gender   prop.same.race           gender            race2               sp 
            4700                0                0                0                0                0                0 

Logistic Regression Model
 
 lrm(formula = vote ~ prop.ideo.diff + prop.same.gender + prop.same.race + 
     gender + race2 + sp, data = treat.df.o, x = T, y = T)
 
 
                               Model Likelihood     Discrimination    Rank Discrim.    
                                  Ratio Test           Indexes           Indexes       
 Obs                   1300    LR chi2     23.77    R2       0.026    C       0.584    
  0                     400    d.f.            6    g        0.324    Dxy     0.168    
  1                     900    Pr(> chi2) 0.0006    gr       1.383    gamma   0.169    
 Cluster on  treat.df.o$umg                         gp       0.069    tau-a   0.072    
 Clusters                30                         Brier    0.209                     
 max |deriv|          5e-13                                                            
 
                  Coef    S.E.   Wald Z Pr(>|Z|)
 Intercept         1.4165 0.3200  4.43  <0.0001 
 prop.ideo.diff   -0.1591 0.0463 -3.44  0.0006  
 prop.same.gender  0.0445 0.1703  0.26  0.7937  
 prop.same.race    0.1367 0.1658  0.82  0.4097  
 gender=male       0.0255 0.2186  0.12  0.9072  
 race2=white      -0.1559 0.1787 -0.87  0.3831  
 sp               -0.0535 0.0390 -1.37  0.1701  
 

>  log.v2<- lrm(vote ~  prop.ideo.diff + prop.same.gender + prop.same.race + gender + race2+ sp + p.offered, data=treat.df.o, x=T, y=T)

>  log.v2.cl <- robcov(log.v2, treat.df.o$umg)

>  log.v2.cl
Frequencies of Missing Values Due to Each Variable
            vote   prop.ideo.diff prop.same.gender   prop.same.race           gender            race2               sp        p.offered 
            4700                0                0                0                0                0                0             4700 

Logistic Regression Model
 
 lrm(formula = vote ~ prop.ideo.diff + prop.same.gender + prop.same.race + 
     gender + race2 + sp + p.offered, data = treat.df.o, x = T, 
     y = T)
 
 
                                Model Likelihood     Discrimination    Rank Discrim.    
                                   Ratio Test           Indexes           Indexes       
 Obs                   1300    LR chi2     676.72    R2       0.572    C       0.898    
  0                     400    d.f.             7    g        2.358    Dxy     0.795    
  1                     900    Pr(> chi2) <0.0001    gr      10.571    gamma   0.796    
 Cluster on  treat.df.o$umg                          gp       0.329    tau-a   0.339    
 Clusters                30                          Brier    0.104                     
 max |deriv|          2e-06                                                             
 
                  Coef    S.E.   Wald Z Pr(>|Z|)
 Intercept        -2.7037 0.6274 -4.31  <0.0001 
 prop.ideo.diff   -0.0576 0.0630 -0.91  0.3606  
 prop.same.gender -0.2790 0.2364 -1.18  0.2379  
 prop.same.race    0.1777 0.1657  1.07  0.2837  
 gender=male      -0.1180 0.3408 -0.35  0.7291  
 race2=white      -0.0872 0.2943 -0.30  0.7671  
 sp               -0.0719 0.0742 -0.97  0.3324  
 p.offered         0.9496 0.0986  9.64  <0.0001 
 

>  log.v3<- lrm(vote ~  p.offered +  prop.ideo.diff + prop.same.gender + prop.same.race + gender + race2+ sp + sd.p.offered + prop.sp, data=treat.df.o, x=T, y=T)

>  log.v3.cl <- robcov(log.v3, treat.df.o$umg)

>  log.v3.cl
Frequencies of Missing Values Due to Each Variable
            vote        p.offered   prop.ideo.diff prop.same.gender   prop.same.race           gender            race2               sp     sd.p.offered          prop.sp 
            4700             4700                0                0                0                0                0                0             4700                0 

Logistic Regression Model
 
 lrm(formula = vote ~ p.offered + prop.ideo.diff + prop.same.gender + 
     prop.same.race + gender + race2 + sp + sd.p.offered + prop.sp, 
     data = treat.df.o, x = T, y = T)
 
 
                                Model Likelihood     Discrimination    Rank Discrim.    
                                   Ratio Test           Indexes           Indexes       
 Obs                   1300    LR chi2     728.73    R2       0.605    C       0.903    
  0                     400    d.f.             9    g        2.321    Dxy     0.806    
  1                     900    Pr(> chi2) <0.0001    gr      10.188    gamma   0.806    
 Cluster on  treat.df.o$umg                          gp       0.336    tau-a   0.344    
 Clusters                30                          Brier    0.099                     
 max |deriv|          1e-06                                                             
 
                  Coef    S.E.   Wald Z Pr(>|Z|)
 Intercept        -1.3518 0.7343 -1.84  0.0656  
 p.offered         0.8199 0.0900  9.11  <0.0001 
 prop.ideo.diff   -0.0482 0.0697 -0.69  0.4896  
 prop.same.gender -0.2172 0.2421 -0.90  0.3696  
 prop.same.race    0.1593 0.1677  0.95  0.3421  
 gender=male      -0.0850 0.3616 -0.24  0.8142  
 race2=white      -0.0221 0.3167 -0.07  0.9443  
 sp               -0.0695 0.0770 -0.90  0.3664  
 sd.p.offered     -0.3961 0.0669 -5.92  <0.0001 
 prop.sp          -0.0291 0.0510 -0.57  0.5685  
 

>  log.v4<- lrm(vote ~  p.offered +  prop.ideo.diff + prop.same.gender + prop.same.race + gender + race2+ sp + sd.p.offered*p.offered + prop.sp, data=treat.df.o, x=T, y=T)

>  log.v4.cl <- robcov(log.v4, treat.df.o$umg)

>  log.v4.cl
Frequencies of Missing Values Due to Each Variable
            vote        p.offered   prop.ideo.diff prop.same.gender   prop.same.race           gender            race2               sp     sd.p.offered          prop.sp 
            4700             4700                0                0                0                0                0                0             4700                0 

Logistic Regression Model
 
 lrm(formula = vote ~ p.offered + prop.ideo.diff + prop.same.gender + 
     prop.same.race + gender + race2 + sp + sd.p.offered * p.offered + 
     prop.sp, data = treat.df.o, x = T, y = T)
 
 
                                Model Likelihood     Discrimination    Rank Discrim.    
                                   Ratio Test           Indexes           Indexes       
 Obs                   1300    LR chi2     730.64    R2       0.606    C       0.903    
  0                     400    d.f.            10    g        2.290    Dxy     0.805    
  1                     900    Pr(> chi2) <0.0001    gr       9.875    gamma   0.806    
 Cluster on  treat.df.o$umg                          gp       0.339    tau-a   0.343    
 Clusters                30                          Brier    0.100                     
 max |deriv|          5e-06                                                             
 
                          Coef    S.E.   Wald Z Pr(>|Z|)
 Intercept                -2.2857 1.0648 -2.15  0.0318  
 p.offered                 1.0029 0.1496  6.70  <0.0001 
 prop.ideo.diff           -0.0469 0.0695 -0.67  0.4997  
 prop.same.gender         -0.2198 0.2379 -0.92  0.3556  
 prop.same.race            0.1523 0.1685  0.90  0.3661  
 gender=male              -0.0882 0.3579 -0.25  0.8052  
 race2=white              -0.0209 0.3194 -0.07  0.9478  
 sp                       -0.0709 0.0764 -0.93  0.3538  
 sd.p.offered             -0.1393 0.2098 -0.66  0.5067  
 prop.sp                  -0.0249 0.0510 -0.49  0.6260  
 p.offered * sd.p.offered -0.0494 0.0335 -1.47  0.1409  
 

>  log.v5<- lrm(vote ~  p.offered +  prop.ideo.diff + prop.same.gender + prop.same.race + gender + race2+ sp*sd.p.offered, data=treat.df.o, x=T, y=T)

>  log.v5.cl <- robcov(log.v5, treat.df.o$umg)

>  log.v5.cl
Frequencies of Missing Values Due to Each Variable
            vote        p.offered   prop.ideo.diff prop.same.gender   prop.same.race           gender            race2               sp     sd.p.offered 
            4700             4700                0                0                0                0                0                0             4700 

Logistic Regression Model
 
 lrm(formula = vote ~ p.offered + prop.ideo.diff + prop.same.gender + 
     prop.same.race + gender + race2 + sp * sd.p.offered, data = treat.df.o, 
     x = T, y = T)
 
 
                                Model Likelihood     Discrimination    Rank Discrim.    
                                   Ratio Test           Indexes           Indexes       
 Obs                   1300    LR chi2     736.46    R2       0.610    C       0.907    
  0                     400    d.f.             9    g        2.389    Dxy     0.814    
  1                     900    Pr(> chi2) <0.0001    gr      10.907    gamma   0.814    
 Cluster on  treat.df.o$umg                          gp       0.339    tau-a   0.347    
 Clusters                30                          Brier    0.098                     
 max |deriv|          2e-13                                                             
 
                   Coef    S.E.   Wald Z Pr(>|Z|)
 Intercept         -0.6008 0.8294 -0.72  0.4688  
 p.offered          0.8260 0.0882  9.37  <0.0001 
 prop.ideo.diff    -0.0461 0.0726 -0.64  0.5248  
 prop.same.gender  -0.2371 0.2453 -0.97  0.3337  
 prop.same.race     0.1404 0.1681  0.84  0.4036  
 gender=male       -0.0961 0.3607 -0.27  0.7898  
 race2=white       -0.0730 0.3204 -0.23  0.8199  
 sp                -0.2428 0.1185 -2.05  0.0405  
 sd.p.offered      -0.7806 0.1939 -4.03  <0.0001 
 sp * sd.p.offered  0.0783 0.0376  2.08  0.0373  
 

>  ################################################################################################## 
>  ### Correlations and regessions between standard devation of offers and self-placement - Page XXXXX
>  ################################################################################
>  
>  #Full sample
>  cor(mydf$sp, mydf$SD.props, use = "complete.obs")
[1] 0.009780156

>  #Treatment sample 
>  cor(treat.df$sp, treat.df$SD.props, use = "complete.obs")
[1] 0.03127939

>  #Proposer sample
>  treat.df.me<-subset(treat.df, prop_dummy==1)

>  cor(treat.df.me$sp, treat.df.me$SD.props,  use = "complete.obs")
[1] 0.03751968

>  ##### regression of SD.props on sp
>  summary(lm(SD.props~sp, mydf)) #full sample

Call:
lm(formula = SD.props ~ sp, data = mydf)

Residuals:
   Min     1Q Median     3Q    Max 
-2.186 -1.913 -1.025  1.872  7.656 

Coefficients:
            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  2.14835    0.10353   20.75   <2e-16 ***
sp           0.01058    0.02074    0.51     0.61    
---
Signif. codes:  0 *** 0.001 ** 0.01 * 0.05 . 0.1   1

Residual standard error: 2.056 on 2722 degrees of freedom
  (10380 observations deleted due to missingness)
Multiple R-squared:  9.565e-05,	Adjusted R-squared:  -0.0002717 
F-statistic: 0.2604 on 1 and 2722 DF,  p-value: 0.6099


>  summary (lm(SD.props~sp, treat.df)) #Treatment sample

Call:
lm(formula = SD.props ~ sp, data = treat.df)

Residuals:
    Min      1Q  Median      3Q     Max 
-2.2379 -1.8773 -0.9465  1.9001  7.7462 

Coefficients:
            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  2.00397    0.11992  16.711   <2e-16 ***
sp           0.03241    0.02346   1.381    0.167    
---
Signif. codes:  0 *** 0.001 ** 0.01 * 0.05 . 0.1   1

Residual standard error: 1.993 on 1948 degrees of freedom
  (7410 observations deleted due to missingness)
Multiple R-squared:  0.0009784,	Adjusted R-squared:  0.0004656 
F-statistic: 1.908 on 1 and 1948 DF,  p-value: 0.1674


>  summary (lm(SD.props~sp, base.df)) # Baseline sample

Call:
lm(formula = SD.props ~ sp, data = base.df)

Residuals:
   Min     1Q Median     3Q    Max 
-2.368 -2.021 -1.057  2.521  7.544 

Coefficients:
            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  2.46413    0.20553  11.989   <2e-16 ***
sp          -0.03864    0.04396  -0.879     0.38    
---
Signif. codes:  0 *** 0.001 ** 0.01 * 0.05 . 0.1   1

Residual standard error: 2.204 on 772 degrees of freedom
  (2970 observations deleted due to missingness)
Multiple R-squared:  0.0009998,	Adjusted R-squared:  -0.0002942 
F-statistic: 0.7727 on 1 and 772 DF,  p-value: 0.3797

There were 15 warnings (use warnings() to see them)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
> #Data Analysis: GRI experiment
> # Author code: Denise Laroze
> # Co-authors paper: David Hugh-Jones and Arndt Leininger
> # 27/Feb/2020
> 
> 
> #setwd("[address your folder]")
> 
> #bd<-"[address your folder]"
> 
> 
> #setwd("C:/Users/dalaro/Dropbox/group ID in legislative bargaining/Data Analysis GRI")
> setwd("C:/Users/Denise Laroze/Dropbox/group ID in legislative bargaining/Data Analysis GRI")

> #Baseline directory for saving plots and tables
> bd<-"C:/Users/Denise Laroze/Dropbox/group ID in legislative bargaining/Social Identity 2019-20/Data analysis/"

> #bd<-"C:/Users/André Laroze/Dropbox/group ID in legislative bargaining/Presentations/"
>  
> library("car")

> library("ggplot2")

> library("mgcv")

> library("texreg")

> library(plyr)

> library(plm)

> #library(flexmix)
> library(Hmisc)

> library(censReg)

> library(ineq)

> library(lmtest)

> library(stringr)

> library(nnet) 

> library(arm)

> library(effects)

> library(psych)

> library(rms)

> library("multcomp")

> library(xtable)

> library(pglm) 

> library(multiwayvcov)

> library(Rmisc)

> #Merging datasets
> #Corrections to data. In the code used in the Control sessions there was an error: the ideo1-10 scores were not registered
> #correctly in the dataset. This did not affect any aspect of the experimental trial (as the data is only recorded for control
> #purposes). For this reason, the data for the ideo1-10 scores are errased from the data frame. 
> #If necesarry to use the data for statistical analysis, the correct data can be surched for by looking into how the original files were
> #created)
> 
>  #mydf1<-read.csv("GRIexpt-2014-12-02-114543.csv")
>  #for (i in 1:10) mydf1[[paste0("ideo", i)]] <- NA
>  #mydf2<-read.csv("GRIexpt-2014-12-02-145238.csv")
>  #for (i in 1:10) mydf2[[paste0("ideo", i)]] <- NA
>  #mydf3<-read.csv("GRIexpt-2014-12-03-105420.csv")
>  #mydf4<-read.csv("GRIexpt-2014-12-03-125727.csv")
>  #mydf5<-read.csv("GRIexpt-2014-12-03-142507.csv")
>  #mydf6<-read.csv("GRIexpt-2014-12-03-155742.csv")
>  #mydf7<-read.csv("GRIexpt-2015-02-25-123025.csv")
>  #mydf8<-read.csv("GRIexpt-2015-02-25-102407.csv")
>  #mydf9<-read.csv("GRIexpt-2015-02-25-153453.csv")
>  #mydf10<-read.csv("GRIexpt-2015-02-25-141544.csv")
>  #mydf11<-read.csv("GRIexpt-2015-02-24-122234.csv")
>  #mydf12<-read.csv("GRIexpt-2015-02-24-102521.csv")
>  #mydf13<-read.csv("GRIexpt-2015-02-24-154255.csv")
>  #mydf14<-read.csv("GRIexpt-2015-02-24-140532.csv")
>  
>  
> #mydf<-rbind(mydf1, mydf2, mydf3, mydf4, mydf5, mydf6, mydf7, mydf8, mydf9, mydf10, mydf11, mydf12, mydf13, mydf14)
> #write.csv(mydf,file="GRI_Dec2014-Feb2015_sessions.csv",row.names=F)
> #rm(mydf1, mydf2, mydf3, mydf4, mydf5, mydf6)
> 
>  
> mydf<-read.csv("GRI_Dec2014-Feb2015_sessions.csv") 

> ##########################
> ###############   Data 
> ##########################
> 
> 
> # Individual id number 
> mydf$uid<- paste(mydf$session, mydf$id,  sep=".")

> #unique merging group, a.k.a unique observation
> mydf$umg<-paste(mydf$session, mydf$mg,  sep=".")

>  ############### PREPARATION OF DATAFRAME FOR DATA ANALYSIS
> 
> 
> 
> ##### Differences Max and Min offers to other subjects in the group
> id<-rep(NA, nrow(mydf))

> others<-list(rep(NA, 2))

> #Identifying who is closer in gender, race and ideology to the proposer, and who the proposer is offering more to.
> for (i in 1:nrow(mydf)){
+   id[i]<-mydf$group_id[i]
+   others <- setdiff(1:3, id[i])
+   var.ideo<-paste0("prop", others)
+   
+   mydf$max_other_prop[i]<-if(!is.na(mydf$prop1[i])) apply(mydf[i,var.ideo], 1, max, na.rm=TRUE) else NA
+   mydf$min_other_prop[i]<-if(!is.na(mydf$prop1[i])) apply(mydf[i,var.ideo], 1, min, na.rm=TRUE) else NA
+ } 

> rm(others, id)

>  #Difference between Max and min offers                                              
> mydf[, "diff_other_prop"] <- (mydf$max_other_prop-mydf$min_other_prop)

> #Offers to other participants
> id<-rep(NA, nrow(mydf))

> prop.A<-rep(NA, nrow(mydf))

> prop.B<-rep(NA, nrow(mydf))

> others<-list(rep(NA, 2))

> #Identifying who is closer in ideology to the proposer, and who the proposer is offering more to.
> for (i in 1:nrow(mydf)){
+   id[i]<-mydf$group_id[i]
+   others <- setdiff(1:3, id[i])
+   mydf$prop.A[i]<-mydf[[paste0("prop", others[1], sep="")]][[i]]
+   mydf$prop.B[i]<-mydf[[paste0("prop", others[2], sep="")]][[i]]
+   
+ }

> rm(id, others)

> # Identifying proposals where one of the other two people is allocated zero
> #col.name1<-which( colnames(mydf)=="prop.A" )
> #col.name2<-which( colnames(mydf)=="prop.B" )
> 
>  for(i in 1:nrow(mydf)){
+   prop.v<-mydf[i, c("prop.A", "prop.B")] 
+   mydf$zero.prop[i]<-ifelse(is.na(mydf$prop1[i]), NA, ifelse(0 %in% prop.v, 1 , 0))
+   }

>  #check<-mydf[ c("group_id", "uid", "prop1", "prop2", "prop3", "zero.prop") ]
> rm(prop.v)

> ######### Offers in Dictator Games
> #How much each participant "gave" to other players in total
> mydf[, "generosity"] <-  ifelse(mydf$group_id==1, mydf$pd1-3, ifelse (mydf$group_id==2, mydf$pd2-3 , mydf$pd3-3))

> mydf$generosity<-abs(mydf$generosity)

> # To fix the -Inf values
> is.na(mydf) <- do.call(cbind,lapply(mydf, is.infinite))

> #check<-mydf[ c("group_id", "uid", "prop1", "prop2", "prop3", "partner.id", "other.id", "x") ]
>  
> ### Code for identifying group types 
>  mydf$ugroup<- paste(mydf$session, mydf$group,  sep=".") 

>  #Simplification of race categories
>  mydf$race2<-as.character(mydf$race)

>  mydf$race2[mydf$race2 == "brown" ]<-"other"

>  mydf$race2[mydf$race2 == "black" ]<-"other"

>  tmp<-by(mydf, interaction(mydf$ugroup, mydf$period),  function(x) {
+   for (i in 1:nrow(x))
+   {
+     #Characteristics of the groups
+     x$g.gender[i]<-sum(str_count(x$gender, "female"))
+     x$g.race[i]<-sum(str_count(x$race, "white"))
+     sp.v<-x$sp 
+     x$g.sp.sd[i] <- sd(sp.v, na.rm = TRUE)
+     
+     
+     #proposer ID
+     prop_id <- as.numeric(sub("prop_", "", x$offer[1]))
+     x$prop_id<-prop_id
+     x$prop.sp<-x$sp[x$group_id == x$prop_id[i]]
+     x$prop.ideo.diff[i]<- ifelse(is.na(x$prop_id[i]), NA, abs(x$sp[i] - x$sp[x$group_id == x$prop_id[i]]))
+     x$prop.same.gender[i]<-ifelse(is.na(x$prop_id[i]), NA, ifelse(x$gender[i]==x$gender[x$group_id == x$prop_id[i]], 1, 0))
+     x$prop.same.race[i]<-ifelse(is.na(x$prop_id[i]), NA, ifelse(x$race2[i]==x$race2[x$group_id == x$prop_id[i]], 1, 0))
+     x$prop.same.race.all[i]<-ifelse(is.na(x$prop_id[i]), NA, ifelse(x$race[i]==x$race[x$group_id == x$prop_id[i]], 1, 0))
+     
+     #Offers made to each participant every round
+     prop_p <- numeric(0)
+     for (j in 1:3) prop_p[j] <- which(x$group_id==j)
+     
+     ##Identifying how much was offered to each group member each round
+     roni <- as.matrix(t(x[prop_p, paste0("prop", 1:3)]))
+     x$p.offered <- as.numeric(roni[, prop_id])
+    
+     ##Identifies me for exclusion
+     for (w in 1:3) x$prop_dummy[w]<- ifelse(is.na(x$prop_id[w]), NA, ifelse(x$group_id[w]==x$prop_id[w], 1, 0))
+     x$sd.p.offered<-sd(x$p.offered)
+     
+   }
+   
+   return(x) 
+ })

> mydf <- do.call("rbind", tmp)

> mydf<-mydf[order(mydf$session, mydf$period,mydf$group, mydf$group_id),]

> rm(tmp)

>  tmp<-by(mydf, interaction(mydf$ugroup, mydf$period),  function(x) {
+    for (i in 1:nrow(x))
+    { #Characteristics of the "receivers" 
+      x$go1[i]<-as.character(x[1,"gender"])
+      x$go2[i]<-as.character(x[2,"gender"])
+      x$go3[i]<-as.character(x[3,"gender"])
+      x$ro1[i]<-as.character(x[1,"race"])
+      x$ro2[i]<-as.character(x[2,"race"])
+      x$ro3[i]<-as.character(x[3,"race"])
+      x$spo1[i]<-as.character(x[1,"sp"])
+      x$spo2[i]<-as.character(x[2,"sp"])
+      x$spo3[i]<-as.character(x[3,"sp"])
+     }
+    return(x) 
+  })

>  mydf <- do.call("rbind", tmp)

>  mydf<-mydf[order(mydf$session, mydf$period,mydf$group, mydf$group_id),]

>  rm(tmp) 

> #Corrections to make sure no there are no problems in the data frame
>  
>  mydf$p.gender[is.na(mydf$diff_other_prop)] <-NA

>  mydf$p.race[is.na(mydf$diff_other_prop)] <-NA

> #Checks
> #r1<-mydf[mydf$round==1,]
> #check<-mydf[ c("group_id", "gender", "prop2", "prop3","offer",  "p.offered" ) ]
> #rm(r1)
> 
> ###########
> #Decision in Dictator Game added to all corresponding subj cells (needed for data analysis)
> maxp<-max(mydf$userperiod)

> mydf<- merge(mydf, mydf[mydf$userperiod == maxp, c("uid","pd1", "pd2", "pd3", "generosity")], by.x = "uid", by.y = "uid", suffixes = c("", "all")) 

> mydf<-mydf[order(mydf$session, mydf$period,mydf$mg, mydf$group_id),]

> mydf<-mydf[order(mydf$session, mydf$period,mydf$group, mydf$group_id),]

>  write.csv(mydf,file="GRI_mydf.csv",row.names=F)

> ######################## 
> ####################################################################### 
> ############# Data Analysis
> ####################################################################### 
> ########################
> 
>  mydf<-read.csv("GRI_mydf.csv")  

> ####################################
> ##########Subsetting data frames
> #################################### 
>  
> ps<-cbind(mydf$prop1, mydf$prop2, mydf$prop3)

> mydf<-transform(mydf, SD.props=apply(ps,1, sd, na.rm = TRUE))

> rm(ps)

> mydf$mg_id <- as.numeric(mydf$umg)

> ######## Subsetting data
> 
> 
> #Subsets of data
> mydf$umg<-paste(mydf$session, mydf$mg,  sep=".")

> #Reshaping long, first round of the data frame
> vars <- c(outer(c("prop", "go", "ro", "spo"), 1:3, FUN=paste0)) 

> mydf.l <- reshape(mydf[,c("treatment" , "id", "userperiod", "round", "uid" ,  "umg", "mg_id", "mg", "group", "ugroup",
+                           "group_id", "gender","race" , "race2", "g.gender", "g.race", "g.sp.sd" , "sp", 
+                           "generosityall", "vote", "p.offered", "zero.prop", vars)], 
+                   idvar=c("treatment" , "id", "userperiod", "round", "mg", "uid" , "umg", "mg_id", "group", "ugroup", 
+                           "group_id", "gender", "race" , "race2",  "g.gender", "g.race", "g.sp.sd" , "sp",
+                           "generosityall", "vote", "p.offered", "zero.prop" ), timevar="recipient",
+                   varying=list(prop=paste0("prop", 1:3), go1=paste0("go", 1:3), ro=paste0("ro", 1:3), spo=paste0("spo", 1:3)), 
+                   direction="long", new.row.names=1:(nrow(mydf)*3))

> for (i in 1:nrow(mydf.l)){
+   mydf.l$me[i]<- if (mydf.l$group_id[i]==mydf.l$recipient[i]) 1 else 0
+ }

> ### Creating independent variables of interest in long data frame
> 
> #Simplification of race categories
> mydf.l$ro2<- as.character(mydf.l$ro1)

> mydf.l$ro2[mydf.l$ro2 == "brown" ]<-"other"

> mydf.l$ro2[mydf.l$ro2 == "black" ]<-"other"

> #Ideological Distance of the proposer to the "other" group member
> pair<-list(rep(NA, 3))

> not_in_pair<-c(NA)

> mydf.l$go.o<-NA

> mydf.l$ro.o<-NA

> mydf.l$sp.o<-NA

> #mydf<-mydf[order(mydf$session, mydf$period,mydf$group, mydf$group_id),]
> #check<-mydf.l[, c("group_id", "spo1", "sp.o", "go1", "ro2")]
> #View(check)
> tmp<-by(mydf.l, interaction(mydf.l$ugroup, mydf.l$userperiod, mydf.l$group_id),  function(x) {
+   for (i in 1:nrow(x))
+   {if(x$recipient[i] != x$group_id[i]){
+     pair[i]<-list(c(x$group_id[i], x$recipient[i] ))
+     not_in_pair[i] <- setdiff(1:3, unlist(pair[i]))
+     n<-not_in_pair[i]
+     
+     # Characteristics of the 3rd group member
+     x$sp.o[i]<-x$spo1[n]
+     x$go.o[i]<-as.character(x$go1[n])
+     x$ro.o[i]<-x$ro2[n]
+     x$ro.o.all[i]<-as.character(x$ro1[n])
+     
+   } else {
+     x$sp.o[i]<-NA
+     x$go.o[i]<-NA
+     x$ro.o[i]<-NA
+     x$ro.o.all[i]<-NA
+   }
+   }
+   return(x) 
+ })

> mydf.l <- do.call("rbind", tmp)

> mydf.l <-mydf.l[order(mydf.l$userperiod, mydf.l$umg,  mydf.l$ugroup, mydf.l$group_id ),]

> rm(tmp)

> #Difference in Difference, distance with the receiver and other. 
> mydf.l$did.sp<-NA

> mydf.l$did.sp<-with(mydf.l, abs(abs(sp - spo1) - abs(sp - sp.o)) )

> #Ideological distance
> mydf.l$spo1<-as.numeric(mydf.l$spo1)

> mydf.l$ideo.diff<- abs(mydf.l$sp-mydf.l$spo1)

> mydf.l$ideo.diff.o<-abs(mydf.l$sp - mydf.l$sp.o)

> #same race and gender categories for treatment
> mydf.l$same.g <- ifelse(mydf.l$gender == mydf.l$go1, 1, 0)

> mydf.l$same.r <- ifelse(mydf.l$race2 == mydf.l$ro2, 1, 0)

> mydf.l$same.r.all<- ifelse(mydf.l$race == mydf.l$ro1, 1, 0)

> mydf.l$same.g.o<-ifelse(mydf.l$gender==mydf.l$go.o, 1, 0)

> mydf.l$same.r.o<-ifelse(mydf.l$race2==mydf.l$ro.o, 1, 0)

> mydf.l$same.r.o.all<- ifelse(mydf.l$race==mydf.l$ro.o.all, 1, 0)

> #check<-mydf.l[, c("userperiod", "group_id", "recipient", "sp", "spo1", "sp.o", "gender", "go1", "go.o", "same.g.o" ,"race2", "ro2", "ro.o", "same.r.o")]
> #View(check)
> 
> #Time variable long dataset, for panel robustness tests
> mydf.l$plm.time<- paste(mydf.l$userperiod, mydf.l$recipient,  sep=".")

> #########Separating treatment and baseline dataframes 
> # differences in the amounts given to each of the other part in the first round of negotiation after period 2
> #(valid for comparison purposed)
> base.dfl<- subset(mydf.l, treatment== "Control")

> base.df<-subset(mydf, treatment== "Control")

> treat.dfl<- subset(mydf.l, treatment== "GRI")

> treat.df<- subset(mydf, treatment== "GRI")

> #Exclusion of proposer for analysis of votes
> treat.df.o<-subset(treat.df, prop_dummy==0 )

> #Data frame for offers to the other 2 participants
> treat.dfl.o<-subset(treat.dfl, me== 0)

> base.dfl.o<-subset(base.dfl, me== 0)

> mydf.l.o<-subset(mydf.l, me== 0)

> #identifying which other group member was allocated zero
> treat.dfl.o$non.zero<-0

> treat.dfl.o$non.zero[treat.dfl.o$prop1 > 0 ] <- 1

> treat.dfl.o$non.zero[is.na(treat.dfl.o$prop1)] <- NA

> ########## Subsets of data for round 1
> treat.r1.df<-subset(treat.df, round==1)

> treat.r1.dfl<-subset(treat.dfl, round==1)

> treat.r1.df.o<-subset(treat.df.o, round==1)

> treat.r1.dfl.o<-subset(treat.dfl.o, round==1)

> base.r1.df.o<-subset(mydf, treatment=="Control" & round==1 & prop_dummy==0)

> base.r1.dfl.o<-subset(base.dfl.o, round==1)

> ##########################################
> ###########################  General Graphics
> ##########################################
> 
> 
> library(MASS)

> # Joint Kernall Density
> h1 <- hist(treat.r1.df$prop.A, freq=F)

> h2 <- hist(treat.r1.df$prop.B, freq=F)

> #top <- max(h1$counts, h2$counts)
> #k <- kde2d(df$x, df$y, n=25)
> 
> 
> 
> 
> 
> 
>  
>  #### Histograms for variables of interest
>   
> #######Gender
> # png(filename=paste0(bd, "hist_gender.png", sep=""))
>  histogram(treat.r1.df$gender, col="gray", xlab ="Gender")

> # dev.off()
> 
>  race3<-factor(treat.r1.dfl$race2)

>  #Race
>  png(filename=paste0(bd, "hist_race.png", sep=""))

>  histogram(race3, col="gray", xlab="Race") 

>  dev.off() 
RStudioGD 
        2 

> # latex(summary(treat.r1.df$race), caption="Number of subjects per race category", file=paste("race", ".tex", sep="") )
>  
> ###### Histogram Offers
>  png(filename=paste0(bd, "offers.png", sep=""))

>  hist(treat.r1.dfl.o$prop1, freq=F, col="gray",bar.width=0.8, main="", xlim=c(0,17), xlab="Pounds Offered" )                     # centered at 4

>  dev.off()
RStudioGD 
        2 

>  props<-hist(treat.r1.dfl.o$prop1, freq=F, col="blue", xaxt="n", main="", xlab="pounds") 

>  + axis(side=1,at=props$mids,labels=c(0:12))
 [1]  0.5  1.5  2.5  3.5  4.5  5.5  6.5  7.5  8.5  9.5 10.5 11.5 12.5

>  #ggsave("C:/Users/Andr? Laroze/Dropbox/group ID in legislative bargaining/Presentations/hist_props_others.png")
>  
>  
>  #### Dataset of offers towards other people
>  
>  # Plots Gender in different circumstances
>  pg <- ggplot(treat.r1.dfl.o, aes(gender, prop1)) 

>  pg <- pg + geom_boxplot(aes(fill = factor(same.g)))

>  pg <- pg + xlab("Proposer's Gender") + ylab("pounds") + ggtitle("Offers")

>  pg <- pg + scale_fill_discrete(name="Same Gender", labels=c("Different", "Same"))

>  pg <- pg + facet_wrap( ~ g.gender) + theme_bw()

>  pg

>  ggsave(paste0(bd, "prop_gender_gt.png", sep=""))
Saving 3.15 x 4.6 in image

>  #lmpg<-lm(prop1~go1*factor(g.gender)+gender, data= treat.r1.dfl.o)
>  #summary(lmpg)
>  #lmpg.cl<-cl(lmpg, treat.r1.dfl.o$umg)
>  
>  
>  #library(effects) # for plotting interaction terms, but it's very basic
>  #plot(effect(term="go1*g.gender",mod=lmpg,default.levels=20),multiline=TRUE)
>  
>   
>  # Plots Race in different circumstances
>  pr <- ggplot(treat.r1.dfl.o, aes(race2, prop1)) 

>  pr <- pr + geom_boxplot(aes(fill = factor(same.r)))

>  pr <- pr + xlab("Proposer's Race") + ylab("pounds") + ggtitle("Offers") 

>  pr <- pr + scale_fill_discrete(name="Same Race", labels=c("Different", "Same"))

>  pr <- pr + facet_wrap( ~ g.race) + theme_bw()

>  pr

>  ggsave(paste0(bd, "prop_race_gt.png", sep=""))
Saving 3.15 x 4.6 in image

>  #lmpr<-lm(prop1~ro2*factor(g.race)+race2, data= treat.r1.dfl.o)
>  #summary(lmpr) 
>  #lmpr.cl<-cl(lmpr, treat.r1.dfl.o$umg)
>  
>  #Ideological distance by N? female group members
>  qplot(ideo.diff, prop1, data = treat.r1.dfl.o, geom = c("point", "smooth"),
+        method="lm", shape=factor(g.gender), colour=factor(g.gender), ylab="pounds",
+        xlab="Absolute value ideological distance" ,main="Offers to other participants ",  
+        na.rm=TRUE) + facet_grid(g.gender~.)
Warning: Ignoring unknown parameters: method

>  #Ideological distance by N? white group members
>  qplot(ideo.diff, prop1, data = treat.r1.dfl.o, geom = c("point", "smooth"),
+        method="lm", shape=factor(g.race), colour=factor(g.race), ylab="pounds",
+        xlab="Absolute value ideological distance" ,main="Offers to other participants ",  
+        na.rm=TRUE) + facet_grid(g.race~.)
Warning: Ignoring unknown parameters: method

>  ######## Tables
>  
>  #### mean offers to participants, if man in 1 female 2 male group
> 
>  #Table male subjects
>  type1.1<- treat.r1.dfl.o$gender=="male" & treat.r1.dfl.o$go=="female" & treat.r1.dfl.o$g.gender==1 

>  type2.1<- treat.r1.dfl.o$gender=="male" & treat.r1.dfl.o$go=="male" & treat.r1.dfl.o$g.gender==1 

>  type3.1<- treat.r1.dfl.o$gender=="male" & treat.r1.dfl.o$go=="female" & treat.r1.dfl.o$g.gender==2 

>  type4.1<- treat.r1.dfl.o$gender=="male" & treat.r1.dfl.o$go=="male" & treat.r1.dfl.o$g.gender==2 

>  #Table Gender Interactions
>  type1.2<- treat.r1.dfl.o$gender=="female" & treat.r1.dfl.o$go=="female" & treat.r1.dfl.o$g.gender==1 

>  type2.2<- treat.r1.dfl.o$gender=="female" & treat.r1.dfl.o$go=="male" & treat.r1.dfl.o$g.gender==1 

>  type3.2<- treat.r1.dfl.o$gender=="female" & treat.r1.dfl.o$go=="female" & treat.r1.dfl.o$g.gender==2 

>  type4.2<- treat.r1.dfl.o$gender=="female" & treat.r1.dfl.o$go=="male" & treat.r1.dfl.o$g.gender==2 

>  t1.1<-summary(treat.r1.dfl.o$prop1[type1.1])

>  t2.1<-summary(treat.r1.dfl.o$prop1[type2.1])

>  t3.1<-summary(treat.r1.dfl.o$prop1[type3.1])

>  t4.1<-summary(treat.r1.dfl.o$prop1[type4.1])

>  t1.2<-summary(treat.r1.dfl.o$prop1[type1.2])

>  t2.2<-summary(treat.r1.dfl.o$prop1[type2.2])

>  t3.2<-summary(treat.r1.dfl.o$prop1[type3.2])

>  t4.2<-summary(treat.r1.dfl.o$prop1[type4.2])

>  table.lags1 <- as.table(cbind(t1.1[4], t2.1[4], t1.2[4], t2.2[4]))

>  table.lags2 <- as.table(cbind(t3.1[4], t4.1[4], t3.2[4], t4.2[4]))

>  table.lags <- as.table(rbind(table.lags1, table.lags2))

>  colnames(table.lags) <- c("MF", "MM", "FF", "FM")

>  rownames(table.lags) <- c("1F 2M", "2F 1M")

>  table.lags
      MF MM FF FM
1F 2M            
2F 1M            

> ####################################### 
> ### Ideology and distance  -  Figure 2
> #######################################
>  
>  png(filename=paste0(bd, "hist_sp.png"))

>  discrete.histogram(treat.r1.dfl$sp, prob.col="gray",bar.width=0.8 , xlab="Ideological Self-Placement", freq=F, main="", cex.lab=1.5)

>  dev.off()
RStudioGD 
        2 

>  png(filename=paste0(bd, "hist_ideo_diff.png"))

>  discrete.histogram(treat.r1.dfl.o$ideo.diff, prob.col="gray",bar.width=0.8 , xlab="Absolute value ideological distance", freq=F, main="", cex.lab=1.5)

>  dev.off()
RStudioGD 
        2 

> #############
> #### Figure 3 - left
> ############## 
>  prop.A<-treat.r1.df$prop.A

>  prop.B<-treat.r1.df$prop.B  

>  #Graph of the offers to other participants
>  h.offers<-data.matrix(cbind(prop.A, prop.B))

>  require(ggplot2)

>  p <- ggplot(treat.r1.df, aes(max_other_prop, min_other_prop)) + scale_fill_gradient(low="grey90", high="black")

>  p <- p + stat_bin2d(bins = 20) + xlab("Larger offer") +  ylab("Smaller offer") + xlim(c(0,15)) + ylim(c(0,15)) + theme_bw()

>  p <-p + geom_text(aes(4, 0.2, label="NE"), colour="blue") +  theme(text=element_text(size=24))

>  p

>  ggsave(filename=paste0(bd, "offers.png", sep=""),  width=9, height=6)

> ###################### 
> #### Figure 3 - right
> ######################## 
>  #Descriptive statistics
>  
>  treat.r1.df$votetable<-treat.r1.df$vote_result

>  treat.r1.df$votetable[treat.r1.df$votetable==0]<-"Rejected"

>  treat.r1.df$votetable[treat.r1.df$votetable==1]<-"Accepted"

>  treat.r1.df$votetable<-as.factor(treat.r1.df$votetable)

>  votetable<-with(treat.r1.df,table(votetable, useNA = "no"))

>  votetable<-prop.table(votetable)

>  tablenames<-c("Accepted", "Rejected")

>  print(votetable[c(1,3)])
votetable
  Accepted   Rejected 
0.92333333 0.07666667 

>  png(paste0(bd, "votes_model.png"))

>  barplot(votetable[c(1,3)], main="",
+          xlab="Vote Result", col="grey", 
+          ylab="Ratio", ylim=0:1, cex.names=1.5, cex.axis=1.5)

>  dev.off()
RStudioGD 
        2 

>  ### Treatment sessions vs control
> # votetable<-with(mydf.r1,table(vote, Treatment = treatment, useNA = "no"))
> # votetable<-prop.table(votetable,2)
> # print(votetable)
>  #Latex
> # votetable<-xtable(votetable)
> # print(votetable,floating=FALSE)
>  
>   
> ####################################################################
> ######################### Empirical Analysis
> #################################################################### 
> 
> ###Analysis on round 1 of the 10 periods. 
> 
> 
> ########################## 
> #Descriptive statistics
> #########################
>  with(treat.r1.dfl, table(go1, g.gender))
        g.gender
go1         0    1    2    3
  female    0  369 1608 1593
  male    288  738  804    0

>  cor(treat.r1.df$generosityall, treat.r1.df$sp)
[1] -0.2167555

>  cor(as.numeric(treat.r1.df$gender), treat.r1.df$sp)
[1] 0.08873674

>  cor(as.numeric(treat.r1.df$race), treat.r1.df$sp)
[1] -0.07066373

> ############################################ 
> ### Manuscript Models of interest - Table 1
> ############################################
>  
>   #DV: Offer  - Definition 1 same group
>  lm.M1<-ols(prop1~ideo.diff + same.g + same.r, data=treat.r1.dfl.o, y=T, x=T)

>  lm.M1.cl<-robcov(lm.M1, treat.r1.dfl.o$umg)

>  lm.M1.cl
Linear Regression Model
 
 ols(formula = prop1 ~ ideo.diff + same.g + same.r, data = treat.r1.dfl.o, 
     x = T, y = T)
 
                                 Model Likelihood     Discrimination    
                                    Ratio Test           Indexes        
 Obs                    3600     LR chi2     37.06    R2       0.010    
 sigma                2.2659     d.f.            3    R2 adj   0.009    
 d.f.                   3596     Pr(> chi2) 0.0000    g        0.258    
 Cluster ontreat.r1.dfl.o$umg                                           
 Clusters                 30                                            
 
 Residuals
 
     Min      1Q  Median      3Q     Max 
 -5.2280 -0.6332  0.5656  1.0852  8.6484 
 
 
           Coef    S.E.   t     Pr(>|t|)
 Intercept  5.1292 0.1485 34.54 <0.0001 
 ideo.diff -0.1296 0.0405 -3.20 0.0014  
 same.g     0.0988 0.1348  0.73 0.4637  
 same.r    -0.0948 0.1180 -0.80 0.4218  
 

>  #DV: Offer  - Definition 1 with controles
>  lm.M2<-ols(prop1~ideo.diff + ideo.diff.o + same.g + + same.g.o +same.r+ same.g.o + same.r.o, data=treat.r1.dfl.o, y=T, x=T)

>  lm.M2.cl<-robcov(lm.M2, treat.r1.dfl.o$umg)

>  lm.M2.cl
Linear Regression Model
 
 ols(formula = prop1 ~ ideo.diff + ideo.diff.o + same.g + +same.g.o + 
     same.r + same.g.o + same.r.o, data = treat.r1.dfl.o, x = T, 
     y = T)
 
                                 Model Likelihood     Discrimination    
                                    Ratio Test           Indexes        
 Obs                    3600     LR chi2     46.69    R2       0.013    
 sigma                2.2639     d.f.            6    R2 adj   0.011    
 d.f.                   3593     Pr(> chi2) 0.0000    g        0.285    
 Cluster ontreat.r1.dfl.o$umg                                           
 Clusters                 30                                            
 
 Residuals
 
     Min      1Q  Median      3Q     Max 
 -5.3648 -0.6070  0.5501  1.0790  8.4607 
 
 
             Coef    S.E.   t     Pr(>|t|)
 Intercept    5.1048 0.1533 33.29 <0.0001 
 ideo.diff   -0.1571 0.0479 -3.28 0.0010  
 ideo.diff.o  0.0629 0.0287  2.19 0.0285  
 same.g       0.1593 0.1418  1.12 0.2615  
 same.g.o    -0.1320 0.1363 -0.97 0.3330  
 same.r      -0.1447 0.1258 -1.15 0.2501  
 same.r.o     0.1196 0.0953  1.25 0.2096  
 

>  lm.M3<-ols(prop1~ideo.diff + same.g+same.r+ ideo.diff.o + same.g.o + same.r.o + sp + gender + race2 , data=treat.r1.dfl.o, y=T, x=T)

>  lm.M3.cl<-robcov(lm.M3, treat.r1.dfl.o$umg)

>  lm.M3.cl
Linear Regression Model
 
 ols(formula = prop1 ~ ideo.diff + same.g + same.r + ideo.diff.o + 
     same.g.o + same.r.o + sp + gender + race2, data = treat.r1.dfl.o, 
     x = T, y = T)
 
                                 Model Likelihood     Discrimination    
                                    Ratio Test           Indexes        
 Obs                    3600     LR chi2     52.92    R2       0.015    
 sigma                2.2628     d.f.            9    R2 adj   0.012    
 d.f.                   3590     Pr(> chi2) 0.0000    g        0.306    
 Cluster ontreat.r1.dfl.o$umg                                           
 Clusters                 30                                            
 
 Residuals
 
     Min      1Q  Median      3Q     Max 
 -5.4498 -0.6398  0.5457  1.0790  8.2164 
 
 
             Coef    S.E.   t     Pr(>|t|)
 Intercept    5.2910 0.1714 30.87 <0.0001 
 ideo.diff   -0.1572 0.0482 -3.26 0.0011  
 same.g       0.1561 0.1344  1.16 0.2457  
 same.r      -0.1518 0.1254 -1.21 0.2263  
 ideo.diff.o  0.0645 0.0286  2.26 0.0242  
 same.g.o    -0.1213 0.1228 -0.99 0.3231  
 same.r.o     0.1050 0.0896  1.17 0.2412  
 sp          -0.0456 0.0202 -2.26 0.0239  
 gender=male -0.0089 0.1132 -0.08 0.9377  
 race2=white  0.0573 0.0823  0.70 0.4861  
 

>  screenreg(list(lm.M1.cl, lm.M2.cl, lm.M3.cl))

==================================================
             Model 1      Model 2      Model 3    
--------------------------------------------------
Intercept       5.13 ***     5.10 ***     5.29 ***
               (0.15)       (0.15)       (0.17)   
ideo.diff      -0.13 **     -0.16 **     -0.16 ** 
               (0.04)       (0.05)       (0.05)   
same.g          0.10         0.16         0.16    
               (0.13)       (0.14)       (0.13)   
same.r         -0.09        -0.14        -0.15    
               (0.12)       (0.13)       (0.13)   
ideo.diff.o                  0.06 *       0.06 *  
                            (0.03)       (0.03)   
same.g.o                    -0.13        -0.12    
                            (0.14)       (0.12)   
same.r.o                     0.12         0.10    
                            (0.10)       (0.09)   
sp                                       -0.05 *  
                                         (0.02)   
gender=male                              -0.01    
                                         (0.11)   
race2=white                               0.06    
                                         (0.08)   
--------------------------------------------------
Num. obs.    3600         3600         3600       
R^2             0.01         0.01         0.01    
Adj. R^2        0.01         0.01         0.01    
L.R.           37.06        46.69        52.92    
==================================================
*** p < 0.001, ** p < 0.01, * p < 0.05

>  # Partner and vote models
>  
>  log.p <- lrm(non.zero ~ ideo.diff+  same.g + same.r + ideo.diff.o+ same.g.o +same.r.o + sp + gender + race2 , data=treat.r1.dfl.o, x=T, y=T ) 

>  log.p.cl <- robcov(log.p, treat.r1.dfl.o$umg) 

>  log.p.cl
Logistic Regression Model
 
 lrm(formula = non.zero ~ ideo.diff + same.g + same.r + ideo.diff.o + 
     same.g.o + same.r.o + sp + gender + race2, data = treat.r1.dfl.o, 
     x = T, y = T)
 
                                    Model Likelihood     Discrimination    Rank Discrim.    
                                       Ratio Test           Indexes           Indexes       
 Obs                       3600    LR chi2     105.40    R2       0.065    C       0.666    
  0                         309    d.f.             9    g        0.685    Dxy     0.332    
  1                        3291    Pr(> chi2) <0.0001    gr       1.984    gamma   0.332    
 Cluster on  treat.r1.dfl.o$umg                          gp       0.053    tau-a   0.052    
 Clusters                    30                          Brier    0.076                     
 max |deriv|              1e-12                                                             
 
             Coef    S.E.   Wald Z Pr(>|Z|)
 Intercept    3.3011 0.5275  6.26  <0.0001 
 ideo.diff   -0.2209 0.0703 -3.14  0.0017  
 same.g       0.2937 0.1475  1.99  0.0464  
 same.r      -0.2688 0.1489 -1.80  0.0711  
 ideo.diff.o  0.0849 0.0436  1.95  0.0515  
 same.g.o     0.0064 0.1896  0.03  0.9731  
 same.r.o     0.1960 0.2237  0.88  0.3811  
 sp          -0.0397 0.0588 -0.68  0.4994  
 gender=male -0.7875 0.2607 -3.02  0.0025  
 race2=white -0.1843 0.2627 -0.70  0.4831  
 

>  screenreg(log.p.cl)

========================
             Model 1    
------------------------
Intercept       3.30 ***
               (0.53)   
ideo.diff      -0.22 ** 
               (0.07)   
same.g          0.29 *  
               (0.15)   
same.r         -0.27    
               (0.15)   
ideo.diff.o     0.08    
               (0.04)   
same.g.o        0.01    
               (0.19)   
same.r.o        0.20    
               (0.22)   
sp             -0.04    
               (0.06)   
gender=male    -0.79 ** 
               (0.26)   
race2=white    -0.18    
               (0.26)   
------------------------
Num. obs.    3600       
Pseudo R^2      0.07    
L.R.          105.40    
========================
*** p < 0.001, ** p < 0.01, * p < 0.05

>  #DV: Vote  - Basic model with clustered se for correlation  within groups
>  log.v1<- lrm(vote ~    prop.ideo.diff + prop.same.gender + prop.same.race  + sp + gender + race2, data=treat.r1.df.o, x=T, y=T)

>  log.v1.cl <- robcov(log.v1, treat.r1.df.o$umg)

>  log.v1.cl
Logistic Regression Model
 
 lrm(formula = vote ~ prop.ideo.diff + prop.same.gender + prop.same.race + 
     sp + gender + race2, data = treat.r1.df.o, x = T, y = T)
 
                                  Model Likelihood     Discrimination    Rank Discrim.    
                                     Ratio Test           Indexes           Indexes       
 Obs                      1200    LR chi2     20.60    R2       0.024    C       0.582    
  0                        363    d.f.            6    g        0.317    Dxy     0.164    
  1                        837    Pr(> chi2) 0.0022    gr       1.374    gamma   0.165    
 Cluster on  treat.r1.df.o$umg                         gp       0.067    tau-a   0.069    
 Clusters                   30                         Brier    0.207                     
 max |deriv|             3e-13                                                            
 
                  Coef    S.E.   Wald Z Pr(>|Z|)
 Intercept         1.4880 0.3277  4.54  <0.0001 
 prop.ideo.diff   -0.1468 0.0501 -2.93  0.0034  
 prop.same.gender -0.0223 0.1873 -0.12  0.9053  
 prop.same.race    0.1823 0.1787  1.02  0.3075  
 sp               -0.0558 0.0424 -1.32  0.1883  
 gender=male       0.0521 0.2300  0.23  0.8208  
 race2=white      -0.2455 0.1721 -1.43  0.1539  
 

>  log.v2<- lrm(vote ~  prop.ideo.diff + prop.same.gender + prop.same.race + sp + gender + race2 + p.offered, data=treat.r1.df.o, x=T, y=T)

>  log.v2.cl <- robcov(log.v2, treat.r1.df.o$umg)

>  log.v2.cl
Logistic Regression Model
 
 lrm(formula = vote ~ prop.ideo.diff + prop.same.gender + prop.same.race + 
     sp + gender + race2 + p.offered, data = treat.r1.df.o, x = T, 
     y = T)
 
                                   Model Likelihood     Discrimination    Rank Discrim.    
                                      Ratio Test           Indexes           Indexes       
 Obs                      1200    LR chi2     634.57    R2       0.581    C       0.901    
  0                        363    d.f.             7    g        2.431    Dxy     0.802    
  1                        837    Pr(> chi2) <0.0001    gr      11.367    gamma   0.803    
 Cluster on  treat.r1.df.o$umg                          gp       0.326    tau-a   0.339    
 Clusters                   30                          Brier    0.100                     
 max |deriv|             6e-13                                                             
 
                  Coef    S.E.   Wald Z Pr(>|Z|)
 Intercept        -3.0200 0.7495 -4.03  <0.0001 
 prop.ideo.diff   -0.0372 0.0731 -0.51  0.6106  
 prop.same.gender -0.2985 0.2771 -1.08  0.2812  
 prop.same.race    0.2035 0.1931  1.05  0.2920  
 sp               -0.0804 0.0829 -0.97  0.3319  
 gender=male      -0.0751 0.3705 -0.20  0.8395  
 race2=white      -0.1663 0.3318 -0.50  0.6163  
 p.offered         0.9979 0.1183  8.43  <0.0001 
 

>  screenreg(list(log.p.cl, log.v1, log.v2.cl))

=======================================================
                  Model 1      Model 2      Model 3    
-------------------------------------------------------
Intercept            3.30 ***     1.49 ***    -3.02 ***
                    (0.53)       (0.24)       (0.75)   
ideo.diff           -0.22 **                           
                    (0.07)                             
same.g               0.29 *                            
                    (0.15)                             
same.r              -0.27                              
                    (0.15)                             
ideo.diff.o          0.08                              
                    (0.04)                             
same.g.o             0.01                              
                    (0.19)                             
same.r.o             0.20                              
                    (0.22)                             
sp                  -0.04        -0.06        -0.08    
                    (0.06)       (0.03)       (0.08)   
gender=male         -0.79 **      0.05        -0.08    
                    (0.26)       (0.14)       (0.37)   
race2=white         -0.18        -0.25        -0.17    
                    (0.26)       (0.15)       (0.33)   
prop.ideo.diff                   -0.15 ***    -0.04    
                                 (0.04)       (0.07)   
prop.same.gender                 -0.02        -0.30    
                                 (0.13)       (0.28)   
prop.same.race                    0.18         0.20    
                                 (0.14)       (0.19)   
p.offered                                      1.00 ***
                                              (0.12)   
-------------------------------------------------------
Num. obs.         3600         1200         1200       
Pseudo R^2           0.07         0.02         0.58    
L.R.               105.40        20.60       634.57    
=======================================================
*** p < 0.001, ** p < 0.01, * p < 0.05

>  ### Printing all models as 1 table
>  texreg(file= paste0(bd, "base_all_models.tex", sep=""), 
+         list(lm.M1.cl, lm.M2.cl, lm.M3.cl, log.p.cl, log.v1.cl, log.v2.cl), 
+         custom.model.names = c("M1 Offer", "M2 Offer", "M3 Offer", "M4 Partner", "M5 Vote", "M6 Vote"), 
+         custom.coef.names = c("Intercept", "Diff SP P-R", "Same Gender", "Same Race", 
+                               "Diff SP P-3rd", "Same Gender P-3rd", "Same Race P-3rd", 
+                               "Self-Placement", "Proposer-Male", "Proposer-White", 
+                               "Diff SP P-R", "Same Gender", "Same Race", "Amount Offered" ),
+         caption = "Statistical Models on Proposal and Voting Behaviour",
+         label="table:base_model",
+         booktabs = F, dcolumn = F)
The table was written to the file 'C:/Users/Denise Laroze/Dropbox/group ID in legislative bargaining/Social Identity 2019-20/Data analysis/base_all_models.tex'.


>  #  ### Print Models in 2 separate tables
>  # texreg(file= paste0(bd, "base_models.tex", sep=""), 
>  #        list(lm.M1.cl, lm.M2.cl, lm.M3.cl), 
>  #        custom.model.names = c("M1 Offer", "M2 Offer", "M3 Offer"), 
>  #        custom.coef.names = c("Intercept", "Diff SP P-R", "Same Gender", "Same Race", 
>  #                              "Diff SP P-3rd", "Same Gender P-3rd", "Same Race P-3rd", 
>  #                              "Self-Placement", "Proposer-Male", "Proposer-White" ),
>  #        booktabs = F, dcolumn = F)
>  # 
>  # 
>  # texreg(#file= paste0(bd, "log_models.tex", sep=""), 
>  #   list(log.p.cl, log.v1, log.v2.cl), 
>  #   custom.model.names = c("M4 Partner", "M5 Vote", "M6 Vote"), 
>  #   custom.coef.names = c("Intercept", "Diff SP P-R", "Same Gender", "Same Race", 
>  #                         "Diff SP P-3rd", "Same Gender P-3rd", "Same Race P-3rd", 
>  #                         "Self-Placement", "Proposer-Male", "Proposer-White", 
>  #                         "Diff SP P-R", "Same Gender", "Same Race", "Amount Offered" ),
>  #   booktabs = F, dcolumn = F,
>  #   stars=c(0.001, 0.01, 0.05,  0.1))
>  # 
>  # screenreg(list(lm.M1.cl, lm.M2.cl, lm.M3.cl))
>  # 
>  
>  screenreg(list(log.v1.cl, log.v2.cl))

==========================================
                  Model 1      Model 2    
------------------------------------------
Intercept            1.49 ***    -3.02 ***
                    (0.33)       (0.75)   
prop.ideo.diff      -0.15 **     -0.04    
                    (0.05)       (0.07)   
prop.same.gender    -0.02        -0.30    
                    (0.19)       (0.28)   
prop.same.race       0.18         0.20    
                    (0.18)       (0.19)   
sp                  -0.06        -0.08    
                    (0.04)       (0.08)   
gender=male          0.05        -0.08    
                    (0.23)       (0.37)   
race2=white         -0.25        -0.17    
                    (0.17)       (0.33)   
p.offered                         1.00 ***
                                 (0.12)   
------------------------------------------
Num. obs.         1200         1200       
Pseudo R^2           0.02         0.58    
L.R.                20.60       634.57    
==========================================
*** p < 0.001, ** p < 0.01, * p < 0.05

>  plotreg(lm.M3.cl, file = paste0(bd, "base_model.png", sep=""),
+          custom.model.names = "OLS - Amount Offered to Others",
+          custom.coef.names = c("Intercept", "Diff SP P-R", "Same Gender", "Same Race", 
+                                "Diff SP P-3rd", "Same Gender P-3rd", "Same Race P-3rd", 
+                                "Self-Placement", "Proposer-Male", "Proposer-White"),
+          omit.coef = "Intercept",  ci.level = 0.95)
Model 1: bars denote 0.5 (inner) resp. 0.95 (outer) confidence intervals (computed from standard errors).
RStudioGD 
        2 

>  plotreg(log.p.cl, file = paste0(bd, "partner_model.png", sep=""),
+          custom.model.names = "Logit- Partner Selection",
+          custom.coef.names = c("Intercept", "Diff SP P-R", "Same Gender", "Same Race", 
+                                "Diff SP P-3rd", "Same Gender P-3rd", "Same Race P-3rd", 
+                                "Self-Placement", "Proposer-Male", "Proposer-White"),
+          omit.coef = "Intercept",  ci.level = 0.95)
Model 1: bars denote 0.5 (inner) resp. 0.95 (outer) confidence intervals (computed from standard errors).
RStudioGD 
        2 

>  plotreg(log.v2.cl, file = paste0(bd, "vote_result.png", sep=""),
+          custom.model.names = "Logit - Vote",
+          custom.coef.names = c("Intercept", "Diff SP P-R", "Same Gender", "Same Race", 
+                                "Self-Placement", "Proposer-Male", "Proposer-White",
+                                "Amount Offered" ),
+          omit.coef = "Intercept",  ci.level = 0.95)
Model 1: bars denote 0.5 (inner) resp. 0.95 (outer) confidence intervals (computed from standard errors).
RStudioGD 
        2 

> ###########################################
> ### Matching group statistics -- Figure 4
> ############################################
>  base.r1.dfl.o$mg_id<-as.numeric(factor(base.r1.dfl.o$umg))

>  treat.r1.dfl.o$mg_id <- as.numeric(factor(treat.r1.dfl.o$umg))

>  treat.dfl.o$mg_id<- as.numeric(factor(treat.dfl.o$umg))

>  ##### Matching group level statistics, on amount given to others
>  #ideo.diff Treatment GRI
>  ideo.mg<-rep(NA, 30)

>  gender.mg<-rep(NA, 30)

>  race.mg<-rep(NA, 30)

>  for(i in 1:30){
+    lm<-lm(prop1~ideo.diff + same.g + same.r, data=subset(treat.r1.dfl.o, treat.r1.dfl.o$mg_id==i))
+    summary(lm)
+    ideo.mg[i]<-lm$coef[2]
+    gender.mg[i]<-lm$coef[3]
+    race.mg[i]<-lm$coef[4]
+  }

>  ideo.mg
 [1] -0.18869604 -0.16136364  0.12816240 -0.04139555 -0.05740396  0.03645494  0.11343005 -0.23460331  0.22130829 -0.43945179 -0.30597978 -0.02786260 -0.26984536  0.14631249  0.21337657 -0.46514228 -0.85111537
[18] -0.12126120 -0.13325072 -0.25245279 -0.30284056  0.02198478  0.26277426  0.05984711 -0.17685683 -0.13268765 -0.03718590 -0.37340130 -1.18913613 -0.41730600

>  ### Figure 4
>  #### Graphs for matching groups
>  png(filename= paste0(bd, "ideo_mg.png", sep=""))

>  plot(ideo.mg, ylab="Coef. Diff SP P-R", xlab="Matching Group", cex.lab=1.5) + abline(h=0, col="red")# +  theme(text=element_text(size=24))
integer(0)

>  dev.off()
RStudioGD 
        2 

>  mean(ideo.mg)
[1] -0.1658529

>  sum(ideo.mg<0) # Number of matching group with coeff below 0
[1] 21

>  wilcox.test(ideo.mg, data=ideo.diff) # Non-parametric test if mean is equal to zero

	Wilcoxon signed rank test

data:  ideo.mg
V = 98, p-value = 0.004665
alternative hypothesis: true location is not equal to 0


>  png(filename= paste0(bd, "gender_mg.png", sep=""))

>  plot(gender.mg, ylab="Coef. Same Gender", xlab="Matching Group") + abline(h=0, col="red")
integer(0)

>  dev.off()
RStudioGD 
        2 

>  wilcox.test(gender.mg, data=ideo.diff) # Non-parametric test if mean is equal to zero

	Wilcoxon signed rank test

data:  gender.mg
V = 210, p-value = 0.8842
alternative hypothesis: true location is not equal to 0


>  png(filename= paste0(bd, "race_mg.png", sep=""))

>  plot(race.mg, ylab="Coef. Same Race", xlab="Matching Group") + abline(h=0, col="red")
integer(0)

>  dev.off()
RStudioGD 
        2 

>  wilcox.test(race.mg, data=ideo.diff) # Non-parametric test if mean is equal to zero

	Wilcoxon signed rank test

data:  race.mg
V = 130, p-value = 0.8229
alternative hypothesis: true location is not equal to 0


>  ##### Matching group analysis for ideo.diff.o
>  ideo.diff.o<-rep(NA, 30)

>  for(i in 1:30){
+    lm<-lm(prop1~ideo.diff.o + ideo.diff + same.g + same.r, data=subset(treat.r1.dfl.o, treat.r1.dfl.o$mg_id==i))
+    summary(lm)
+    names(lm)
+    ideo.diff.o[i]<-lm$coef[2]
+  }

>  plot(ideo.diff.o)+ abline(h=0, col="red")
integer(0)

>  wilcox.test(ideo.diff.o, data=ideo.diff.o)

	Wilcoxon signed rank test

data:  ideo.diff.o
V = 275, p-value = 0.3931
alternative hypothesis: true location is not equal to 0


>  ideo.diff.o<-table(ideo.diff.o)

>  sum(ideo.diff.o[names(ideo.diff.o)<0])
[1] 13

>  ##### Matching group level statistics, on partner selection
>  ideo.partner<-rep(NA, 30)

>  for(i in 1:30){
+    log.M1 <- glm(non.zero ~ ideo.diff + same.g + same.r , data=subset(treat.dfl.o, treat.dfl.o$mg_id==i), family = "binomial") 
+    summary(log.M1)
+    ideo.partner[i]<-log.M1$coef[2]
+  }

>  plot(ideo.partner, ylab="Coef. Diff SP P-R", xlab="Matching Group") + abline(h=0, col="red")
integer(0)

>  wilcox.test(ideo.partner, data=ideo.partner) 

	Wilcoxon signed rank test

data:  ideo.partner
V = 177, p-value = 0.2621
alternative hypothesis: true location is not equal to 0


>  data=subset(treat.dfl.o, treat.dfl.o$mg_id==i)

>  ###############################################
> #### Coaliton formation - Table 2
> ###############################################
>  
>  
>  #Identification of who is closest
>  
>  id<-rep(NA, nrow(mydf))

>  others<-list(rep(NA, 2))

>  #Identifying who is closer in gender, race and ideology to the proposer, and who the proposer is offering more to.
>  for (i in 1:nrow(mydf)){
+    id[i]<-mydf$group_id[i]
+    others <- setdiff(1:3, id[i])
+    
+    if (mydf$treatment[i]=="GRI"){
+      mydf$ideo.dist.A[i]<-abs(mydf$sp[i]-mydf[[paste0("spo", others[1], sep="")]][[i]]) 
+      mydf$ideo.dist.B[i]<-abs(mydf$sp[i]-mydf[[paste0("spo", others[2], sep="")]][[i]]) 
+      var.ideo<-c("ideo.dist.A", "ideo.dist.B")
+      mydf$closer.ideo[i]<-ifelse( mydf$ideo.dist.A[i]==mydf$ideo.dist.B[i] , "Equal" ,names(which.min(mydf[i,var.ideo])) )
+      
+      props.i.want<-paste0("prop.", c("A","B"), sep="")
+      mydf$offer.more[i]<-ifelse(mydf$prop.A[i]==mydf$prop.B[i] , "Equal" ,names(which.max(mydf[i,props.i.want])) )
+    }
+    else {
+      mydf$ideo.dist.A[i]<-NA
+      mydf$ideo.dist.B[i]<-NA
+      mydf$closer.ideo[i]<-NA
+      mydf$offer.more[i]<-NA
+    }
+  }

>  rm(id, others)

>  mydf$closer.ideo[is.na(mydf$offer)]<-NA

>  mydf$closer.ideo[mydf$closer.ideo=="ideo.dist.A"]<-"A" #simplification of values

>  mydf$closer.ideo[mydf$closer.ideo=="ideo.dist.B"]<-"B"

>  mydf$offer.more[mydf$offer.more=="prop.A"]<-"A"

>  mydf$offer.more[mydf$offer.more=="prop.B"]<-"B"

>  tmp<-by(mydf, interaction(mydf$ugroup, mydf$period),  function(x) {
+    
+    c.v<-if ( 0 %in% x$vote) "Minimal" else "Grand"
+    x$c.type<-c.v
+    x$c.type[x$vote_result=="Rejected"]<-"Rejected"
+    x$c.type[is.na(x$prop1)]<-NA
+    
+    id<-rep(NA, nrow(x))
+    others<-list(rep(NA, 2))
+    
+    for (i in 1:nrow(x)){
+      id<-x$group_id[i]
+      others <- setdiff(1:3, id)
+      x$v.favour[i]<-ifelse(is.na(x$prop1[i]), NA, ifelse(x$vote[others[1]]=="1", "A" , "B"))  
+      
+    }
+    
+    x$v.favour[x$c.type=="Grand"]<-"Grand"
+    x$v.favour[x$vote_result=="Rejected"]<-"Rejected"
+    return(x) 
+  })

>  coalition.df <- do.call("rbind", tmp)

>  rm(tmp) 

>  coalition.df<-coalition.df[order(coalition.df$session, coalition.df$period,coalition.df$group, coalition.df$group_id),]

>  coalition.df.me<-subset(coalition.df, prop_dummy==1)

>  coalition.df.me<-coalition.df.me[, c("treatment", "userperiod", "group_id", "offer", "prop_dummy", "vote", "vote_result", "p.offered", "closer.ideo", "c.type", "v.favour" )]

>  coalition.df.me$closer.ideo[is.na(coalition.df.me$vote)]<-NA

>  ##### Table with coalition partner
>  coalition.df.me$coalition.vote<-NA

>  coalition.df.me$coalition.vote[coalition.df.me$c.type=="Minimal" & coalition.df.me$closer.ideo!=coalition.df.me$v.favour]<- "Disconnected"

>  coalition.df.me$coalition.vote[coalition.df.me$c.type=="Minimal" & coalition.df.me$closer.ideo==coalition.df.me$v.favour]<-"Connected"

>  coalition.df.me$coalition.vote[coalition.df.me$c.type=="Minimal" & coalition.df.me$closer.ideo=="Equal"]<-"Equal"

>  coalition.df.me$coalition.vote[coalition.df.me$c.type=="Grand"]<-"Grand"

>  coalition.df.me$coalition.vote[coalition.df.me$c.type=="Rejected"]<-"Rejected"

>  #Coalitions for Treatment Group
>  coalition.t<-table(coalition.df.me$coalition.vote[coalition.df.me$treatment=="GRI"])

>  coalition.t<-coalition.t[1:4]

>  prop.t<-prop.table(t(coalition.t), 1)*100

>  coalition.t<-t(rbind(coalition.t, prop.t))

>  coalition.t
             coalition.t         
Connected            140 23.33333
Disconnected          97 16.16667
Equal                 68 11.33333
Grand                295 49.16667

>  # % minimal group
>  coalition.min<-coalition.t[1:3]

>  prop.min<-prop.table(t(coalition.min), 1)*100

>  prop.min[4]<-"--"

>  #table
>  coalition.t<-cbind(coalition.t, prop.min)

>  coalition.t
             coalition.t                    prop.min          
Connected    "140"       "23.3333333333333" "45.9016393442623"
Disconnected "97"        "16.1666666666667" "31.8032786885246"
Equal        "68"        "11.3333333333333" "22.2950819672131"
Grand        "295"       "49.1666666666667" "--"              

>  #Coalitions Control
>  coalition.base<-table(coalition.df.me$c.type[coalition.df.me$treatment=="Control"])

>  coalition.base<-coalition.base[1:2]

>  coalition.base.p<-prop.table(t(coalition.base), 1)

>  coalition.base.p
      
           Grand   Minimal
  [1,] 0.5166667 0.4833333

>  coalition.b <- matrix(nrow = 4, ncol = 2)

>  coalition.b[2, 1]<-coalition.base[1]

>  coalition.b[4, 1]<-coalition.base[2]

>  coalition.b[2, 2]<-coalition.base.p[1]*100

>  coalition.b[4, 2]<-coalition.base.p[2]*100

>  coalition.b<-as.table(coalition.b)

>  main.coalition<-cbind(coalition.t, coalition.b)

>  main.coalition
             coalition.t                    prop.min           A     B                 
Connected    "140"       "23.3333333333333" "45.9016393442623" NA    NA                
Disconnected "97"        "16.1666666666667" "31.8032786885246" "124" "51.6666666666667"
Equal        "68"        "11.3333333333333" "22.2950819672131" NA    NA                
Grand        "295"       "49.1666666666667" "--"               "116" "48.3333333333333"

>  colnames(main.coalition) <- c( "Number", "%", "%", "Number", "%")

>  rownames(main.coalition)<-c("Minimal-Connected", "Minimal-Disconnected", "Minimal-Equal", "Grand")

>  main.coalition
                     Number %                  %                  Number %                 
Minimal-Connected    "140"  "23.3333333333333" "45.9016393442623" NA     NA                
Minimal-Disconnected "97"   "16.1666666666667" "31.8032786885246" "124"  "51.6666666666667"
Minimal-Equal        "68"   "11.3333333333333" "22.2950819672131" NA     NA                
Grand                "295"  "49.1666666666667" "--"               "116"  "48.3333333333333"

>  xtable(main.coalition, caption="Types of Coalitions", label="table:coalitions")
% latex table generated in R 3.5.2 by xtable 1.8-4 package
% Thu Mar 05 16:23:06 2020
\begin{table}[ht]
\centering
\begin{tabular}{rlllll}
  \hline
 & Number & \% & \% & Number & \% \\ 
  \hline
Minimal-Connected & 140 & 23.3333333333333 & 45.9016393442623 &  &  \\ 
  Minimal-Disconnected & 97 & 16.1666666666667 & 31.8032786885246 & 124 & 51.6666666666667 \\ 
  Minimal-Equal & 68 & 11.3333333333333 & 22.2950819672131 &  &  \\ 
  Grand & 295 & 49.1666666666667 & -- & 116 & 48.3333333333333 \\ 
   \hline
\end{tabular}
\caption{Types of Coalitions} 
\label{table:coalitions}
\end{table}

> ###############################
> #### Love - Hate - Figure 5
> ############################################ 
>  #Offers by ideological distance  - Treatment
>  
>  plot.df<-ddply(treat.r1.dfl.o, .(ideo.diff), summarise,
+                 prop = mean(prop1)
+  )

>  p <- ggplot(plot.df, aes(ideo.diff, prop)) + theme_bw()

>  p<- p + geom_point() + labs(x = "Absolute value ideological distance", y= "Mean offer") + theme(text=element_text(size=24))

>  p<- p + geom_hline(yintercept=mean(treat.r1.dfl.o$prop1),linetype="dashed", color = "red") + geom_hline(yintercept=mean(base.dfl.o$prop1, na.rm=T), color = "blue")

>  p

>  ggsave(filename=paste0(bd, "mean_offers_ideo_treat.png", sep=""),  width=6, height=6)

>  #Offers by ideological distance  - Baseline
>  sp<-qplot(ideo.diff, prop1, data = base.dfl.o, geom = c("point", "smooth"),
+            method="lm", ylab="pounds",
+            xlab="Absolute value ideological distance" ,main="Offers to other participants - Baseline ",  
+            na.rm=TRUE)
Warning: Ignoring unknown parameters: method

>  sp<-sp + geom_hline(yintercept=mean(treat.r1.dfl.o$prop1),linetype="dashed", color = "red")

>  sp<-sp + geom_hline(yintercept=mean(base.dfl.o$prop1, na.rm=T), color = "darkgreen") + theme_bw()

>  sp    

>  ggsave(filename=paste0(bd, "offers_ideo_base.png", sep=""),  width=6, height=6) 

>  ####################################
>  #####  Appendix  - Robustness tests
>  ####################################
> # Table A.1 - generated manually bu the authors
>  
> 
>  
>  
>  ############################################  
>  ##### Characteristics of the sample - Table A.2
>  ############################################
>  
>  ### Mean, Min and Max earnings, commented in text
>  f.earnings<-mydf$final_earnings[mydf$userperiod==0] ##0 GRI and Baseline

>  summary(f.earnings)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
   4.00    9.50   11.00   11.06   13.00   17.40 

>  ###Gender and Race Composition of treatment group  - Table A.2
>  t.gr <- table(mydf$gender[mydf$userperiod==0 & mydf$treatment=="GRI"], mydf$race[mydf$userperiod==0 & mydf$treatment=="GRI"] ) # A will be rows, B will be columns 

>  t.gr # print table - Table in Appendix
        
         black brown white
  female    27    14    78
  male      12     3    46

>  #latex(t.gr, caption="Frequences of Gender and Race in treatment sample ", file=paste0(bd, "t_gr", ".tex", sep="") )
>  
>  
>  #Gender
>  gender_GRI<-mydf$gender[mydf$userperiod==0 & mydf$treatment=="GRI"]

>  #gender_2d<-mydf.2d.$gender[mydf.2d.$period==1 ]
>  #tot.gender<-c(as.character(gender_GRI), as.character(gender_2d))
>  #g<-table(tot.gender)
>  #g
>  #prop.table(g) # cell percentages
>  
>  #Race
>  race_GRI<-mydf$race2[mydf$userperiod==0 & mydf$treatment=="GRI"]

>  #race_2d<-mydf.2d.$race2[mydf.2d.$period==1 ]
>  #tot.race<-c(as.character(race_GRI), as.character(race_2d))
>  #r <-table(tot.race) 
>  #r
>  #prop.table(r)
>  
>  #Nationalities in Main treatment and 2Dict samples
>  nation<-mydf$nationality[mydf$userperiod==0] # Main tratment

>  #nation.2d<-mydf.2d.$nationality[mydf.2d.$userperiod==1] # 2dictator
>  #nation<-c(as.character(nation), as.character(nation.2d))
>  table(nation) # Table with nationalities included in the sample
nation
       Albania          Austria        Bulgaria          Cyprus         Estonia         Finland          France         Germany          Greece           Italy         Jamaica          Latvia       Lithuania 
              2               2               9               5               2               2              24               4               8              20               1               1               8 
      Mauritius     Netherlands          Norway           Other          Poland        Portugal Slovak Republic           Spain     Switzerland  United Kingdom 
              1               4               3               4               1               2               3              10               1             135 

>  #############################
>  ### Pro-Social types
>  #############################
>  treat.r1.dfl.o$prosocial<-NA

>  treat.r1.dfl.o$prosocial[treat.r1.dfl.o$generosityall>0]<-1

>  treat.r1.dfl.o$prosocial[treat.r1.dfl.o$generosityall==0]<-0

>  describe(treat.r1.dfl.o$prosocial)
   vars    n mean   sd median trimmed mad min max range  skew kurtosis   se
X1    1 3600 0.58 0.49      1     0.6   0   0   1     1 -0.34    -1.89 0.01

>  table(treat.r1.dfl.o$generosityall[unique(treat.r1.dfl.o$uid)])

  0 0.2   1 1.6 1.8   2 
 84   6  34   2   2  52 

>  table(treat.r1.dfl.o$prosocial[unique(treat.r1.dfl.o$uid)])

 0  1 
84 96 

>  #DV: Offer  - M2 basic covariates + 3er player controles 
>  lm.M1.ps<-ols(prop1~ideo.diff*prosocial + ideo.diff.o*prosocial + same.g*prosocial + same.g.o*prosocial +same.r*prosocial+ same.g.o*prosocial + same.r.o*prosocial, data=treat.r1.dfl.o, y=T, x=T)

>  lm.M1.ps.cl<-robcov(lm.M1.ps, treat.r1.dfl.o$umg)

>  lm.M1.ps.cl
Linear Regression Model
 
 ols(formula = prop1 ~ ideo.diff * prosocial + ideo.diff.o * prosocial + 
     same.g * prosocial + same.g.o * prosocial + same.r * prosocial + 
     same.g.o * prosocial + same.r.o * prosocial, data = treat.r1.dfl.o, 
     x = T, y = T)
 
                                 Model Likelihood     Discrimination    
                                    Ratio Test           Indexes        
 Obs                    3600     LR chi2    153.28    R2       0.042    
 sigma                2.2328     d.f.           13    R2 adj   0.038    
 d.f.                   3586     Pr(> chi2) 0.0000    g        0.504    
 Cluster ontreat.r1.dfl.o$umg                                           
 Clusters                 30                                            
 
 Residuals
 
     Min      1Q  Median      3Q     Max 
 -5.5155 -0.5884  0.4110  1.0909  8.0529 
 
 
                         Coef    S.E.   t     Pr(>|t|)
 Intercept                4.8065 0.1159 41.47 <0.0001 
 ideo.diff               -0.2720 0.0879 -3.09 0.0020  
 prosocial                0.5521 0.2365  2.33 0.0196  
 ideo.diff.o              0.1301 0.0606  2.15 0.0320  
 same.g                   0.4378 0.1923  2.28 0.0229  
 same.g.o                -0.2045 0.1627 -1.26 0.2089  
 same.r                  -0.1793 0.1440 -1.25 0.2130  
 same.r.o                 0.0485 0.1368  0.35 0.7230  
 ideo.diff * prosocial    0.1502 0.0849  1.77 0.0769  
 prosocial * ideo.diff.o -0.0767 0.0741 -1.03 0.3011  
 prosocial * same.g      -0.4940 0.1664 -2.97 0.0030  
 prosocial * same.g.o     0.0726 0.2062  0.35 0.7249  
 prosocial * same.r       0.0564 0.1368  0.41 0.6798  
 prosocial * same.r.o     0.1929 0.2116  0.91 0.3620  
 

>  #DV: Offer  - M3 basic covariates + 3er player controles + proposer characteristics
>  lm.M2.ps<-ols(prop1~ideo.diff*prosocial + ideo.diff.o*prosocial + same.g*prosocial + same.g.o*prosocial +same.r*prosocial+ same.g.o*prosocial + same.r.o*prosocial + sp + gender + race2 , data=treat.r1.dfl.o, y=T, x=T)

>  lm.M2.ps.cl<-robcov(lm.M2.ps, treat.r1.dfl.o$umg)

>  lm.M2.ps.cl 
Linear Regression Model
 
 ols(formula = prop1 ~ ideo.diff * prosocial + ideo.diff.o * prosocial + 
     same.g * prosocial + same.g.o * prosocial + same.r * prosocial + 
     same.g.o * prosocial + same.r.o * prosocial + sp + gender + 
     race2, data = treat.r1.dfl.o, x = T, y = T)
 
                                 Model Likelihood     Discrimination    
                                    Ratio Test           Indexes        
 Obs                    3600     LR chi2    157.65    R2       0.043    
 sigma                2.2323     d.f.           16    R2 adj   0.039    
 d.f.                   3583     Pr(> chi2) 0.0000    g        0.512    
 Cluster ontreat.r1.dfl.o$umg                                           
 Clusters                 30                                            
 
 Residuals
 
     Min      1Q  Median      3Q     Max 
 -5.5643 -0.5403  0.4015  1.1046  7.8735 
 
 
                         Coef    S.E.   t     Pr(>|t|)
 Intercept                4.7760 0.1248 38.28 <0.0001 
 ideo.diff               -0.2713 0.0882 -3.08 0.0021  
 prosocial                0.5530 0.2349  2.35 0.0186  
 ideo.diff.o              0.1285 0.0611  2.10 0.0355  
 same.g                   0.4588 0.1860  2.47 0.0137  
 same.g.o                -0.1675 0.1640 -1.02 0.3073  
 same.r                  -0.2187 0.1415 -1.54 0.1225  
 same.r.o                 0.0224 0.1417  0.16 0.8743  
 sp                      -0.0181 0.0202 -0.90 0.3688  
 gender=male              0.1230 0.1139  1.08 0.2804  
 race2=white              0.1016 0.0885  1.15 0.2508  
 ideo.diff * prosocial    0.1471 0.0846  1.74 0.0821  
 prosocial * ideo.diff.o -0.0754 0.0739 -1.02 0.3074  
 prosocial * same.g      -0.4948 0.1649 -3.00 0.0027  
 prosocial * same.g.o     0.0868 0.2072  0.42 0.6752  
 prosocial * same.r       0.0722 0.1351  0.53 0.5932  
 prosocial * same.r.o     0.1905 0.2129  0.89 0.3709  
 

>  screenreg(list(lm.M1.ps.cl, lm.M2.ps.cl))

=================================================
                         Model 1      Model 2    
-------------------------------------------------
Intercept                   4.81 ***     4.78 ***
                           (0.12)       (0.12)   
ideo.diff                  -0.27 **     -0.27 ** 
                           (0.09)       (0.09)   
prosocial                   0.55 *       0.55 *  
                           (0.24)       (0.23)   
ideo.diff.o                 0.13 *       0.13 *  
                           (0.06)       (0.06)   
same.g                      0.44 *       0.46 *  
                           (0.19)       (0.19)   
same.g.o                   -0.20        -0.17    
                           (0.16)       (0.16)   
same.r                     -0.18        -0.22    
                           (0.14)       (0.14)   
same.r.o                    0.05         0.02    
                           (0.14)       (0.14)   
ideo.diff * prosocial       0.15         0.15    
                           (0.08)       (0.08)   
prosocial * ideo.diff.o    -0.08        -0.08    
                           (0.07)       (0.07)   
prosocial * same.g         -0.49 **     -0.49 ** 
                           (0.17)       (0.16)   
prosocial * same.g.o        0.07         0.09    
                           (0.21)       (0.21)   
prosocial * same.r          0.06         0.07    
                           (0.14)       (0.14)   
prosocial * same.r.o        0.19         0.19    
                           (0.21)       (0.21)   
sp                                      -0.02    
                                        (0.02)   
gender=male                              0.12    
                                        (0.11)   
race2=white                              0.10    
                                        (0.09)   
-------------------------------------------------
Num. obs.                3600         3600       
R^2                         0.04         0.04    
Adj. R^2                    0.04         0.04    
L.R.                      153.28       157.65    
=================================================
*** p < 0.001, ** p < 0.01, * p < 0.05

>  #############################################
>  ######Comparison to Baseline and placebo tests
>  #############################################
>  
>  var.treat<-treat.r1.df.o$sd.p.offered[treat.r1.df.o$vote_result=="Accepted"]

>  var.base<-base.r1.df.o$sd.p.offered[base.r1.df.o$vote_result=="Accepted"]

>  var.test(var.treat,var.base)

	F test to compare two variances

data:  var.treat and var.base
F = 0.80322, num df = 1107, denom df = 443, p-value = 0.004988
alternative hypothesis: true ratio of variances is not equal to 1
95 percent confidence interval:
 0.6853978 0.9363406
sample estimates:
ratio of variances 
          0.803221 


>  t.test(var.treat,var.base)

	Welch Two Sample t-test

data:  var.treat and var.base
t = -1.5309, df = 743.26, p-value = 0.1262
alternative hypothesis: true difference in means is not equal to 0
95 percent confidence interval:
 -0.40489592  0.05009338
sample estimates:
mean of x mean of y 
 2.039967  2.217369 


>  #DV: Offer  - A.M1 placebo only basic covariates
>  p.lm.M1<-ols(prop1~ideo.diff + same.g + same.r, data=base.r1.dfl.o, y=T, x=T)

>  p.lm.M1.cl<-robcov(p.lm.M1, base.r1.dfl.o$umg)

>  #DV: Offer  - A.M2 placebo basic covariates + 3er player controles 
>  p.lm.M2<-ols(prop1~ideo.diff + ideo.diff.o + same.g + + same.g.o +same.r+ same.g.o + same.r.o, data=base.r1.dfl.o, y=T, x=T)

>  p.lm.M2.cl<-robcov(p.lm.M2, base.r1.dfl.o$umg)

>  #DV: Offer  - A.M3 placebo basic covariates + 3er player controles + proposer characteristics
>  p.lm.M3<-ols(prop1~ideo.diff + same.g+same.r+ ideo.diff.o + same.g.o + same.r.o + sp + gender + race2 , data=base.r1.dfl.o, y=T, x=T)

>  p.lm.M3.cl<-robcov(p.lm.M3, base.r1.dfl.o$umg)

>  ##### Partner and vote models
>  
>  #### DV: A.M4 placebo Non-Zero offer ==1 Partner Selection 
>  #p.log.p <- lrm(non.zero ~ ideo.diff+  same.g + same.r + ideo.diff.o+ same.g.o +same.r.o + sp + gender + race2 , data=base.r1.dfl.o, x=T, y=T ) 
>  #p.log.p.cl <- robcov(p.log.p, base.r1.dfl.o$umg) 
>  
>  #DV: Vote  - A.M5 placebo Model on acceptance of offers 
>  p.log.v1<- lrm(vote ~    prop.ideo.diff + prop.same.gender + prop.same.race  + sp + gender + race2, data=base.r1.df.o, x=T, y=T)

>  p.log.v1.cl <- robcov(p.log.v1, base.r1.df.o$umg)

>  #DV: Vote  - A.M6  placebo Model on acceptance of offers accounting for amount offered 
>  p.log.v2<- lrm(vote ~  prop.ideo.diff + prop.same.gender + prop.same.race + sp + gender + race2 + p.offered, data=base.r1.df.o, x=T, y=T)

>  p.log.v2.cl <- robcov(p.log.v2, base.r1.df.o$umg)

>  ########################################### 
>  ############### Table Placebo #############
>  ########################################### 
>  
>  # screenreg(list(p.lm.M1.cl, p.lm.M2.cl, p.lm.M3.cl, p.log.p.cl, p.log.v1.cl, p.log.v2.cl))
>  # 
>  # 
>  # ### Printing all models as 1 table
>  # texreg(file= paste0(bd, "placebo_all_models.tex", sep=""), 
>  #        list(lm.M1.cl, lm.M2.cl, lm.M3.cl, log.p.cl, log.v1.cl, log.v2.cl), 
>  #        custom.model.names = c("A.M1 Offer placebo", "A.M2 Offer placebo", "A.M3 Offer placebo", "A.M4 Partner placebo", 
>  #                               "A.M5 Vote placebo", "A.M6 Vote placebo"), 
>  #        custom.coef.names = c("Intercept", "Ideo. Dist. P-R", "Same Gender", "Same Race", 
>  #                              "Ideo. Dist. P-3rd", "Same Gender P-3rd", "Same Race P-3rd", 
>  #                              "Self-Placement", "Proposer-Male", "Proposer-White", 
>  #                              "Ideo. Dist. P-R", "Same Gender", "Same Race", "Amount Offered" ),
>  #        caption = "Regression models on amount offered to other participant (Offer), whether a 
>  #        participant was chosen as coalition partner by giving more than zero (Partner), and whether 
>  #        a participant chose to accept the offer they received (Vote).",
>  #        label="table:base_model",
>  #        booktabs = F, dcolumn = F)
>  
>  
>  
>  
>  
>  
>  ###########################
>  ### Panel Specification Table A.3
>  ############################
>  
>  #Fixed Effects Models on proposal
>  fe1 <- plm(prop1~ideo.diff +  same.g + same.r + ideo.diff.o + same.g.o + same.r.o, 
+             data=treat.r1.dfl.o, index=c("uid", "plm.time"), model="within")

>  summary(fe1)
Oneway (individual) effect Within Model

Call:
plm(formula = prop1 ~ ideo.diff + same.g + same.r + ideo.diff.o + 
    same.g.o + same.r.o, data = treat.r1.dfl.o, model = "within", 
    index = c("uid", "plm.time"))

Unbalanced Panel: n = 180, T = 20-20, N = 3600

Residuals:
    Min.  1st Qu.   Median  3rd Qu.     Max. 
-5.66714 -0.54800  0.11639  0.93474  6.70645 

Coefficients:
             Estimate Std. Error t-value  Pr(>|t|)    
ideo.diff   -0.182730   0.028020 -6.5213 7.997e-11 ***
same.g       0.217213   0.093336  2.3272   0.02001 *  
same.r      -0.216143   0.095150 -2.2716   0.02317 *  
ideo.diff.o  0.054320   0.034520  1.5736   0.11568    
same.g.o    -0.111683   0.129991 -0.8592   0.39031    
same.r.o     0.153853   0.125067  1.2302   0.21872    
---
Signif. codes:  0 *** 0.001 ** 0.01 * 0.05 . 0.1   1

Total Sum of Squares:    16764
Residual Sum of Squares: 16516
R-Squared:      0.014842
Adj. R-Squared: -0.038542
F-statistic: 8.57261 on 6 and 3414 DF, p-value: 2.8519e-09

>  fe1.pse<-coeftest(fe1, vcov=vcovHC(fe1, method="arellano"))

>  fe1.pse

t test of coefficients:

             Estimate Std. Error t value  Pr(>|t|)    
ideo.diff   -0.182730   0.046093 -3.9643 7.511e-05 ***
same.g       0.217213   0.134290  1.6175   0.10586    
same.r      -0.216143   0.141433 -1.5282   0.12655    
ideo.diff.o  0.054320   0.023141  2.3473   0.01897 *  
same.g.o    -0.111683   0.060479 -1.8466   0.06489 .  
same.r.o     0.153853   0.075318  2.0427   0.04116 *  
---
Signif. codes:  0 *** 0.001 ** 0.01 * 0.05 . 0.1   1


>  #Fixed Effects Models on proposal
>  fe2 <- plm(prop1~ideo.diff +  same.g + same.r, 
+             data=treat.r1.dfl.o, index=c("uid", "plm.time"), model="within")

>  summary(fe2)
Oneway (individual) effect Within Model

Call:
plm(formula = prop1 ~ ideo.diff + same.g + same.r, data = treat.r1.dfl.o, 
    model = "within", index = c("uid", "plm.time"))

Unbalanced Panel: n = 180, T = 20-20, N = 3600

Residuals:
    Min.  1st Qu.   Median  3rd Qu.     Max. 
-5.59398 -0.51086  0.12266  0.92026  6.71455 

Coefficients:
           Estimate Std. Error t-value  Pr(>|t|)    
ideo.diff -0.170202   0.026970 -6.3108 3.133e-10 ***
same.g     0.198637   0.090402  2.1973   0.02807 *  
same.r    -0.182678   0.090681 -2.0145   0.04403 *  
---
Signif. codes:  0 *** 0.001 ** 0.01 * 0.05 . 0.1   1

Total Sum of Squares:    16764
Residual Sum of Squares: 16536
R-Squared:      0.013601
Adj. R-Squared: -0.038938
F-statistic: 15.705 on 3 and 3417 DF, p-value: 3.8334e-10

>  fe2.pse<-coeftest(fe2, vcov=vcovHC(fe1, method="arellano"))

>  fe2.pse

t test of coefficients:

           Estimate Std. Error t value  Pr(>|t|)    
ideo.diff -0.170202   0.046093 -3.6925 0.0002255 ***
same.g     0.198637   0.134290  1.4792 0.1391873    
same.r    -0.182678   0.141433 -1.2916 0.1965739    
---
Signif. codes:  0 *** 0.001 ** 0.01 * 0.05 . 0.1   1


>  # Conditional Logit models on partner and vote
>  
>  #partner
>  cl1 <- clogit(non.zero ~ ideo.diff+  same.g + same.r + ideo.diff.o+ same.g.o +same.r.o 
+                + strata(uid),  
+                data=treat.r1.dfl.o)

>  summary(cl1)
Call:
coxph(formula = Surv(rep(1, 3600L), non.zero) ~ ideo.diff + same.g + 
    same.r + ideo.diff.o + same.g.o + same.r.o + strata(uid), 
    data = treat.r1.dfl.o, method = "exact")

  n= 3600, number of events= 3291 

                coef exp(coef) se(coef)      z Pr(>|z|)    
ideo.diff   -0.25535   0.77465  0.04992 -5.116 3.13e-07 ***
same.g       0.30926   1.36242  0.17427  1.775   0.0760 .  
same.r      -0.32660   0.72137  0.18509 -1.765   0.0776 .  
ideo.diff.o  0.09711   1.10198  0.05574  1.742   0.0815 .  
same.g.o    -0.06616   0.93599  0.23625 -0.280   0.7795    
same.r.o     0.46417   1.59069  0.23367  1.986   0.0470 *  
---
Signif. codes:  0 *** 0.001 ** 0.01 * 0.05 . 0.1   1

            exp(coef) exp(-coef) lower .95 upper .95
ideo.diff      0.7746     1.2909    0.7025    0.8543
same.g         1.3624     0.7340    0.9682    1.9171
same.r         0.7214     1.3862    0.5019    1.0368
ideo.diff.o    1.1020     0.9075    0.9879    1.2292
same.g.o       0.9360     1.0684    0.5891    1.4872
same.r.o       1.5907     0.6287    1.0062    2.5147

Concordance= 0.599  (se = 0.021 )
Rsquare= 0.01   (max possible= 0.258 )
Likelihood ratio test= 35.55  on 6 df,   p=3e-06
Wald test            = 32.66  on 6 df,   p=1e-05
Score (logrank) test = 34.53  on 6 df,   p=5e-06


>  #vote
>  cl2 <- clogit(vote ~    prop.ideo.diff + prop.same.gender + prop.same.race 
+                + strata(uid),
+                data=treat.r1.df.o)

>  summary(cl2)
Call:
coxph(formula = Surv(rep(1, 1200L), vote) ~ prop.ideo.diff + 
    prop.same.gender + prop.same.race + strata(uid), data = treat.r1.df.o, 
    method = "exact")

  n= 1200, number of events= 837 

                     coef exp(coef) se(coef)      z Pr(>|z|)    
prop.ideo.diff   -0.16989   0.84375  0.05139 -3.306 0.000947 ***
prop.same.gender -0.03882   0.96192  0.17923 -0.217 0.828520    
prop.same.race    0.15855   1.17181  0.18261  0.868 0.385266    
---
Signif. codes:  0 *** 0.001 ** 0.01 * 0.05 . 0.1   1

                 exp(coef) exp(-coef) lower .95 upper .95
prop.ideo.diff      0.8438     1.1852    0.7629    0.9332
prop.same.gender    0.9619     1.0396    0.6770    1.3668
prop.same.race      1.1718     0.8534    0.8193    1.6761

Concordance= 0.561  (se = 0.026 )
Rsquare= 0.01   (max possible= 0.483 )
Likelihood ratio test= 11.85  on 3 df,   p=0.008
Wald test            = 11.5  on 3 df,   p=0.009
Score (logrank) test = 11.74  on 3 df,   p=0.008


>  cl3 <- clogit(vote ~    prop.ideo.diff + prop.same.gender + prop.same.race + p.offered
+                + strata(uid),
+                data=treat.r1.df.o)

>  summary(cl3)
Call:
coxph(formula = Surv(rep(1, 1200L), vote) ~ prop.ideo.diff + 
    prop.same.gender + prop.same.race + p.offered + strata(uid), 
    data = treat.r1.df.o, method = "exact")

  n= 1200, number of events= 837 

                     coef exp(coef) se(coef)      z Pr(>|z|)    
prop.ideo.diff    0.01239   1.01247  0.10169  0.122    0.903    
prop.same.gender -0.36962   0.69100  0.31537 -1.172    0.241    
prop.same.race   -0.05479   0.94668  0.30989 -0.177    0.860    
p.offered         1.39452   4.03305  0.13568 10.278   <2e-16 ***
---
Signif. codes:  0 *** 0.001 ** 0.01 * 0.05 . 0.1   1

                 exp(coef) exp(-coef) lower .95 upper .95
prop.ideo.diff      1.0125     0.9877    0.8295     1.236
prop.same.gender    0.6910     1.4472    0.3724     1.282
prop.same.race      0.9467     1.0563    0.5157     1.738
p.offered           4.0331     0.2480    3.0913     5.262

Concordance= 0.933  (se = 0.015 )
Rsquare= 0.353   (max possible= 0.483 )
Likelihood ratio test= 523.2  on 4 df,   p=<2e-16
Wald test            = 107.8  on 4 df,   p=<2e-16
Score (logrank) test = 413  on 4 df,   p=<2e-16


>  #### FE Models
>  screenreg(list(fe2, fe1, cl1, cl2, cl3))

=================================================================================
                  Model 1      Model 2      Model 3      Model 4      Model 5    
---------------------------------------------------------------------------------
ideo.diff           -0.17 ***    -0.18 ***    -0.26 ***                          
                    (0.03)       (0.03)       (0.05)                             
same.g               0.20 *       0.22 *       0.31                              
                    (0.09)       (0.09)       (0.17)                             
same.r              -0.18 *      -0.22 *      -0.33                              
                    (0.09)       (0.10)       (0.19)                             
ideo.diff.o                       0.05         0.10                              
                                 (0.03)       (0.06)                             
same.g.o                         -0.11        -0.07                              
                                 (0.13)       (0.24)                             
same.r.o                          0.15         0.46 *                            
                                 (0.13)       (0.23)                             
prop.ideo.diff                                             -0.17 ***     0.01    
                                                           (0.05)       (0.10)   
prop.same.gender                                           -0.04        -0.37    
                                                           (0.18)       (0.32)   
prop.same.race                                              0.16        -0.05    
                                                           (0.18)       (0.31)   
p.offered                                                                1.39 ***
                                                                        (0.14)   
---------------------------------------------------------------------------------
R^2                  0.01         0.01         0.01         0.01         0.35    
Adj. R^2            -0.04        -0.04                                           
Num. obs.         3600         3600         3600         1200         1200       
AIC                                         1049.54       785.99       276.65    
Max. R^2                                       0.26         0.48         0.48    
Num. events                                 3291          837          837       
Missings                                       0            0            0       
=================================================================================
*** p < 0.001, ** p < 0.01, * p < 0.05

>  ### Printing all models as 1 table
>  texreg(file= paste0(bd, "FE_all_models.tex", sep=""), 
+         list(fe2.pse, fe1.pse, cl1, cl2, cl3), 
+         custom.model.names = c("A.M1 Offer FE", "A.M2 Offer FE", "A.M3 Partner C.logit", "A.M4 Vote C.logit", "A.M5 Vote C.logit"), 
+         custom.coef.names = c("Ideo. Dist. P-R", "Same Gender", "Same Race", 
+                               "Ideo. Dist. P-3rd", "Same Gender P-3rd", "Same Race P-3rd", 
+                               "Ideo. Dist. P-R", "Same Gender", "Same Race", "Amount Offered" ),
+         caption = "Fixed effects regression models on amount offered to other participant (Offer) and conditional logit models
+         on whether a participant was chosen as coalition partner by giving more than zero (Partner), and whether 
+         a participant chose to accept the offer they received (Vote).",
+         label="table:base_model",
+         booktabs = F, dcolumn = F) 
The table was written to the file 'C:/Users/Denise Laroze/Dropbox/group ID in legislative bargaining/Social Identity 2019-20/Data analysis/FE_all_models.tex'.


>  ########################
>  ###### Effect of Time Table A.4
>  ########################
>  
>  treat.r1.dfl.o.05<-subset(treat.r1.dfl.o, userperiod<6)

>  treat.r1.dfl.o.610<-subset(treat.r1.dfl.o, userperiod>=6)

>  treat.r1.df.o.05<-subset(treat.r1.df.o, userperiod<6)

>  treat.r1.df.o.610<-subset(treat.r1.df.o, userperiod>=6)

>  #DV: Offer  - M3 basic covariates + 3er player controles + proposer characteristics
>  t1.lm.M3<-ols(prop1~ideo.diff + same.g+same.r+ ideo.diff.o + same.g.o + same.r.o + sp + gender + race2 , data=treat.r1.dfl.o.05, y=T, x=T)

>  t1.lm.M3.cl<-robcov(t1.lm.M3, treat.r1.dfl.o.05$umg)

>  t2.lm.M3<-ols(prop1~ideo.diff + same.g+same.r+ ideo.diff.o + same.g.o + same.r.o + sp + gender + race2 , data=treat.r1.dfl.o.610, y=T, x=T)

>  t2.lm.M3.cl<-robcov(t2.lm.M3, treat.r1.dfl.o.610$umg)

>  ##### Partner and vote models
>  
>  #### DV: M4 Non-Zero offer ==1 Partner Selection 
>  t1.log.p <- lrm(non.zero ~ ideo.diff+  same.g + same.r + ideo.diff.o+ same.g.o +same.r.o + sp + gender + race2 , data=treat.r1.dfl.o.05, x=T, y=T ) 

>  t1.log.p.cl <- robcov(t1.log.p, treat.r1.dfl.o.05$umg) 

>  t2.log.p <- lrm(non.zero ~ ideo.diff+  same.g + same.r + ideo.diff.o+ same.g.o +same.r.o + sp + gender + race2 , data=treat.r1.dfl.o.610, x=T, y=T ) 

>  t2.log.p.cl <- robcov(t2.log.p, treat.r1.dfl.o.610$umg) 

>  #DV: Vote  - M6  Model on acceptance of offers accounting for amount offered 
>  t1.log.v2<- lrm(vote ~  prop.ideo.diff + prop.same.gender + prop.same.race + sp + gender + race2 + p.offered, data=treat.r1.df.o.05, x=T, y=T)

>  t1.log.v2.cl <- robcov(t1.log.v2, treat.r1.df.o.05$umg)

>  t2.log.v2<- lrm(vote ~  prop.ideo.diff + prop.same.gender + prop.same.race + sp + gender + race2 + p.offered, data=treat.r1.df.o.610, x=T, y=T)

>  t2.log.v2.cl <- robcov(t2.log.v2, treat.r1.df.o.610$umg)

>  rm(treat.r1.dfl.o.05, treat.r1.dfl.o.610, treat.r1.df.o.05, treat.r1.df.o.610 )

>  ########################################### 
>  ############### Table Time ################
>  ########################################### 
>  
>  screenreg(list(t1.lm.M3.cl, t2.lm.M3.cl, t1.log.p.cl, t2.log.p.cl, t1.log.v2.cl, t2.log.v2.cl))

============================================================================================
                  Model 1      Model 2      Model 3      Model 4      Model 5     Model 6   
--------------------------------------------------------------------------------------------
Intercept            5.33 ***     5.27 ***     3.63 ***     3.11 ***   -4.14 ***   -2.60 ***
                    (0.20)       (0.19)       (0.66)       (0.53)      (1.01)      (0.72)   
ideo.diff           -0.11 **     -0.20 ***    -0.23 **     -0.23 **                         
                    (0.04)       (0.06)       (0.08)       (0.08)                           
same.g               0.01         0.31         0.14         0.41 *                          
                    (0.11)       (0.20)       (0.19)       (0.16)                           
same.r              -0.08        -0.23        -0.29        -0.28                            
                    (0.14)       (0.15)       (0.27)       (0.15)                           
ideo.diff.o          0.04         0.09 *       0.02         0.12 **                         
                    (0.02)       (0.04)       (0.07)       (0.04)                           
same.g.o             0.00        -0.25         0.35        -0.19                            
                    (0.13)       (0.15)       (0.24)       (0.21)                           
same.r.o            -0.05         0.23 *      -0.08         0.31                            
                    (0.10)       (0.11)       (0.30)       (0.23)                           
sp                  -0.03        -0.06 *       0.01        -0.06       -0.12       -0.06    
                    (0.02)       (0.03)       (0.08)       (0.05)      (0.12)      (0.08)   
gender=male          0.01        -0.02        -0.81 *      -0.80 **     0.07       -0.08    
                    (0.12)       (0.12)       (0.36)       (0.26)      (0.47)      (0.41)   
race2=white          0.10         0.03        -0.00        -0.27        0.19       -0.56    
                    (0.08)       (0.09)       (0.33)       (0.25)      (0.38)      (0.37)   
prop.ideo.diff                                                         -0.14        0.05    
                                                                       (0.08)      (0.09)   
prop.same.gender                                                       -0.34       -0.17    
                                                                       (0.33)      (0.34)   
prop.same.race                                                         -0.01        0.30    
                                                                       (0.23)      (0.25)   
p.offered                                                               1.29 ***    0.87 ***
                                                                       (0.17)      (0.10)   
--------------------------------------------------------------------------------------------
Num. obs.         1800         1800         1800         1800         600         600       
R^2                  0.01         0.02                                                      
Adj. R^2             0.00         0.02                                                      
L.R.                17.85        39.83        44.51        72.21      318.26      328.91    
Pseudo R^2                                     0.07         0.08        0.60        0.59    
============================================================================================
*** p < 0.001, ** p < 0.01, * p < 0.05

>  ### Printing all models as 1 table
>  texreg(file= paste0(bd, "time_all_models.tex", sep=""), 
+         list(t1.lm.M3.cl, t2.lm.M3.cl, t1.log.p.cl, t2.log.p.cl, t1.log.v2.cl, t2.log.v2.cl), 
+         custom.model.names = c("A.M3 Offer p0-5", "A.M3 Offer p6-10", "A.M4 Partner p0-5", 
+                                "A.M4 Partner  p6-10", "A.M6 Vote p0-5", "A.M6 Vote  p6-10"), 
+         custom.coef.names = c("Intercept", "Ideo. Dist. P-R", "Same Gender", "Same Race", 
+                               "Ideo. Dist. P-3rd", "Same Gender P-3rd", "Same Race P-3rd", 
+                               "Self-Placement", "Proposer-Male", "Proposer-White", 
+                               "Ideo. Dist. P-R", "Same Gender", "Same Race", "Amount Offered" ),
+         caption = "Regression models on amount offered to other participant (Offer), whether a 
+         participant was chosen as coalition partner by giving more than zero (Partner), and whether 
+         a participant chose to accept the offer they received (Vote). The table presents results for
+         periods 0--5 and 6--10, to account for learning effects.",
+         label="table:time_model",
+         booktabs = F, dcolumn = F)
The table was written to the file 'C:/Users/Denise Laroze/Dropbox/group ID in legislative bargaining/Social Identity 2019-20/Data analysis/time_all_models.tex'.


>  ###########################################
>  
>  #### Interaction with mixed gender and race
>  #### Subsets of data with and without
>  #### Mixed gender and race groups Table A.5
>  ######################################
>  
>  treat.r1.dfl.o.g<-subset(treat.r1.dfl.o, g.gender>0 & g.gender<3)

>  treat.r1.dfl.o.r<-subset(treat.r1.dfl.o, g.race>0 & g.race<3)

>  treat.r1.df.o.g<-subset(treat.r1.df.o, g.gender>0 & g.gender<3)

>  treat.r1.df.o.r<-subset(treat.r1.df.o, g.race>0 & g.race<3)

>  #### Interaction models
>  #DV: Offer  - M3 basic covariates + 3er player controles + proposer characteristics
>  int.lm.M3<-ols(prop1~ideo.diff + same.g*g.gender + same.r*g.race + ideo.diff.o + same.g.o + same.r.o + sp + gender + race2 , data=treat.r1.dfl.o, y=T, x=T)

>  int.lm.M3.cl<-robcov(int.lm.M3, treat.r1.dfl.o$umg)

>  #Visualization
>  #lp <- ggplot(data=treat.r1.dfl.o, aes(x=g.gender, y=prop1, shape=factor(same.g), 
>  #                            colour=factor(same.g))) + stat_smooth(method="lm") + geom_point()
>  #lp
>  
>  
>  #### Only mixed gender groups
>  ##### Partner and vote models
>  # DV: M4 Non-Zero offer ==1 Partner Selection 
>  int.log.p <- lrm(non.zero ~ ideo.diff+  same.g*g.gender + same.r*g.race + ideo.diff.o+ same.g.o +same.r.o + sp + gender + race2 , data=treat.r1.dfl.o, x=T, y=T ) 

>  int.log.p.cl <- robcov(int.log.p, treat.r1.dfl.o$umg) 

>  #DV: Vote  - M6  Model on acceptance of offers accounting for amount offered 
>  int.log.v2<- lrm(vote ~  prop.ideo.diff + prop.same.gender*g.gender + prop.same.race*g.race + sp + gender + race2 + p.offered, data=treat.r1.df.o, x=T, y=T)

>  int.log.v2.cl <- robcov(int.log.v2, treat.r1.df.o$umg)

>  screenreg(list(int.lm.M3.cl, int.log.p.cl, int.log.v2.cl))

==================================================================
                             Model 1      Model 2      Model 3    
------------------------------------------------------------------
Intercept                       5.08 ***     3.15 ***    -3.38 ***
                               (0.36)       (0.57)       (0.84)   
ideo.diff                      -0.16 **     -0.22 **              
                               (0.05)       (0.07)                
same.g                          0.51         0.32                 
                               (0.37)       (0.47)                
g.gender                        0.12         0.02        -0.13    
                               (0.15)       (0.27)       (0.34)   
same.r                         -0.04        -0.25                 
                               (0.33)       (0.58)                
g.race                          0.02         0.10         0.18    
                               (0.14)       (0.32)       (0.22)   
ideo.diff.o                     0.07 *       0.08 *               
                               (0.03)       (0.04)                
same.g.o                       -0.12         0.00                 
                               (0.12)       (0.19)                
same.r.o                        0.11         0.18                 
                               (0.08)       (0.22)                
sp                             -0.05 *      -0.04        -0.07    
                               (0.02)       (0.06)       (0.08)   
gender=male                    -0.09        -0.79 **      0.28    
                               (0.13)       (0.27)       (0.39)   
race2=white                     0.09        -0.24        -0.29    
                               (0.09)       (0.18)       (0.36)   
same.g * g.gender              -0.20        -0.02                 
                               (0.17)       (0.26)                
same.r * g.race                -0.06        -0.03                 
                               (0.16)       (0.34)                
prop.ideo.diff                                           -0.03    
                                                         (0.07)   
prop.same.gender                                         -1.21    
                                                         (0.76)   
prop.same.race                                            0.23    
                                                         (0.55)   
p.offered                                                 1.01 ***
                                                         (0.12)   
prop.same.gender * g.gender                               0.49    
                                                         (0.40)   
prop.same.race * g.race                                  -0.02    
                                                         (0.30)   
------------------------------------------------------------------
Num. obs.                    3600         3600         1200       
R^2                             0.02                              
Adj. R^2                        0.01                              
L.R.                           55.93       105.96       641.28    
Pseudo R^2                                   0.07         0.59    
==================================================================
*** p < 0.001, ** p < 0.01, * p < 0.05

>  ### Printing interaction with gender and race composition of groups
>  texreg(file= paste0(bd, "int_gender_race_models.tex", sep=""), 
+         list(int.lm.M3.cl, int.log.p.cl, int.log.v2.cl), 
+         custom.model.names = c("A.M3 Offer Int group type", "A.M4 Partner Int group type"
+                                , "A.M6 Vote Int group type"), 
+         custom.coef.names = c("Intercept", "Ideo. Dist. P-R", "Same Gender", "N.Female",  
+                               "Same Race", "N. White", 
+                               "Ideo. Dist. P-3rd", "Same Gender P-3rd", "Same Race P-3rd", 
+                               "Self-Placement", "Proposer-Male", "Proposer-White", 
+                               "S.Gender x N.Female", "S.Race x N. White",
+                               "Ideo. Dist. P-R", "Same Gender", "Same Race", "Amount Offered",
+                               "S.Gender x N.Female", "S.Race x N. White"),
+         reorder.coef=c( 1, 2, 3, 4, 13, 5, 6, 14, 7, 8, 9, 10, 11, 12, 15),
+         caption = "Regression models on amount offered to other participant (Offer), whether a 
+         participant was chosen as coalition partner by giving more than zero (Partner), and whether 
+         a participant chose to accept the offer they received (Vote). The table presents results of interactions
+         between same gender and the number of women in a group and same race and a number of white participants
+         in the group.",
+         label="table:int_gender_race_models",
+         booktabs = F, dcolumn = F)
The table was written to the file 'C:/Users/Denise Laroze/Dropbox/group ID in legislative bargaining/Social Identity 2019-20/Data analysis/int_gender_race_models.tex'.


>  #### Only mixed gender groups
>  #DV: Offer  - M3 basic covariates + 3er player controles + proposer characteristics
>  g.lm.M3<-ols(prop1~ideo.diff + same.g+same.r+ ideo.diff.o + same.g.o + same.r.o + sp + gender + race2 , data=treat.r1.dfl.o.g, y=T, x=T)

>  g.lm.M3.cl<-robcov(g.lm.M3, treat.r1.dfl.o.g$umg)

>  ##### Partner and vote models
>  # DV: M4 Non-Zero offer ==1 Partner Selection 
>  g.log.p <- lrm(non.zero ~ ideo.diff+  same.g + same.r + ideo.diff.o+ same.g.o +same.r.o + sp + gender + race2 , data=treat.r1.dfl.o.g, x=T, y=T ) 

>  g.log.p.cl <- robcov(g.log.p, treat.r1.dfl.o.g$umg) 

>  #DV: Vote  - M6  Model on acceptance of offers accounting for amount offered 
>  g.log.v2<- lrm(vote ~  prop.ideo.diff + prop.same.gender + prop.same.race + sp + gender + race2 + p.offered, data=treat.r1.df.o.g, x=T, y=T)

>  g.log.v2.cl <- robcov(g.log.v2, treat.r1.df.o.g$umg)

>  screenreg(list(g.lm.M3.cl, g.log.p.cl, g.log.v2.cl))

======================================================
                  Model 1      Model 2      Model 3   
------------------------------------------------------
Intercept            5.36 ***     3.25 ***   -2.76 ***
                    (0.17)       (0.57)      (0.81)   
ideo.diff           -0.18 ***    -0.25 ***            
                    (0.05)       (0.07)               
same.g               0.27         0.29                
                    (0.18)       (0.20)               
same.r              -0.33 *      -0.34                
                    (0.16)       (0.26)               
ideo.diff.o          0.07 *       0.09 *              
                    (0.03)       (0.04)               
same.g.o            -0.09        -0.03                
                    (0.12)       (0.19)               
same.r.o             0.16         0.31                
                    (0.11)       (0.25)               
sp                  -0.04        -0.02       -0.03    
                    (0.02)       (0.06)      (0.10)   
gender=male         -0.02        -0.80 **     0.13    
                    (0.11)       (0.28)      (0.34)   
race2=white          0.05        -0.19       -0.17    
                    (0.10)       (0.28)      (0.39)   
prop.ideo.diff                               -0.07    
                                             (0.07)   
prop.same.gender                             -0.48    
                                             (0.33)   
prop.same.race                                0.08    
                                             (0.22)   
p.offered                                     0.90 ***
                                             (0.11)   
------------------------------------------------------
Num. obs.         2346         2346         782       
R^2                  0.02                             
Adj. R^2             0.02                             
L.R.                51.09        79.52      400.74    
Pseudo R^2                        0.07        0.56    
======================================================
*** p < 0.001, ** p < 0.01, * p < 0.05

>  ### Printing mixed gender models 
>  texreg(#file= paste0(bd, "m_gender_models.tex", sep=""), 
+    list(g.lm.M3.cl, g.log.p.cl, g.log.v2.cl), 
+    custom.model.names = c("A.M3 Offer Mix gender", "A.M4 Partner  Mix gender"
+                           , "A.M6 Vote Mix gender"), 
+    custom.coef.names = c("Intercept", "Ideo. Dist. P-R", "Same Gender", "Same Race", 
+                          "Ideo. Dist. P-3rd", "Same Gender P-3rd", "Same Race P-3rd", 
+                          "Self-Placement", "Proposer-Male", "Proposer-White", 
+                          "Ideo. Dist. P-R", "Same Gender", "Same Race", "Amount Offered" ),
+    caption = "Regression models on amount offered to other participant (Offer), whether a 
+    participant was chosen as coalition partner by giving more than zero (Partner), and whether 
+    a participant chose to accept the offer they received (Vote). The table presents results a subset of
+    the data that only includes mixed gender groups.",
+    label="table:m_gender_model",
+    booktabs = F, dcolumn = F)

\begin{table}
\begin{center}
\begin{tabular}{l c c c }
\hline
 & A.M3 Offer Mix gender & A.M4 Partner  Mix gender & A.M6 Vote Mix gender \\
\hline
Intercept         & $5.36^{***}$  & $3.25^{***}$  & $-2.76^{***}$ \\
                  & $(0.17)$      & $(0.57)$      & $(0.81)$      \\
Ideo. Dist. P-R   & $-0.18^{***}$ & $-0.25^{***}$ & $-0.07$       \\
                  & $(0.05)$      & $(0.07)$      & $(0.07)$      \\
Same Gender       & $0.27$        & $0.29$        & $-0.48$       \\
                  & $(0.18)$      & $(0.20)$      & $(0.33)$      \\
Same Race         & $-0.33^{*}$   & $-0.34$       & $0.08$        \\
                  & $(0.16)$      & $(0.26)$      & $(0.22)$      \\
Ideo. Dist. P-3rd & $0.07^{*}$    & $0.09^{*}$    &               \\
                  & $(0.03)$      & $(0.04)$      &               \\
Same Gender P-3rd & $-0.09$       & $-0.03$       &               \\
                  & $(0.12)$      & $(0.19)$      &               \\
Same Race P-3rd   & $0.16$        & $0.31$        &               \\
                  & $(0.11)$      & $(0.25)$      &               \\
Self-Placement    & $-0.04$       & $-0.02$       & $-0.03$       \\
                  & $(0.02)$      & $(0.06)$      & $(0.10)$      \\
Proposer-Male     & $-0.02$       & $-0.80^{**}$  & $0.13$        \\
                  & $(0.11)$      & $(0.28)$      & $(0.34)$      \\
Proposer-White    & $0.05$        & $-0.19$       & $-0.17$       \\
                  & $(0.10)$      & $(0.28)$      & $(0.39)$      \\
Amount Offered    &               &               & $0.90^{***}$  \\
                  &               &               & $(0.11)$      \\
\hline
Num. obs.         & 2346          & 2346          & 782           \\
R$^2$             & 0.02          &               &               \\
Adj. R$^2$        & 0.02          &               &               \\
L.R.              & 51.09         & 79.52         & 400.74        \\
Pseudo R$^2$      &               & 0.07          & 0.56          \\
\hline
\multicolumn{4}{l}{\scriptsize{$^{***}p<0.001$, $^{**}p<0.01$, $^*p<0.05$}}
\end{tabular}
\caption{Regression models on amount offered to other participant (Offer), whether a 
   participant was chosen as coalition partner by giving more than zero (Partner), and whether 
   a participant chose to accept the offer they received (Vote). The table presents results a subset of
   the data that only includes mixed gender groups.}
\label{table:m_gender_model}
\end{center}
\end{table}

>  #### Only mixed race groups
>  #DV: Offer  - M3 basic covariates + 3er player controles + proposer characteristics
>  r.lm.M3<-ols(prop1~ideo.diff + same.g+same.r+ ideo.diff.o + same.g.o + same.r.o + sp + gender + race2 , data=treat.r1.dfl.o.r, y=T, x=T)

>  r.lm.M3.cl<-robcov(r.lm.M3, treat.r1.dfl.o.r$umg)

>  ##### Partner and vote models
>  # DV: M4 Non-Zero offer ==1 Partner Selection 
>  r.log.p <- lrm(non.zero ~ ideo.diff+  same.g + same.r + ideo.diff.o+ same.g.o +same.r.o + sp + gender + race2 , data=treat.r1.dfl.o.r, x=T, y=T ) 

>  r.log.p.cl <- robcov(r.log.p, treat.r1.dfl.o.r$umg) 

>  #DV: Vote  - M6  Model on acceptance of offers accounting for amount offered 
>  r.log.v2<- lrm(vote ~  prop.ideo.diff + prop.same.gender + prop.same.race + sp + gender + race2 + p.offered, data=treat.r1.df.o.r, x=T, y=T)

>  r.log.v2.cl <- robcov(r.log.v2, treat.r1.df.o.r$umg)

>  rm(treat.r1.dfl.o.g, treat.r1.dfl.o.r, treat.r1.df.o.g, treat.r1.df.o.r)

>  screenreg(list(r.lm.M3.cl, r.log.p.cl, r.log.v2.cl))

======================================================
                  Model 1      Model 2      Model 3   
------------------------------------------------------
Intercept            5.30 ***     3.27 ***   -2.68 ***
                    (0.20)       (0.53)      (0.70)   
ideo.diff           -0.17 **     -0.20                
                    (0.06)       (0.10)               
same.g               0.16         0.37 *              
                    (0.15)       (0.18)               
same.r              -0.21        -0.34 *              
                    (0.16)       (0.15)               
ideo.diff.o          0.06         0.07                
                    (0.04)       (0.06)               
same.g.o            -0.20         0.01                
                    (0.16)       (0.22)               
same.r.o             0.10         0.11                
                    (0.09)       (0.26)               
sp                  -0.03        -0.03       -0.07    
                    (0.02)       (0.07)      (0.10)   
gender=male          0.08        -0.92 ***    0.07    
                    (0.13)       (0.24)      (0.39)   
race2=white          0.04        -0.17       -0.32    
                    (0.08)       (0.22)      (0.32)   
prop.ideo.diff                               -0.10    
                                             (0.08)   
prop.same.gender                             -0.08    
                                             (0.26)   
prop.same.race                                0.21    
                                             (0.19)   
p.offered                                     0.93 ***
                                             (0.13)   
------------------------------------------------------
Num. obs.         2334         2334         778       
R^2                  0.02                             
Adj. R^2             0.01                             
L.R.                39.87        77.13      370.63    
Pseudo R^2                        0.08        0.54    
======================================================
*** p < 0.001, ** p < 0.01, * p < 0.05

>  ### Printing mixed race models 
>  texreg(#file= paste0(bd, "m_race_models.tex", sep=""), 
+    list(r.lm.M3.cl, r.log.p.cl, r.log.v2.cl), 
+    custom.model.names = c("A.M3 Offer Mix gender", "A.M4 Partner  Mix gender"
+                           , "A.M6 Vote Mix gender"), 
+    custom.coef.names = c("Intercept", "Ideo. Dist. P-R", "Same Gender", "Same Race", 
+                          "Ideo. Dist. P-3rd", "Same Gender P-3rd", "Same Race P-3rd", 
+                          "Self-Placement", "Proposer-Male", "Proposer-White", 
+                          "Ideo. Dist. P-R", "Same Gender", "Same Race", "Amount Offered" ),
+    caption = "Regression models on amount offered to other participant (Offer), whether a 
+    participant was chosen as coalition partner by giving more than zero (Partner), and whether 
+    a participant chose to accept the offer they received (Vote). The table presents results a subset of
+    the data that only includes mixed race groups.",
+    label="table:m_race_model",
+    booktabs = F, dcolumn = F)

\begin{table}
\begin{center}
\begin{tabular}{l c c c }
\hline
 & A.M3 Offer Mix gender & A.M4 Partner  Mix gender & A.M6 Vote Mix gender \\
\hline
Intercept         & $5.30^{***}$ & $3.27^{***}$  & $-2.68^{***}$ \\
                  & $(0.20)$     & $(0.53)$      & $(0.70)$      \\
Ideo. Dist. P-R   & $-0.17^{**}$ & $-0.20$       & $-0.10$       \\
                  & $(0.06)$     & $(0.10)$      & $(0.08)$      \\
Same Gender       & $0.16$       & $0.37^{*}$    & $-0.08$       \\
                  & $(0.15)$     & $(0.18)$      & $(0.26)$      \\
Same Race         & $-0.21$      & $-0.34^{*}$   & $0.21$        \\
                  & $(0.16)$     & $(0.15)$      & $(0.19)$      \\
Ideo. Dist. P-3rd & $0.06$       & $0.07$        &               \\
                  & $(0.04)$     & $(0.06)$      &               \\
Same Gender P-3rd & $-0.20$      & $0.01$        &               \\
                  & $(0.16)$     & $(0.22)$      &               \\
Same Race P-3rd   & $0.10$       & $0.11$        &               \\
                  & $(0.09)$     & $(0.26)$      &               \\
Self-Placement    & $-0.03$      & $-0.03$       & $-0.07$       \\
                  & $(0.02)$     & $(0.07)$      & $(0.10)$      \\
Proposer-Male     & $0.08$       & $-0.92^{***}$ & $0.07$        \\
                  & $(0.13)$     & $(0.24)$      & $(0.39)$      \\
Proposer-White    & $0.04$       & $-0.17$       & $-0.32$       \\
                  & $(0.08)$     & $(0.22)$      & $(0.32)$      \\
Amount Offered    &              &               & $0.93^{***}$  \\
                  &              &               & $(0.13)$      \\
\hline
Num. obs.         & 2334         & 2334          & 778           \\
R$^2$             & 0.02         &               &               \\
Adj. R$^2$        & 0.01         &               &               \\
L.R.              & 39.87        & 77.13         & 370.63        \\
Pseudo R$^2$      &              & 0.08          & 0.54          \\
\hline
\multicolumn{4}{l}{\scriptsize{$^{***}p<0.001$, $^{**}p<0.01$, $^*p<0.05$}}
\end{tabular}
\caption{Regression models on amount offered to other participant (Offer), whether a 
   participant was chosen as coalition partner by giving more than zero (Partner), and whether 
   a participant chose to accept the offer they received (Vote). The table presents results a subset of
   the data that only includes mixed race groups.}
\label{table:m_race_model}
\end{center}
\end{table}

>  ########################### 
>  ######## Bootstraping Figures A.2-A.6
>  ###########################
>  
>  c.data<-treat.r1.dfl.o[, c( "prop1", "non.zero",  "ideo.diff", "ideo.diff.o", "same.g", "same.r", "same.g.o", "same.r.o", "sp",
+                              "gender", "race2", "umg")]

>  c.data$mg_id<- as.numeric(factor(c.data$umg))

>  #Bootstrapped coefficients for Amount Offered (M3)
>  boot_mg_lm<-function(R, eq){
+    
+    var.1<-rep(NA, R)
+    var.2<-rep(NA, R)
+    var.3<-rep(NA, R)
+    var.4<-rep(NA, R)
+    var.5<-rep(NA, R)
+    var.6<-rep(NA, R)
+    
+    for (i in 1:R){
+      # get a vector with all clusters
+      c <- sort(unique(c.data$mg_id))
+      
+      # group the data points per cluster
+      clust.group <- function(c) {
+        c.data[c.data$mg_id==c,]
+      }
+      
+      clust.list <- lapply(c,clust.group)
+      
+      # resample clusters with replacement
+      c.sample <- sample(c, replace=T)
+      
+      clust.sample <- clust.list[c.sample]
+      
+      clust.size <- 120
+      
+      # combine the cluster list back to a single data matrix
+      clust.bind <- function(c) {
+        matrix(unlist(c),nrow=clust.size)
+      }
+      
+      c.boot <- do.call(rbind,lapply(clust.sample,clust.bind))
+      
+      # Just to maintain columns name
+      colnames(c.boot) <- names(c.data)
+      
+      c.boot<-as.data.frame(c.boot)
+      # the new data set (single bootstrap replicate)
+      c.boot$prop1<-as.numeric(c.boot$prop1)
+      c.boot$ideo.diff<-as.numeric(c.boot$ideo.diff)
+      c.boot$ideo.diff.o<-as.numeric(c.boot$ideo.diff.o)
+      c.boot$sp<-as.numeric(c.boot$sp)
+      
+      lm<-lm(eq,  c.boot)
+      var.1[i]<-lm$coef[2]
+      var.2[i]<-lm$coef[3]
+      var.3[i]<-lm$coef[4]
+      var.4[i]<-lm$coef[5]
+      var.5[i]<-lm$coef[6]
+      var.6[i]<-lm$coef[7]
+      results<-cbind(var.1,var.2, var.3, var.4,var.5, var.6 )
+    }
+    
+    return(results)
+  }

>  results<-boot_mg_lm(10000, eq=prop1~ideo.diff + ideo.diff.o + same.g  + same.g.o + same.r + same.r.o + sp + gender + race2)

>  coef.ideo.diff<-results[,1]

>  coef.ideo.diff.o<-results[, 2]

>  png(filename=paste0(bd, "boot_ideodiff_mg.png", sep=""))

>  mean<-mean(coef.ideo.diff)

>  sd<-sd(coef.ideo.diff)

>  ll<-mean-1.96*sd

>  ul<-mean+1.96*sd

>  hist(coef.ideo.diff, freq=F, xlab="Bootstrapped Coef. for Ideo. Dist.  P-R", main="")

>  abline(v=ll, col = "red", lwd = 1)

>  abline(v=ul, col = "red", lwd = 1)

>  dev.off() 
RStudioGD 
        2 

>  png(filename=paste0(bd, "boot_ideodiff3rd_mg.png", sep=""))

>  mean<-mean(coef.ideo.diff.o)

>  sd<-sd(coef.ideo.diff.o)

>  ll.o<-mean-1.96*sd

>  ul.o<-mean+1.96*sd

>  hist(coef.ideo.diff.o, freq=F, xlab="Bootstrapped Coef. for Ideo. Dist. P-3rd", main="")

>  abline(v=ll.o, col = "red", lwd = 1)

>  abline(v=ul.o, col = "red", lwd = 1)

>  dev.off()  
RStudioGD 
        2 

>  #### Bootstrapped coefficients for Partner Models (M4)
>  
>  boot_mg_glm<-function(R, eq){
+    
+    var.1<-rep(NA, R)
+    var.2<-rep(NA, R)
+    var.3<-rep(NA, R)
+    var.4<-rep(NA, R)
+    var.5<-rep(NA, R)
+    var.6<-rep(NA, R)
+    
+    for (i in 1:R){
+      # get a vector with all clusters
+      c <- sort(unique(c.data$mg_id))
+      
+      # group the data points per cluster
+      clust.group <- function(c) {
+        c.data[c.data$mg_id==c,]
+      }
+      
+      clust.list <- lapply(c,clust.group)
+      
+      # resample clusters with replacement
+      c.sample <- sample(c, replace=T)
+      
+      clust.sample <- clust.list[c.sample]
+      
+      clust.size <- 120
+      
+      # combine the cluster list back to a single data matrix
+      clust.bind <- function(c) {
+        matrix(unlist(c),nrow=clust.size)
+      }
+      
+      c.boot <- do.call(rbind,lapply(clust.sample,clust.bind))
+      
+      # Just to maintain columns name
+      colnames(c.boot) <- names(c.data)
+      
+      c.boot<-as.data.frame(c.boot)
+      # the new data set (single bootstrap replicate)
+      c.boot$prop1<-as.numeric(c.boot$prop1)
+      c.boot$ideo.diff<-as.numeric(c.boot$ideo.diff)
+      c.boot$ideo.diff.o<-as.numeric(c.boot$ideo.diff.o)
+      c.boot$sp<-as.numeric(c.boot$sp)
+      
+      glm<-glm(eq,  c.boot, family = "binomial")
+      var.1[i]<-glm$coef[2]
+      var.2[i]<-glm$coef[3]
+      var.3[i]<-glm$coef[4]
+      var.4[i]<-glm$coef[5]
+      var.5[i]<-glm$coef[6]
+      var.6[i]<-glm$coef[7]
+      results.glm<-cbind(var.1,var.2, var.3, var.4,var.5, var.6 )
+    }
+    
+    return(results.glm)
+  }

>  results.glm<-boot_mg_glm(10000, eq=non.zero~ideo.diff + ideo.diff.o + same.g  + same.g.o + same.r + same.r.o + sp + gender + race2)

>  coef.glm.ideo.diff<-results.glm[,1]

>  coef.glm.ideo.diff.o<-results.glm[, 2]

>  coef.glm.gender<-results.glm[, 3]

>  png(filename=paste0(bd, "boot_p_ideodiff_mg.png", sep=""))

>  mean<-mean(coef.glm.ideo.diff)

>  sd<-sd(coef.glm.ideo.diff)

>  ll<-mean-1.96*sd

>  ul<-mean+1.96*sd

>  hist(coef.glm.ideo.diff, freq=F, xlab="Bootstrapped Coef. for Ideo. Dist. P-R", main="")

>  abline(v=ll, col = "red", lwd = 1)

>  abline(v=ul, col = "red", lwd = 1)

>  dev.off() 
RStudioGD 
        2 

>  png(filename=paste0(bd, "boot_p_ideodiff3rd_mg.png", sep=""))

>  mean<-mean(coef.glm.ideo.diff.o)

>  sd<-sd(coef.glm.ideo.diff.o)

>  ll.o<-mean-1.96*sd

>  ul.o<-mean+1.96*sd

>  hist(coef.glm.ideo.diff.o, freq=F, xlab="Bootstrapped Coef. for Ideo. Dist. P-3rd", main="")

>  abline(v=ll.o, col = "red", lwd = 1)

>  abline(v=ul.o, col = "red", lwd = 1)

>  dev.off()  
RStudioGD 
        2 

>  png(filename=paste0(bd, "boot_p_sgender_mg.png", sep=""))

>  mean<-mean(coef.glm.gender)

>  sd<-sd(coef.glm.gender)

>  ll<-mean-1.96*sd

>  ul<-mean+1.96*sd

>  hist(coef.glm.gender, freq=F, xlab="Bootstrapped Coef. for Same Gender", main="")

>  abline(v=ll, col = "red", lwd = 1)

>  abline(v=ul, col = "red", lwd = 1)

>  dev.off() 
RStudioGD 
        2 

>  #####
>   ##############################################
>  #### Model with Disaggregated Race Categories A.6
>  ##############################################
>  lm.M1.race<-ols(prop1~ideo.diff + same.g + same.r.all, data=treat.r1.dfl.o, y=T, x=T)

>  lm.M1.race.cl<-robcov(lm.M1.race, treat.r1.dfl.o$umg)

>  lm.M1.race.cl
Linear Regression Model
 
 ols(formula = prop1 ~ ideo.diff + same.g + same.r.all, data = treat.r1.dfl.o, 
     x = T, y = T)
 
                                 Model Likelihood     Discrimination    
                                    Ratio Test           Indexes        
 Obs                    3600     LR chi2     39.14    R2       0.011    
 sigma                2.2653     d.f.            3    R2 adj   0.010    
 d.f.                   3596     Pr(> chi2) 0.0000    g        0.266    
 Cluster ontreat.r1.dfl.o$umg                                           
 Clusters                 30                                            
 
 Residuals
 
     Min      1Q  Median      3Q     Max 
 -5.2482 -0.6192  0.5453  1.1031  8.6188 
 
 
            Coef    S.E.   t     Pr(>|t|)
 Intercept   5.1547 0.1494 34.51 <0.0001 
 ideo.diff  -0.1289 0.0403 -3.20 0.0014  
 same.g      0.0934 0.1350  0.69 0.4890  
 same.r.all -0.1445 0.1185 -1.22 0.2229  
 

>  lm.M2.race<-ols(prop1~ideo.diff + ideo.diff.o + same.g + + same.g.o +same.r.all+ same.g.o + same.r.o.all, data=treat.r1.dfl.o, y=T, x=T)

>  lm.M2.race.cl<-robcov(lm.M2.race, treat.r1.dfl.o$umg)

>  lm.M2.race.cl
Linear Regression Model
 
 ols(formula = prop1 ~ ideo.diff + ideo.diff.o + same.g + +same.g.o + 
     same.r.all + same.g.o + same.r.o.all, data = treat.r1.dfl.o, 
     x = T, y = T)
 
                                 Model Likelihood     Discrimination    
                                    Ratio Test           Indexes        
 Obs                    3600     LR chi2     50.40    R2       0.014    
 sigma                2.2627     d.f.            6    R2 adj   0.012    
 d.f.                   3593     Pr(> chi2) 0.0000    g        0.296    
 Cluster ontreat.r1.dfl.o$umg                                           
 Clusters                 30                                            
 
 Residuals
 
     Min      1Q  Median      3Q     Max 
 -5.4112 -0.5852  0.5499  1.0917  8.4345 
 
 
              Coef    S.E.   t     Pr(>|t|)
 Intercept     5.1083 0.1553 32.90 <0.0001 
 ideo.diff    -0.1582 0.0487 -3.25 0.0012  
 ideo.diff.o   0.0677 0.0309  2.19 0.0284  
 same.g        0.1560 0.1421  1.10 0.2721  
 same.g.o     -0.1360 0.1359 -1.00 0.3171  
 same.r.all   -0.2151 0.1327 -1.62 0.1050  
 same.r.o.all  0.1675 0.1238  1.35 0.1763  
 

>  lm.M3.race<-ols(prop1~ideo.diff + same.g+same.r.all+ ideo.diff.o + same.g.o + same.r.o.all + sp + gender + race , data=treat.r1.dfl.o, y=T, x=T)

>  lm.M3.race.cl<-robcov(lm.M3.race, treat.r1.dfl.o$umg)

>  lm.M3.race.cl
Linear Regression Model
 
 ols(formula = prop1 ~ ideo.diff + same.g + same.r.all + ideo.diff.o + 
     same.g.o + same.r.o.all + sp + gender + race, data = treat.r1.dfl.o, 
     x = T, y = T)
 
                                 Model Likelihood     Discrimination    
                                    Ratio Test           Indexes        
 Obs                    3600     LR chi2     70.49    R2       0.019    
 sigma                2.2576     d.f.           10    R2 adj   0.017    
 d.f.                   3589     Pr(> chi2) 0.0000    g        0.351    
 Cluster ontreat.r1.dfl.o$umg                                           
 Clusters                 30                                            
 
 Residuals
 
     Min      1Q  Median      3Q     Max 
 -5.4320 -0.6206  0.5398  1.0650  8.1700 
 
 
              Coef    S.E.   t     Pr(>|t|)
 Intercept     5.4359 0.1564 34.75 <0.0001 
 ideo.diff    -0.1536 0.0471 -3.26 0.0011  
 same.g        0.1534 0.1335  1.15 0.2506  
 same.r.all   -0.2493 0.1334 -1.87 0.0617  
 ideo.diff.o   0.0694 0.0307  2.26 0.0240  
 same.g.o     -0.1250 0.1221 -1.02 0.3061  
 same.r.o.all  0.1185 0.1113  1.06 0.2872  
 sp           -0.0416 0.0211 -1.98 0.0483  
 gender=male  -0.0294 0.1127 -0.26 0.7943  
 race=brown   -0.5367 0.2312 -2.32 0.0204  
 race=white   -0.0532 0.0989 -0.54 0.5902  
 

>  log.p.race <- lrm(non.zero ~ ideo.diff+  same.g + same.r.all + ideo.diff.o+ same.g.o +same.r.o.all + sp + gender + race , data=treat.r1.dfl.o, x=T, y=T ) 

>  log.p.race.cl <- robcov(log.p.race, treat.r1.dfl.o$umg) 

>  log.p.race.cl
Logistic Regression Model
 
 lrm(formula = non.zero ~ ideo.diff + same.g + same.r.all + ideo.diff.o + 
     same.g.o + same.r.o.all + sp + gender + race, data = treat.r1.dfl.o, 
     x = T, y = T)
 
                                    Model Likelihood     Discrimination    Rank Discrim.    
                                       Ratio Test           Indexes           Indexes       
 Obs                       3600    LR chi2     135.36    R2       0.083    C       0.685    
  0                         309    d.f.            10    g        0.801    Dxy     0.369    
  1                        3291    Pr(> chi2) <0.0001    gr       2.228    gamma   0.370    
 Cluster on  treat.r1.dfl.o$umg                          gp       0.060    tau-a   0.058    
 Clusters                    30                          Brier    0.075                     
 max |deriv|              2e-11                                                             
 
              Coef    S.E.   Wald Z Pr(>|Z|)
 Intercept     3.7768 0.6672  5.66  <0.0001 
 ideo.diff    -0.2059 0.0636 -3.23  0.0012  
 same.g        0.2776 0.1551  1.79  0.0736  
 same.r.all   -0.3182 0.1513 -2.10  0.0355  
 ideo.diff.o   0.0951 0.0498  1.91  0.0558  
 same.g.o     -0.0002 0.1924  0.00  0.9991  
 same.r.o.all  0.1725 0.2466  0.70  0.4844  
 sp           -0.0247 0.0607 -0.41  0.6844  
 gender=male  -0.8606 0.2829 -3.04  0.0023  
 race=brown   -1.3300 0.6416 -2.07  0.0382  
 race=white   -0.6803 0.3879 -1.75  0.0795  
 

>  log.v1.race<- lrm(vote ~    prop.ideo.diff + prop.same.gender + prop.same.race.all  + sp + gender + race, data=treat.r1.df.o, x=T, y=T)

>  log.v1.race.cl <- robcov(log.v1.race, treat.r1.df.o$umg)

>  log.v1.race.cl
Logistic Regression Model
 
 lrm(formula = vote ~ prop.ideo.diff + prop.same.gender + prop.same.race.all + 
     sp + gender + race, data = treat.r1.df.o, x = T, y = T)
 
                                  Model Likelihood     Discrimination    Rank Discrim.    
                                     Ratio Test           Indexes           Indexes       
 Obs                      1200    LR chi2     26.51    R2       0.031    C       0.586    
  0                        363    d.f.            7    g        0.365    Dxy     0.172    
  1                        837    Pr(> chi2) 0.0004    gr       1.440    gamma   0.172    
 Cluster on  treat.r1.df.o$umg                         gp       0.076    tau-a   0.073    
 Clusters                   30                         Brier    0.206                     
 max |deriv|             4e-13                                                            
 
                    Coef    S.E.   Wald Z Pr(>|Z|)
 Intercept           1.6909 0.3513  4.81  <0.0001 
 prop.ideo.diff     -0.1394 0.0475 -2.93  0.0034  
 prop.same.gender   -0.0216 0.1883 -0.11  0.9086  
 prop.same.race.all  0.1250 0.2053  0.61  0.5426  
 sp                 -0.0504 0.0414 -1.22  0.2232  
 gender=male         0.0280 0.2296  0.12  0.9029  
 race=brown         -0.6172 0.4153 -1.49  0.1372  
 race=white         -0.4415 0.2190 -2.02  0.0439  
 

>  log.v2.race<- lrm(vote ~  prop.ideo.diff + prop.same.gender + prop.same.race.all + sp + gender + race + p.offered, data=treat.r1.df.o, x=T, y=T)

>  log.v2.race.cl <- robcov(log.v2.race, treat.r1.df.o$umg)

>  log.v2.race.cl
Logistic Regression Model
 
 lrm(formula = vote ~ prop.ideo.diff + prop.same.gender + prop.same.race.all + 
     sp + gender + race + p.offered, data = treat.r1.df.o, x = T, 
     y = T)
 
                                   Model Likelihood     Discrimination    Rank Discrim.    
                                      Ratio Test           Indexes           Indexes       
 Obs                      1200    LR chi2     635.21    R2       0.582    C       0.902    
  0                        363    d.f.             8    g        2.431    Dxy     0.805    
  1                        837    Pr(> chi2) <0.0001    gr      11.369    gamma   0.805    
 Cluster on  treat.r1.df.o$umg                          gp       0.326    tau-a   0.340    
 Clusters                   30                          Brier    0.100                     
 max |deriv|             6e-13                                                             
 
                    Coef    S.E.   Wald Z Pr(>|Z|)
 Intercept          -2.9344 0.7728 -3.80  0.0001  
 prop.ideo.diff     -0.0356 0.0716 -0.50  0.6191  
 prop.same.gender   -0.2896 0.2820 -1.03  0.3044  
 prop.same.race.all  0.2121 0.1896  1.12  0.2633  
 sp                 -0.0784 0.0830 -0.94  0.3447  
 gender=male        -0.0859 0.3670 -0.23  0.8150  
 race=brown         -0.2346 0.6488 -0.36  0.7176  
 race=white         -0.2610 0.3326 -0.78  0.4326  
 p.offered           0.9955 0.1183  8.41  <0.0001 
 

>  texreg(file= paste0(bd, "base_raceall_models.tex", sep=""), 
+         list(lm.M1.race.cl, lm.M2.race.cl, lm.M3.race.cl, log.p.race.cl, log.v1.race.cl, log.v2.race.cl), 
+         custom.model.names = c("M1 Offer", "M2 Offer", "M3 Offer", "M4 Partner", "M5 Vote", "M6 Vote"), 
+         custom.coef.names = c("Intercept", "Ideo. Dist. P-R", "Same Gender", "Same Race All", 
+                               "Ideo. Dist. P-3rd", "Same Gender P-3rd", "Same Race P-3rd All", 
+                               "Self-Placement", "Proposer-Male", "Proposer-Brown" ,"Proposer-White", 
+                               "Ideo. Dist. P-R", "Same Gender", "Same Race All", "Amount Offered" ),
+         caption = "Statistical Models on proposal and voting behavior using a disaggregated race category",
+         label="table:base_race_model",
+         booktabs = F, dcolumn = F)
The table was written to the file 'C:/Users/Denise Laroze/Dropbox/group ID in legislative bargaining/Social Identity 2019-20/Data analysis/base_raceall_models.tex'.


>  ###########################
>  ######## Count Models
>  ###########################
>  
>  library(MASS)

>  #describe(treat.r1.dfl.o$prop1.p)
>  
>  treat.r1.dfl.o$prop1.p<-treat.r1.dfl.o$prop1*100

>  poisson1 <- glm(prop1.p~ideo.diff +  same.g + same.r + ideo.diff.o + same.g.o + same.r.o + sp + gender + race2, data= treat.r1.dfl.o, family=poisson)

>  summary(poisson1)

Call:
glm(formula = prop1.p ~ ideo.diff + same.g + same.r + ideo.diff.o + 
    same.g.o + same.r.o + sp + gender + race2, family = poisson, 
    data = treat.r1.dfl.o)

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-33.136   -2.935    2.400    4.835   30.978  

Coefficients:
              Estimate Std. Error  z value Pr(>|z|)    
(Intercept)  6.2749956  0.0031849 1970.210  < 2e-16 ***
ideo.diff   -0.0330249  0.0005052  -65.364  < 2e-16 ***
same.g       0.0325996  0.0017588   18.535  < 2e-16 ***
same.r      -0.0312675  0.0017461  -17.907  < 2e-16 ***
ideo.diff.o  0.0135505  0.0005336   25.396  < 2e-16 ***
same.g.o    -0.0251954  0.0020542  -12.265  < 2e-16 ***
same.r.o     0.0214839  0.0019494   11.021  < 2e-16 ***
sp          -0.0095360  0.0004006  -23.805  < 2e-16 ***
gendermale  -0.0017219  0.0017456   -0.986    0.324    
race2white   0.0117839  0.0018024    6.538 6.24e-11 ***
---
Signif. codes:  0 *** 0.001 ** 0.01 * 0.05 . 0.1   1

(Dispersion parameter for poisson family taken to be 1)

    Null deviance: 563712  on 3599  degrees of freedom
Residual deviance: 558037  on 3590  degrees of freedom
AIC: 584364

Number of Fisher Scoring iterations: 5


>  negbin1 <- glm.nb(prop1.p~ideo.diff +  same.g + same.r + ideo.diff.o + same.g.o + same.r.o + sp + gender + race2, data= treat.r1.dfl.o)

>  negbin1 # if the theta is stat sign then the data is overdispersed

Call:  glm.nb(formula = prop1.p ~ ideo.diff + same.g + same.r + ideo.diff.o + 
    same.g.o + same.r.o + sp + gender + race2, data = treat.r1.dfl.o, 
    init.theta = 4075395.377, link = log)

Coefficients:
(Intercept)    ideo.diff       same.g       same.r  ideo.diff.o     same.g.o     same.r.o           sp   gendermale   race2white  
   6.274996    -0.033025     0.032600    -0.031268     0.013551    -0.025196     0.021484    -0.009536    -0.001722     0.011784  

Degrees of Freedom: 3599 Total (i.e. Null);  3590 Residual
Null Deviance:	    563700 
Residual Deviance: 558000 	AIC: 584300

>  ########################################## 
>  ### Models with interaction g.sp.sd*same.Table g A.8
>  ##########################################
>  #DV: Offer  - Definition 1 same group
>  lm.M1.sp<-ols(prop1~ ideo.diff + same.g*g.sp.sd + same.r, data=treat.r1.dfl.o, y=T, x=T)

>  lm.M1.sp.cl<-robcov(lm.M1.sp, treat.r1.dfl.o$umg)

>  lm.M1.sp.cl
Linear Regression Model
 
 ols(formula = prop1 ~ ideo.diff + same.g * g.sp.sd + same.r, 
     data = treat.r1.dfl.o, x = T, y = T)
 
                                 Model Likelihood     Discrimination    
                                    Ratio Test           Indexes        
 Obs                    3600     LR chi2     52.70    R2       0.015    
 sigma                2.2616     d.f.            5    R2 adj   0.013    
 d.f.                   3594     Pr(> chi2) 0.0000    g        0.308    
 Cluster ontreat.r1.dfl.o$umg                                           
 Clusters                 30                                            
 
 Residuals
 
     Min      1Q  Median      3Q     Max 
 -5.5861 -0.6034  0.5275  1.1026  8.6077 
 
 
                  Coef    S.E.   t     Pr(>|t|)
 Intercept         4.9064 0.2070 23.70 <0.0001 
 ideo.diff        -0.2086 0.0636 -3.28 0.0010  
 same.g            0.1262 0.2599  0.49 0.6273  
 g.sp.sd           0.2295 0.1084  2.12 0.0343  
 same.r           -0.1152 0.1181 -0.98 0.3292  
 same.g * g.sp.sd -0.0067 0.1184 -0.06 0.9550  
 

>  #DV: Offer  - Definition 1 with controles
>  lm.M2.sp<-ols(prop1~ ideo.diff + same.g*g.sp.sd + ideo.diff.o + same.g.o +same.r+ same.g.o + same.r.o, data=treat.r1.dfl.o, y=T, x=T)

>  lm.M2.sp.cl<-robcov(lm.M2.sp, treat.r1.dfl.o$umg)

>  lm.M2.sp.cl
Linear Regression Model
 
 ols(formula = prop1 ~ ideo.diff + same.g * g.sp.sd + ideo.diff.o + 
     same.g.o + same.r + same.g.o + same.r.o, data = treat.r1.dfl.o, 
     x = T, y = T)
 
                                 Model Likelihood     Discrimination    
                                    Ratio Test           Indexes        
 Obs                    3600     LR chi2     58.45    R2       0.016    
 sigma                2.2608     d.f.            8    R2 adj   0.014    
 d.f.                   3591     Pr(> chi2) 0.0000    g        0.323    
 Cluster ontreat.r1.dfl.o$umg                                           
 Clusters                 30                                            
 
 Residuals
 
     Min      1Q  Median      3Q     Max 
 -5.5616 -0.5767  0.5274  1.1103  8.4758 
 
 
                  Coef    S.E.   t     Pr(>|t|)
 Intercept         4.9379 0.2196 22.49 <0.0001 
 ideo.diff        -0.2183 0.0656 -3.33 0.0009  
 same.g            0.1961 0.2632  0.74 0.4564  
 g.sp.sd           0.2082 0.1044  1.99 0.0461  
 ideo.diff.o       0.0389 0.0255  1.53 0.1273  
 same.g.o         -0.1494 0.1350 -1.11 0.2685  
 same.r           -0.1507 0.1258 -1.20 0.2310  
 same.r.o          0.0901 0.0904  1.00 0.3189  
 same.g * g.sp.sd -0.0106 0.1188 -0.09 0.9286  
 

>  lm.M3.sp<-ols(prop1~ideo.diff + same.g*g.sp.sd + ideo.diff.o + same.g.o +same.r+ same.g.o + same.r.o + sp + gender + race2 , data=treat.r1.dfl.o, y=T, x=T)

>  lm.M3.sp.cl<-robcov(lm.M3.sp, treat.r1.dfl.o$umg)

>  lm.M3.sp.cl
Linear Regression Model
 
 ols(formula = prop1 ~ ideo.diff + same.g * g.sp.sd + ideo.diff.o + 
     same.g.o + same.r + same.g.o + same.r.o + sp + gender + race2, 
     data = treat.r1.dfl.o, x = T, y = T)
 
                                 Model Likelihood     Discrimination    
                                    Ratio Test           Indexes        
 Obs                    3600     LR chi2     63.64    R2       0.018    
 sigma                2.2601     d.f.           11    R2 adj   0.015    
 d.f.                   3588     Pr(> chi2) 0.0000    g        0.337    
 Cluster ontreat.r1.dfl.o$umg                                           
 Clusters                 30                                            
 
 Residuals
 
     Min      1Q  Median      3Q     Max 
 -5.6641 -0.5876  0.5344  1.1064  8.2769 
 
 
                  Coef    S.E.   t     Pr(>|t|)
 Intercept         5.1088 0.2500 20.44 <0.0001 
 ideo.diff        -0.2155 0.0657 -3.28 0.0011  
 same.g            0.1922 0.2600  0.74 0.4599  
 g.sp.sd           0.2003 0.1052  1.90 0.0569  
 ideo.diff.o       0.0413 0.0245  1.69 0.0913  
 same.g.o         -0.1410 0.1216 -1.16 0.2464  
 same.r           -0.1591 0.1263 -1.26 0.2079  
 same.r.o          0.0770 0.0851  0.90 0.3657  
 sp               -0.0403 0.0208 -1.94 0.0521  
 gender=male      -0.0206 0.1146 -0.18 0.8571  
 race2=white       0.0623 0.0848  0.74 0.4622  
 same.g * g.sp.sd -0.0119 0.1200 -0.10 0.9211  
 

>  # Partner and vote models
>  
>  log.p.sp <- lrm(non.zero ~ ideo.diff + same.g*g.sp.sd + ideo.diff.o + same.g.o +same.r+ same.g.o + same.r.o + sp + gender + race2, data=treat.r1.dfl.o, x=T, y=T ) 

>  log.p.sp.cl <- robcov(log.p.sp, treat.r1.dfl.o$umg) 

>  log.p.sp.cl
Logistic Regression Model
 
 lrm(formula = non.zero ~ ideo.diff + same.g * g.sp.sd + ideo.diff.o + 
     same.g.o + same.r + same.g.o + same.r.o + sp + gender + race2, 
     data = treat.r1.dfl.o, x = T, y = T)
 
                                    Model Likelihood     Discrimination    Rank Discrim.    
                                       Ratio Test           Indexes           Indexes       
 Obs                       3600    LR chi2     106.50    R2       0.066    C       0.667    
  0                         309    d.f.            11    g        0.690    Dxy     0.335    
  1                        3291    Pr(> chi2) <0.0001    gr       1.993    gamma   0.336    
 Cluster on  treat.r1.dfl.o$umg                          gp       0.054    tau-a   0.053    
 Clusters                    30                          Brier    0.076                     
 max |deriv|              8e-13                                                             
 
                  Coef    S.E.   Wald Z Pr(>|Z|)
 Intercept         3.2371 0.6314  5.13  <0.0001 
 ideo.diff        -0.2571 0.0741 -3.47  0.0005  
 same.g            0.2417 0.4823  0.50  0.6163  
 g.sp.sd           0.0941 0.1421  0.66  0.5079  
 ideo.diff.o       0.0765 0.0415  1.84  0.0652  
 same.g.o         -0.0017 0.1869 -0.01  0.9929  
 same.r           -0.2728 0.1454 -1.88  0.0606  
 same.r.o          0.1855 0.2241  0.83  0.4077  
 sp               -0.0372 0.0582 -0.64  0.5221  
 gender=male      -0.7962 0.2589 -3.08  0.0021  
 race2=white      -0.1827 0.2662 -0.69  0.4926  
 same.g * g.sp.sd  0.0296 0.2167  0.14  0.8913  
 

>  #DV: Vote  - Basic model with clustered se for correlation  within groups
>  log.v1.sp<- lrm(vote ~  prop.ideo.diff +   prop.same.gender*g.sp.sd + prop.same.race  + sp + gender + race2, data=treat.r1.df.o, x=T, y=T)

>  log.v1.sp.cl <- robcov(log.v1.sp, treat.r1.df.o$umg)

>  log.v1.sp.cl
Logistic Regression Model
 
 lrm(formula = vote ~ prop.ideo.diff + prop.same.gender * g.sp.sd + 
     prop.same.race + sp + gender + race2, data = treat.r1.df.o, 
     x = T, y = T)
 
                                  Model Likelihood     Discrimination    Rank Discrim.    
                                     Ratio Test           Indexes           Indexes       
 Obs                      1200    LR chi2     21.33    R2       0.025    C       0.583    
  0                        363    d.f.            8    g        0.325    Dxy     0.166    
  1                        837    Pr(> chi2) 0.0063    gr       1.384    gamma   0.166    
 Cluster on  treat.r1.df.o$umg                         gp       0.068    tau-a   0.070    
 Clusters                   30                         Brier    0.207                     
 max |deriv|             3e-13                                                            
 
                            Coef    S.E.   Wald Z Pr(>|Z|)
 Intercept                   1.5158 0.4487  3.38  0.0007  
 prop.ideo.diff             -0.1703 0.0687 -2.48  0.0132  
 prop.same.gender           -0.1644 0.4355 -0.38  0.7058  
 g.sp.sd                     0.0190 0.1546  0.12  0.9024  
 prop.same.race              0.1712 0.1848  0.93  0.3541  
 sp                         -0.0550 0.0428 -1.28  0.1991  
 gender=male                 0.0424 0.2325  0.18  0.8554  
 race2=white                -0.2465 0.1713 -1.44  0.1502  
 prop.same.gender * g.sp.sd  0.0811 0.1812  0.45  0.6544  
 

>  log.v2.sp<- lrm(vote ~  prop.ideo.diff +   prop.same.gender*g.sp.sd + prop.same.race  + sp + gender + race2 + p.offered, data=treat.r1.df.o, x=T, y=T)

>  log.v2.sp.cl <- robcov(log.v2.sp, treat.r1.df.o$umg)

>  log.v2.sp.cl
Logistic Regression Model
 
 lrm(formula = vote ~ prop.ideo.diff + prop.same.gender * g.sp.sd + 
     prop.same.race + sp + gender + race2 + p.offered, data = treat.r1.df.o, 
     x = T, y = T)
 
                                   Model Likelihood     Discrimination    Rank Discrim.    
                                      Ratio Test           Indexes           Indexes       
 Obs                      1200    LR chi2     635.62    R2       0.582    C       0.901    
  0                        363    d.f.             9    g        2.435    Dxy     0.803    
  1                        837    Pr(> chi2) <0.0001    gr      11.411    gamma   0.803    
 Cluster on  treat.r1.df.o$umg                          gp       0.326    tau-a   0.339    
 Clusters                   30                          Brier    0.099                     
 max |deriv|             6e-13                                                             
 
                            Coef    S.E.   Wald Z Pr(>|Z|)
 Intercept                  -2.7683 0.8550 -3.24  0.0012  
 prop.ideo.diff             -0.0068 0.0864 -0.08  0.9372  
 prop.same.gender           -0.5921 0.6059 -0.98  0.3284  
 g.sp.sd                    -0.1925 0.2121 -0.91  0.3641  
 prop.same.race              0.2072 0.2048  1.01  0.3116  
 sp                         -0.0798 0.0820 -0.97  0.3303  
 gender=male                -0.0770 0.3751 -0.21  0.8373  
 race2=white                -0.1638 0.3311 -0.49  0.6209  
 p.offered                   1.0003 0.1193  8.39  <0.0001 
 prop.same.gender * g.sp.sd  0.1684 0.2521  0.67  0.5041  
 

>  screenreg(list(lm.M1.sp.cl, lm.M2.sp.cl, lm.M3.sp.cl, log.p.sp.cl, log.v1.sp.cl, log.v2.sp.cl))

========================================================================================================
                            Model 1      Model 2      Model 3      Model 4      Model 5      Model 6    
--------------------------------------------------------------------------------------------------------
Intercept                      4.91 ***     4.94 ***     5.11 ***     3.24 ***     1.52 ***    -2.77 ** 
                              (0.21)       (0.22)       (0.25)       (0.63)       (0.45)       (0.86)   
ideo.diff                     -0.21 **     -0.22 ***    -0.22 **     -0.26 ***                          
                              (0.06)       (0.07)       (0.07)       (0.07)                             
same.g                         0.13         0.20         0.19         0.24                              
                              (0.26)       (0.26)       (0.26)       (0.48)                             
g.sp.sd                        0.23 *       0.21 *       0.20         0.09         0.02        -0.19    
                              (0.11)       (0.10)       (0.11)       (0.14)       (0.15)       (0.21)   
same.r                        -0.12        -0.15        -0.16        -0.27                              
                              (0.12)       (0.13)       (0.13)       (0.15)                             
same.g * g.sp.sd              -0.01        -0.01        -0.01         0.03                              
                              (0.12)       (0.12)       (0.12)       (0.22)                             
ideo.diff.o                                 0.04         0.04         0.08                              
                                           (0.03)       (0.02)       (0.04)                             
same.g.o                                   -0.15        -0.14        -0.00                              
                                           (0.13)       (0.12)       (0.19)                             
same.r.o                                    0.09         0.08         0.19                              
                                           (0.09)       (0.09)       (0.22)                             
sp                                                      -0.04        -0.04        -0.05        -0.08    
                                                        (0.02)       (0.06)       (0.04)       (0.08)   
gender=male                                             -0.02        -0.80 **      0.04        -0.08    
                                                        (0.11)       (0.26)       (0.23)       (0.38)   
race2=white                                              0.06        -0.18        -0.25        -0.16    
                                                        (0.08)       (0.27)       (0.17)       (0.33)   
prop.ideo.diff                                                                    -0.17 *      -0.01    
                                                                                  (0.07)       (0.09)   
prop.same.gender                                                                  -0.16        -0.59    
                                                                                  (0.44)       (0.61)   
prop.same.race                                                                     0.17         0.21    
                                                                                  (0.18)       (0.20)   
prop.same.gender * g.sp.sd                                                         0.08         0.17    
                                                                                  (0.18)       (0.25)   
p.offered                                                                                       1.00 ***
                                                                                               (0.12)   
--------------------------------------------------------------------------------------------------------
Num. obs.                   3600         3600         3600         3600         1200         1200       
R^2                            0.01         0.02         0.02                                           
Adj. R^2                       0.01         0.01         0.01                                           
L.R.                          52.70        58.45        63.64       106.50        21.33       635.62    
Pseudo R^2                                                            0.07         0.02         0.58    
========================================================================================================
*** p < 0.001, ** p < 0.01, * p < 0.05

>  ### Printing all models as 1 table
>  texreg(file= paste0(bd, "Int_gender_models.tex", sep=""), 
+         list(lm.M1.sp.cl, lm.M2.sp.cl, lm.M3.sp.cl, log.p.sp.cl, log.v1.sp.cl, log.v2.sp.cl), 
+         custom.model.names = c("M1 Group SP*Gender", "M2 Group SP*Gender", "M3 Group SP*Gender", "M4 Group SP*Gender", "M5 Group SP*Gender", "M6 Group SP*Gender"), 
+         custom.coef.names = c("Intercept", "Ideo. Dist. P-R", "Same Gender", "SD SP Group" , "Same Race",
+                               "Same Gender * SD SP Group", 
+                               "Ideo. Dist. P-3rd", "Same Gender P-3rd", "Same Race P-3rd", 
+                               "Self-Placement", "Proposer-Male", "Proposer-White",  
+                               "Ideo. Dist. P-R", "Same Gender", "Same Race", "Same Gender * SD SP Group", "Amount Offered" ),
+         caption = "Statistical models on proposal and voting behaviour with interaction of Gender and Standard Deviation of Self-Placement in Groups ",
+         label="table:model_intgender",
+         booktabs = F, dcolumn = F)
The table was written to the file 'C:/Users/Denise Laroze/Dropbox/group ID in legislative bargaining/Social Identity 2019-20/Data analysis/Int_gender_models.tex'.


>  ########################################## 
>  ### Models with interaction g.sp.sd*same.r Table A.9
>  ##########################################
>  #DV: Offer  - Definition 1 same group
>  lm.M1.spr<-ols(prop1~ ideo.diff + same.g + same.r*g.sp.sd, data=treat.r1.dfl.o, y=T, x=T)

>  lm.M1.spr.cl<-robcov(lm.M1.spr, treat.r1.dfl.o$umg)

>  lm.M1.spr.cl
Linear Regression Model
 
 ols(formula = prop1 ~ ideo.diff + same.g + same.r * g.sp.sd, 
     data = treat.r1.dfl.o, x = T, y = T)
 
                                 Model Likelihood     Discrimination    
                                    Ratio Test           Indexes        
 Obs                    3600     LR chi2     52.76    R2       0.015    
 sigma                2.2616     d.f.            5    R2 adj   0.013    
 d.f.                   3594     Pr(> chi2) 0.0000    g        0.308    
 Cluster ontreat.r1.dfl.o$umg                                           
 Clusters                 30                                            
 
 Residuals
 
     Min      1Q  Median      3Q     Max 
 -5.5626 -0.6132  0.5287  1.1061  8.5956 
 
 
                  Coef    S.E.   t     Pr(>|t|)
 Intercept         4.8929 0.1779 27.51 <0.0001 
 ideo.diff        -0.2088 0.0639 -3.27 0.0011  
 same.g            0.1158 0.1347  0.86 0.3902  
 same.r           -0.0777 0.2292 -0.34 0.7346  
 g.sp.sd           0.2378 0.1224  1.94 0.0521  
 same.r * g.sp.sd -0.0221 0.1181 -0.19 0.8518  
 

>  #DV: Offer  - Definition 1 with controles
>  lm.M2.spr<-ols(prop1~ ideo.diff + same.g + ideo.diff.o + same.g.o +same.r*g.sp.sd+ same.g.o + same.r.o, data=treat.r1.dfl.o, y=T, x=T)

>  lm.M2.spr.cl<-robcov(lm.M2.spr, treat.r1.dfl.o$umg)

>  lm.M2.spr.cl
Linear Regression Model
 
 ols(formula = prop1 ~ ideo.diff + same.g + ideo.diff.o + same.g.o + 
     same.r * g.sp.sd + same.g.o + same.r.o, data = treat.r1.dfl.o, 
     x = T, y = T)
 
                                 Model Likelihood     Discrimination    
                                    Ratio Test           Indexes        
 Obs                    3600     LR chi2     58.52    R2       0.016    
 sigma                2.2608     d.f.            8    R2 adj   0.014    
 d.f.                   3591     Pr(> chi2) 0.0000    g        0.322    
 Cluster ontreat.r1.dfl.o$umg                                           
 Clusters                 30                                            
 
 Residuals
 
     Min      1Q  Median      3Q     Max 
 -5.5372 -0.5778  0.5350  1.1114  8.4793 
 
 
                  Coef    S.E.   t     Pr(>|t|)
 Intercept         4.9250 0.2059 23.92 <0.0001 
 ideo.diff        -0.2186 0.0660 -3.31 0.0009  
 same.g            0.1785 0.1417  1.26 0.2079  
 ideo.diff.o       0.0392 0.0262  1.50 0.1348  
 same.g.o         -0.1482 0.1357 -1.09 0.2748  
 same.r           -0.1091 0.2266 -0.48 0.6304  
 g.sp.sd           0.2156 0.1147  1.88 0.0603  
 same.r.o          0.0907 0.0912  0.99 0.3200  
 same.r * g.sp.sd -0.0247 0.1181 -0.21 0.8341  
 

>  lm.M3.spr<-ols(prop1~ideo.diff + same.g + ideo.diff.o + same.g.o +same.r*g.sp.sd+ same.g.o + same.r.o + sp + gender + race2 , data=treat.r1.dfl.o, y=T, x=T)

>  lm.M3.spr.cl<-robcov(lm.M3.spr, treat.r1.dfl.o$umg)

>  lm.M3.spr.cl
Linear Regression Model
 
 ols(formula = prop1 ~ ideo.diff + same.g + ideo.diff.o + same.g.o + 
     same.r * g.sp.sd + same.g.o + same.r.o + sp + gender + race2, 
     data = treat.r1.dfl.o, x = T, y = T)
 
                                 Model Likelihood     Discrimination    
                                    Ratio Test           Indexes        
 Obs                    3600     LR chi2     63.75    R2       0.018    
 sigma                2.2601     d.f.           11    R2 adj   0.015    
 d.f.                   3588     Pr(> chi2) 0.0000    g        0.336    
 Cluster ontreat.r1.dfl.o$umg                                           
 Clusters                 30                                            
 
 Residuals
 
     Min      1Q  Median      3Q     Max 
 -5.6355 -0.5995  0.5309  1.1072  8.2813 
 
 
                  Coef    S.E.   t     Pr(>|t|)
 Intercept         5.0933 0.2432 20.95 <0.0001 
 ideo.diff        -0.2158 0.0660 -3.27 0.0011  
 same.g            0.1725 0.1349  1.28 0.2009  
 ideo.diff.o       0.0418 0.0253  1.65 0.0988  
 same.g.o         -0.1398 0.1221 -1.14 0.2523  
 same.r           -0.1082 0.2227 -0.49 0.6272  
 g.sp.sd           0.2099 0.1132  1.85 0.0638  
 same.r.o          0.0778 0.0861  0.90 0.3665  
 sp               -0.0405 0.0207 -1.96 0.0501  
 gender=male      -0.0215 0.1146 -0.19 0.8516  
 race2=white       0.0621 0.0846  0.73 0.4629  
 same.r * g.sp.sd -0.0301 0.1175 -0.26 0.7978  
 

>  # Partner and vote models
>  
>  log.p.spr <- lrm(non.zero ~ ideo.diff + same.g + ideo.diff.o + same.g.o +same.r*g.sp.sd+ same.g.o + same.r.o + sp + gender + race2, data=treat.r1.dfl.o, x=T, y=T ) 

>  log.p.spr.cl <- robcov(log.p.spr, treat.r1.dfl.o$umg) 

>  log.p.spr.cl
Logistic Regression Model
 
 lrm(formula = non.zero ~ ideo.diff + same.g + ideo.diff.o + same.g.o + 
     same.r * g.sp.sd + same.g.o + same.r.o + sp + gender + race2, 
     data = treat.r1.dfl.o, x = T, y = T)
 
                                    Model Likelihood     Discrimination    Rank Discrim.    
                                       Ratio Test           Indexes           Indexes       
 Obs                       3600    LR chi2     107.11    R2       0.066    C       0.668    
  0                         309    d.f.            11    g        0.689    Dxy     0.335    
  1                        3291    Pr(> chi2) <0.0001    gr       1.991    gamma   0.336    
 Cluster on  treat.r1.dfl.o$umg                          gp       0.054    tau-a   0.053    
 Clusters                    30                          Brier    0.076                     
 max |deriv|              5e-13                                                             
 
                  Coef    S.E.   Wald Z Pr(>|Z|)
 Intercept         3.0909 0.5892  5.25  <0.0001 
 ideo.diff        -0.2584 0.0734 -3.52  0.0004  
 same.g            0.3043 0.1500  2.03  0.0425  
 ideo.diff.o       0.0760 0.0428  1.78  0.0756  
 same.g.o         -0.0029 0.1875 -0.02  0.9876  
 same.r           -0.0659 0.3727 -0.18  0.8597  
 g.sp.sd           0.1749 0.1351  1.30  0.1953  
 same.r.o          0.1871 0.2241  0.84  0.4037  
 sp               -0.0378 0.0585 -0.65  0.5181  
 gender=male      -0.7949 0.2608 -3.05  0.0023  
 race2=white      -0.1814 0.2634 -0.69  0.4911  
 same.r * g.sp.sd -0.1115 0.1754 -0.64  0.5250  
 

>  #DV: Vote  - Basic model with clustered se for correlation  within groups
>  log.v1.spr<- lrm(vote ~  prop.ideo.diff +   prop.same.gender + prop.same.race*g.sp.sd  + sp + gender + race2, data=treat.r1.df.o, x=T, y=T)

>  log.v1.spr.cl <- robcov(log.v1.spr, treat.r1.df.o$umg)

>  log.v1.spr.cl
Logistic Regression Model
 
 lrm(formula = vote ~ prop.ideo.diff + prop.same.gender + prop.same.race * 
     g.sp.sd + sp + gender + race2, data = treat.r1.df.o, x = T, 
     y = T)
 
                                  Model Likelihood     Discrimination    Rank Discrim.    
                                     Ratio Test           Indexes           Indexes       
 Obs                      1200    LR chi2     21.04    R2       0.025    C       0.583    
  0                        363    d.f.            8    g        0.323    Dxy     0.166    
  1                        837    Pr(> chi2) 0.0070    gr       1.381    gamma   0.166    
 Cluster on  treat.r1.df.o$umg                         gp       0.068    tau-a   0.070    
 Clusters                   30                         Brier    0.207                     
 max |deriv|             5e-13                                                            
 
                          Coef    S.E.   Wald Z Pr(>|Z|)
 Intercept                 1.4447 0.3634  3.98  <0.0001 
 prop.ideo.diff           -0.1696 0.0701 -2.42  0.0155  
 prop.same.gender         -0.0202 0.1895 -0.11  0.9152  
 prop.same.race            0.1400 0.3259  0.43  0.6676  
 g.sp.sd                   0.0530 0.1694  0.31  0.7544  
 sp                       -0.0546 0.0426 -1.28  0.2006  
 gender=male               0.0476 0.2294  0.21  0.8358  
 race2=white              -0.2454 0.1712 -1.43  0.1517  
 prop.same.race * g.sp.sd  0.0201 0.1956  0.10  0.9181  
 

>  log.v2.spr<- lrm(vote ~  prop.ideo.diff +   prop.same.gender + prop.same.race*g.sp.sd  + sp + gender + race2 + p.offered, data=treat.r1.df.o, x=T, y=T)

>  log.v2.spr.cl <- robcov(log.v2.spr, treat.r1.df.o$umg)

>  log.v2.spr.cl
Logistic Regression Model
 
 lrm(formula = vote ~ prop.ideo.diff + prop.same.gender + prop.same.race * 
     g.sp.sd + sp + gender + race2 + p.offered, data = treat.r1.df.o, 
     x = T, y = T)
 
                                   Model Likelihood     Discrimination    Rank Discrim.    
                                      Ratio Test           Indexes           Indexes       
 Obs                      1200    LR chi2     636.25    R2       0.582    C       0.902    
  0                        363    d.f.             9    g        2.441    Dxy     0.803    
  1                        837    Pr(> chi2) <0.0001    gr      11.485    gamma   0.804    
 Cluster on  treat.r1.df.o$umg                          gp       0.327    tau-a   0.339    
 Clusters                   30                          Brier    0.099                     
 max |deriv|             6e-13                                                             
 
                          Coef    S.E.   Wald Z Pr(>|Z|)
 Intercept                -2.8000 0.7719 -3.63  0.0003  
 prop.ideo.diff           -0.0023 0.0852 -0.03  0.9788  
 prop.same.gender         -0.3162 0.2868 -1.10  0.2703  
 prop.same.race           -0.1738 0.3603 -0.48  0.6297  
 g.sp.sd                  -0.2169 0.1899 -1.14  0.2534  
 sp                       -0.0734 0.0827 -0.89  0.3749  
 gender=male              -0.0767 0.3766 -0.20  0.8385  
 race2=white              -0.1633 0.3347 -0.49  0.6256  
 p.offered                 1.0040 0.1210  8.30  <0.0001 
 prop.same.race * g.sp.sd  0.2327 0.2119  1.10  0.2719  
 

>  screenreg(list(lm.M1.spr.cl, lm.M2.spr.cl, lm.M3.spr.cl, log.p.spr.cl, log.v1.spr.cl, log.v2.spr.cl))

======================================================================================================
                          Model 1      Model 2      Model 3      Model 4      Model 5      Model 6    
------------------------------------------------------------------------------------------------------
Intercept                    4.89 ***     4.92 ***     5.09 ***     3.09 ***     1.44 ***    -2.80 ***
                            (0.18)       (0.21)       (0.24)       (0.59)       (0.36)       (0.77)   
ideo.diff                   -0.21 **     -0.22 ***    -0.22 **     -0.26 ***                          
                            (0.06)       (0.07)       (0.07)       (0.07)                             
same.g                       0.12         0.18         0.17         0.30 *                            
                            (0.13)       (0.14)       (0.13)       (0.15)                             
same.r                      -0.08        -0.11        -0.11        -0.07                              
                            (0.23)       (0.23)       (0.22)       (0.37)                             
g.sp.sd                      0.24         0.22         0.21         0.17         0.05        -0.22    
                            (0.12)       (0.11)       (0.11)       (0.14)       (0.17)       (0.19)   
same.r * g.sp.sd            -0.02        -0.02        -0.03        -0.11                              
                            (0.12)       (0.12)       (0.12)       (0.18)                             
ideo.diff.o                               0.04         0.04         0.08                              
                                         (0.03)       (0.03)       (0.04)                             
same.g.o                                 -0.15        -0.14        -0.00                              
                                         (0.14)       (0.12)       (0.19)                             
same.r.o                                  0.09         0.08         0.19                              
                                         (0.09)       (0.09)       (0.22)                             
sp                                                    -0.04        -0.04        -0.05        -0.07    
                                                      (0.02)       (0.06)       (0.04)       (0.08)   
gender=male                                           -0.02        -0.79 **      0.05        -0.08    
                                                      (0.11)       (0.26)       (0.23)       (0.38)   
race2=white                                            0.06        -0.18        -0.25        -0.16    
                                                      (0.08)       (0.26)       (0.17)       (0.33)   
prop.ideo.diff                                                                  -0.17 *      -0.00    
                                                                                (0.07)       (0.09)   
prop.same.gender                                                                -0.02        -0.32    
                                                                                (0.19)       (0.29)   
prop.same.race                                                                   0.14        -0.17    
                                                                                (0.33)       (0.36)   
prop.same.race * g.sp.sd                                                         0.02         0.23    
                                                                                (0.20)       (0.21)   
p.offered                                                                                     1.00 ***
                                                                                             (0.12)   
------------------------------------------------------------------------------------------------------
Num. obs.                 3600         3600         3600         3600         1200         1200       
R^2                          0.01         0.02         0.02                                           
Adj. R^2                     0.01         0.01         0.01                                           
L.R.                        52.76        58.52        63.75       107.11        21.04       636.25    
Pseudo R^2                                                          0.07         0.02         0.58    
======================================================================================================
*** p < 0.001, ** p < 0.01, * p < 0.05

>  ### Printing all models as 1 table
>  texreg(file= paste0(bd, "Int_race_models.tex", sep=""), 
+         list(lm.M1.spr.cl, lm.M2.spr.cl, lm.M3.spr.cl, log.p.spr.cl, log.v1.spr.cl, log.v2.spr.cl), 
+         custom.model.names = c("M1 Group SP*Race", "M2 Group SP*Race", "M3 Group SP*Race", "M4 Group SP*Race", "M5 Group SP*Race", "M6 Group SP*Race"), 
+         custom.coef.names = c("Intercept", "Ideo. Dist. P-R", "Same Gender","Same Race", "SD SP Group" , 
+                               "Same Race * SD SP Group", 
+                               "Ideo. Dist. P-3rd", "Same Gender P-3rd", "Same Race P-3rd", 
+                               "Self-Placement", "Proposer-Male", "Proposer-White",  
+                               "Ideo. Dist. P-R", "Same Gender", "Same Race", "Same Race * SD SP Group", "Amount Offered" ),
+         caption = "Statistical models on proposal and voting behaviour with interaction of Race and Standard Deviation of Self-Placement in Groups ",
+         label="table:model_intrace",
+         booktabs = F, dcolumn = F)
The table was written to the file 'C:/Users/Denise Laroze/Dropbox/group ID in legislative bargaining/Social Identity 2019-20/Data analysis/Int_race_models.tex'.


>  ##################################################################################
>  #### Data Analysis Full Data Frame. Same models as using the round 1 results only A.7
>  #################################################################
>  
>  lm.FM1<-ols(prop1~ideo.diff + same.g + same.r, data=treat.dfl.o, y=T, x=T)

>  lm.FM1.cl<-robcov(lm.FM1, treat.dfl.o$umg)

>  lm.FM1.cl
Frequencies of Missing Values Due to Each Variable
    prop1 ideo.diff    same.g    same.r 
    14820         0         0         0 

Linear Regression Model
 
 ols(formula = prop1 ~ ideo.diff + same.g + same.r, data = treat.dfl.o, 
     x = T, y = T)
 
 
                              Model Likelihood     Discrimination    
                                 Ratio Test           Indexes        
 Obs                 3900     LR chi2     43.84    R2       0.011    
 sigma             2.2714     d.f.            3    R2 adj   0.010    
 d.f.                3896     Pr(> chi2) 0.0000    g        0.270    
 Cluster ontreat.dfl.o$umg                                           
 Clusters              30                                            
 
 Residuals
 
     Min      1Q  Median      3Q     Max 
 -5.1101 -0.9743  0.5911  1.1575  8.8365 
 
 
           Coef    S.E.   t     Pr(>|t|)
 Intercept  4.9783 0.1461 34.08 <0.0001 
 ideo.diff -0.1358 0.0389 -3.49 0.0005  
 same.g     0.1318 0.1380  0.95 0.3398  
 same.r    -0.0654 0.1166 -0.56 0.5749  
 

>  lm.FM1.r<-ols(prop1~ideo.diff + same.g + same.r, data=treat.dfl.o, y=T, x=T)

>  lm.FM1.r.cl<-robcov(lm.FM1.r, treat.dfl.o$umg)

>  lm.FM1.r.cl
Frequencies of Missing Values Due to Each Variable
    prop1 ideo.diff    same.g    same.r 
    14820         0         0         0 

Linear Regression Model
 
 ols(formula = prop1 ~ ideo.diff + same.g + same.r, data = treat.dfl.o, 
     x = T, y = T)
 
 
                              Model Likelihood     Discrimination    
                                 Ratio Test           Indexes        
 Obs                 3900     LR chi2     43.84    R2       0.011    
 sigma             2.2714     d.f.            3    R2 adj   0.010    
 d.f.                3896     Pr(> chi2) 0.0000    g        0.270    
 Cluster ontreat.dfl.o$umg                                           
 Clusters              30                                            
 
 Residuals
 
     Min      1Q  Median      3Q     Max 
 -5.1101 -0.9743  0.5911  1.1575  8.8365 
 
 
           Coef    S.E.   t     Pr(>|t|)
 Intercept  4.9783 0.1461 34.08 <0.0001 
 ideo.diff -0.1358 0.0389 -3.49 0.0005  
 same.g     0.1318 0.1380  0.95 0.3398  
 same.r    -0.0654 0.1166 -0.56 0.5749  
 

>  lm.FM2<-ols(prop1~ideo.diff + same.g+same.r+ ideo.diff.o + same.g.o + same.r.o, data=treat.dfl.o, y=T, x=T)

>  lm.FM2.cl<-robcov(lm.FM2, treat.dfl.o$umg)

>  lm.FM2.cl
Frequencies of Missing Values Due to Each Variable
      prop1   ideo.diff      same.g      same.r ideo.diff.o    same.g.o    same.r.o 
      14820           0           0           0           0           0           0 

Linear Regression Model
 
 ols(formula = prop1 ~ ideo.diff + same.g + same.r + ideo.diff.o + 
     same.g.o + same.r.o, data = treat.dfl.o, x = T, y = T)
 
 
                              Model Likelihood     Discrimination    
                                 Ratio Test           Indexes        
 Obs                 3900     LR chi2     57.08    R2       0.015    
 sigma             2.2684     d.f.            6    R2 adj   0.013    
 d.f.                3893     Pr(> chi2) 0.0000    g        0.303    
 Cluster ontreat.dfl.o$umg                                           
 Clusters              30                                            
 
 Residuals
 
     Min      1Q  Median      3Q     Max 
 -5.3068 -0.9851  0.5943  1.1702  8.6442 
 
 
             Coef    S.E.   t     Pr(>|t|)
 Intercept    4.9308 0.1569 31.42 <0.0001 
 ideo.diff   -0.1667 0.0473 -3.53 0.0004  
 same.g       0.1979 0.1434  1.38 0.1677  
 same.r      -0.1342 0.1221 -1.10 0.2720  
 ideo.diff.o  0.0709 0.0298  2.38 0.0175  
 same.g.o    -0.1436 0.1281 -1.12 0.2623  
 same.r.o     0.1705 0.0995  1.71 0.0869  
 

>  lm.FM3<-ols(prop1~ideo.diff + same.g+same.r+ ideo.diff.o + same.g.o + same.r.o + sp + gender + race2 , data=treat.dfl.o, y=T, x=T)

>  lm.FM3.cl<-robcov(lm.FM3, treat.dfl.o$umg)

>  lm.FM3.cl
Frequencies of Missing Values Due to Each Variable
      prop1   ideo.diff      same.g      same.r ideo.diff.o    same.g.o    same.r.o          sp      gender       race2 
      14820           0           0           0           0           0           0           0           0           0 

Linear Regression Model
 
 ols(formula = prop1 ~ ideo.diff + same.g + same.r + ideo.diff.o + 
     same.g.o + same.r.o + sp + gender + race2, data = treat.dfl.o, 
     x = T, y = T)
 
 
                              Model Likelihood     Discrimination    
                                 Ratio Test           Indexes        
 Obs                 3900     LR chi2     60.89    R2       0.015    
 sigma             2.2682     d.f.            9    R2 adj   0.013    
 d.f.                3890     Pr(> chi2) 0.0000    g        0.315    
 Cluster ontreat.dfl.o$umg                                           
 Clusters              30                                            
 
 Residuals
 
     Min      1Q  Median      3Q     Max 
 -5.3741 -0.9573  0.5923  1.1599  8.4659 
 
 
             Coef    S.E.   t     Pr(>|t|)
 Intercept    5.0742 0.1893 26.81 <0.0001 
 ideo.diff   -0.1666 0.0476 -3.50 0.0005  
 same.g       0.1951 0.1390  1.40 0.1606  
 same.r      -0.1391 0.1243 -1.12 0.2631  
 ideo.diff.o  0.0721 0.0297  2.43 0.0151  
 same.g.o    -0.1378 0.1104 -1.25 0.2119  
 same.r.o     0.1631 0.0947  1.72 0.0850  
 sp          -0.0344 0.0214 -1.61 0.1073  
 gender=male -0.0132 0.1112 -0.12 0.9057  
 race2=white  0.0398 0.0822  0.48 0.6284  
 

>  log.FMp <- lrm(non.zero ~ ideo.diff+  same.g + same.r + ideo.diff.o+ same.g.o +same.r.o + sp + gender + race2 , data=treat.dfl.o, x=T, y=T ) 

>  log.FMp.cl <- robcov(log.FMp, treat.dfl.o$umg) 

>  log.FMp.cl
Frequencies of Missing Values Due to Each Variable
   non.zero   ideo.diff      same.g      same.r ideo.diff.o    same.g.o    same.r.o          sp      gender       race2 
      14820           0           0           0           0           0           0           0           0           0 

Logistic Regression Model
 
 lrm(formula = non.zero ~ ideo.diff + same.g + same.r + ideo.diff.o + 
     same.g.o + same.r.o + sp + gender + race2, data = treat.dfl.o, 
     x = T, y = T)
 
 
                                 Model Likelihood     Discrimination    Rank Discrim.    
                                    Ratio Test           Indexes           Indexes       
 Obs                    3900    LR chi2     113.08    R2       0.064    C       0.666    
  0                      339    d.f.             9    g        0.681    Dxy     0.333    
  1                     3561    Pr(> chi2) <0.0001    gr       1.976    gamma   0.334    
 Cluster on  treat.dfl.o$umg                          gp       0.054    tau-a   0.053    
 Clusters                 30                          Brier    0.077                     
 max |deriv|           2e-12                                                             
 
             Coef    S.E.   Wald Z Pr(>|Z|)
 Intercept    3.2609 0.5450  5.98  <0.0001 
 ideo.diff   -0.2200 0.0696 -3.16  0.0016  
 same.g       0.2797 0.1452  1.93  0.0540  
 same.r      -0.2437 0.1416 -1.72  0.0852  
 ideo.diff.o  0.1000 0.0499  2.01  0.0449  
 same.g.o     0.0084 0.1826  0.05  0.9632  
 same.r.o     0.1756 0.2317  0.76  0.4485  
 sp          -0.0298 0.0561 -0.53  0.5951  
 gender=male -0.7898 0.2541 -3.11  0.0019  
 race2=white -0.2407 0.2582 -0.93  0.3513  
 

>  log.FMv1<- lrm(vote ~    prop.ideo.diff + prop.same.gender + prop.same.race  + sp + gender + race2, data=treat.df.o, x=T, y=T)

>  log.FMv1.cl <- robcov(log.FMv1, treat.df.o$umg)

>  log.FMv1.cl
Frequencies of Missing Values Due to Each Variable
            vote   prop.ideo.diff prop.same.gender   prop.same.race               sp           gender            race2 
            4700                0                0                0                0                0                0 

Logistic Regression Model
 
 lrm(formula = vote ~ prop.ideo.diff + prop.same.gender + prop.same.race + 
     sp + gender + race2, data = treat.df.o, x = T, y = T)
 
 
                               Model Likelihood     Discrimination    Rank Discrim.    
                                  Ratio Test           Indexes           Indexes       
 Obs                   1300    LR chi2     23.77    R2       0.026    C       0.584    
  0                     400    d.f.            6    g        0.324    Dxy     0.168    
  1                     900    Pr(> chi2) 0.0006    gr       1.383    gamma   0.169    
 Cluster on  treat.df.o$umg                         gp       0.069    tau-a   0.072    
 Clusters                30                         Brier    0.209                     
 max |deriv|          7e-13                                                            
 
                  Coef    S.E.   Wald Z Pr(>|Z|)
 Intercept         1.4165 0.3200  4.43  <0.0001 
 prop.ideo.diff   -0.1591 0.0463 -3.44  0.0006  
 prop.same.gender  0.0445 0.1703  0.26  0.7937  
 prop.same.race    0.1367 0.1658  0.82  0.4097  
 sp               -0.0535 0.0390 -1.37  0.1701  
 gender=male       0.0255 0.2186  0.12  0.9072  
 race2=white      -0.1559 0.1787 -0.87  0.3831  
 

>  log.FMv2<- lrm(vote ~  prop.ideo.diff + prop.same.gender + prop.same.race + sp + gender + race2 + p.offered, data=treat.df.o, x=T, y=T)

>  log.FMv2.cl <- robcov(log.FMv2, treat.df.o$umg)

>  log.FMv2.cl
Frequencies of Missing Values Due to Each Variable
            vote   prop.ideo.diff prop.same.gender   prop.same.race               sp           gender            race2        p.offered 
            4700                0                0                0                0                0                0             4700 

Logistic Regression Model
 
 lrm(formula = vote ~ prop.ideo.diff + prop.same.gender + prop.same.race + 
     sp + gender + race2 + p.offered, data = treat.df.o, x = T, 
     y = T)
 
 
                                Model Likelihood     Discrimination    Rank Discrim.    
                                   Ratio Test           Indexes           Indexes       
 Obs                   1300    LR chi2     676.72    R2       0.572    C       0.898    
  0                     400    d.f.             7    g        2.358    Dxy     0.795    
  1                     900    Pr(> chi2) <0.0001    gr      10.571    gamma   0.796    
 Cluster on  treat.df.o$umg                          gp       0.329    tau-a   0.339    
 Clusters                30                          Brier    0.104                     
 max |deriv|          2e-06                                                             
 
                  Coef    S.E.   Wald Z Pr(>|Z|)
 Intercept        -2.7037 0.6274 -4.31  <0.0001 
 prop.ideo.diff   -0.0576 0.0630 -0.91  0.3606  
 prop.same.gender -0.2790 0.2364 -1.18  0.2379  
 prop.same.race    0.1777 0.1657  1.07  0.2837  
 sp               -0.0719 0.0742 -0.97  0.3324  
 gender=male      -0.1180 0.3408 -0.35  0.7291  
 race2=white      -0.0872 0.2943 -0.30  0.7671  
 p.offered         0.9496 0.0986  9.64  <0.0001 
 

>  screenreg(list(lm.FM1.cl, lm.FM2.cl, lm.FM3.cl, log.FMp.cl, log.FMv1.cl, log.FMv2.cl))

==============================================================================================
                  Model 1      Model 2      Model 3      Model 4      Model 5      Model 6    
----------------------------------------------------------------------------------------------
Intercept            4.98 ***     4.93 ***     5.07 ***     3.26 ***     1.42 ***    -2.70 ***
                    (0.15)       (0.16)       (0.19)       (0.54)       (0.32)       (0.63)   
ideo.diff           -0.14 ***    -0.17 ***    -0.17 ***    -0.22 **                           
                    (0.04)       (0.05)       (0.05)       (0.07)                             
same.g               0.13         0.20         0.20         0.28                              
                    (0.14)       (0.14)       (0.14)       (0.15)                             
same.r              -0.07        -0.13        -0.14        -0.24                              
                    (0.12)       (0.12)       (0.12)       (0.14)                             
ideo.diff.o                       0.07 *       0.07 *       0.10 *                            
                                 (0.03)       (0.03)       (0.05)                             
same.g.o                         -0.14        -0.14         0.01                              
                                 (0.13)       (0.11)       (0.18)                             
same.r.o                          0.17         0.16         0.18                              
                                 (0.10)       (0.09)       (0.23)                             
sp                                            -0.03        -0.03        -0.05        -0.07    
                                              (0.02)       (0.06)       (0.04)       (0.07)   
gender=male                                   -0.01        -0.79 **      0.03        -0.12    
                                              (0.11)       (0.25)       (0.22)       (0.34)   
race2=white                                    0.04        -0.24        -0.16        -0.09    
                                              (0.08)       (0.26)       (0.18)       (0.29)   
prop.ideo.diff                                                          -0.16 ***    -0.06    
                                                                        (0.05)       (0.06)   
prop.same.gender                                                         0.04        -0.28    
                                                                        (0.17)       (0.24)   
prop.same.race                                                           0.14         0.18    
                                                                        (0.17)       (0.17)   
p.offered                                                                             0.95 ***
                                                                                     (0.10)   
----------------------------------------------------------------------------------------------
Num. obs.         3900         3900         3900         3900         1300         1300       
R^2                  0.01         0.01         0.02                                           
Adj. R^2             0.01         0.01         0.01                                           
L.R.                43.84        57.08        60.89       113.08        23.77       676.72    
Pseudo R^2                                                  0.06         0.03         0.57    
==============================================================================================
*** p < 0.001, ** p < 0.01, * p < 0.05

>  texreg(file= paste0(bd, "Full_base_models.tex", sep=""), 
+         list(lm.FM1.cl, lm.FM2.cl, lm.FM3.cl, log.FMp.cl, log.FMv1.cl, log.FMv2.cl), 
+         custom.model.names = c(" M1 Full Offer", "M2 Full Offer", "M3 Full Offer", "M4 Full Partner", "M5 Full Vote", "M6 Full Vote"), 
+         custom.coef.names = c("Intercept", "Ideo. Dist. P-R", "Same Gender", "Same Race", 
+                               "Ideo. Dist. P-3rd", "Same Gender P-3rd", "Same Race P-3rd", 
+                               "Self-Placement", "Proposer-Male", "Proposer-White", 
+                               "Ideo. Dist. P-R", "Same Gender", "Same Race", "Amount Offered" ),
+         caption="Models M1-M6 in main text, but including all rounds",
+         booktabs = F, dcolumn = F)
The table was written to the file 'C:/Users/Denise Laroze/Dropbox/group ID in legislative bargaining/Social Identity 2019-20/Data analysis/Full_base_models.tex'.


>  # Partner and vote models
>  
>  log.p <- lrm(non.zero ~ ideo.diff+ ideo.diff.o+ same.g+same.g.o + same.r+same.r.o + gender + race2 + sp, data=treat.dfl.o, x=T, y=T ) 

>  log.p.cl <- robcov(log.p, treat.dfl.o$umg) 

>  log.p.cl
Frequencies of Missing Values Due to Each Variable
   non.zero   ideo.diff ideo.diff.o      same.g    same.g.o      same.r    same.r.o      gender       race2          sp 
      14820           0           0           0           0           0           0           0           0           0 

Logistic Regression Model
 
 lrm(formula = non.zero ~ ideo.diff + ideo.diff.o + same.g + same.g.o + 
     same.r + same.r.o + gender + race2 + sp, data = treat.dfl.o, 
     x = T, y = T)
 
 
                                 Model Likelihood     Discrimination    Rank Discrim.    
                                    Ratio Test           Indexes           Indexes       
 Obs                    3900    LR chi2     113.08    R2       0.064    C       0.666    
  0                      339    d.f.             9    g        0.681    Dxy     0.333    
  1                     3561    Pr(> chi2) <0.0001    gr       1.976    gamma   0.334    
 Cluster on  treat.dfl.o$umg                          gp       0.054    tau-a   0.053    
 Clusters                 30                          Brier    0.077                     
 max |deriv|           2e-12                                                             
 
             Coef    S.E.   Wald Z Pr(>|Z|)
 Intercept    3.2609 0.5450  5.98  <0.0001 
 ideo.diff   -0.2200 0.0696 -3.16  0.0016  
 ideo.diff.o  0.1000 0.0499  2.01  0.0449  
 same.g       0.2797 0.1452  1.93  0.0540  
 same.g.o     0.0084 0.1826  0.05  0.9632  
 same.r      -0.2437 0.1416 -1.72  0.0852  
 same.r.o     0.1756 0.2317  0.76  0.4485  
 gender=male -0.7898 0.2541 -3.11  0.0019  
 race2=white -0.2407 0.2582 -0.93  0.3513  
 sp          -0.0298 0.0561 -0.53  0.5951  
 

>  screenreg(log.p.cl)

========================
             Model 1    
------------------------
Intercept       3.26 ***
               (0.54)   
ideo.diff      -0.22 ** 
               (0.07)   
ideo.diff.o     0.10 *  
               (0.05)   
same.g          0.28    
               (0.15)   
same.g.o        0.01    
               (0.18)   
same.r         -0.24    
               (0.14)   
same.r.o        0.18    
               (0.23)   
gender=male    -0.79 ** 
               (0.25)   
race2=white    -0.24    
               (0.26)   
sp             -0.03    
               (0.06)   
------------------------
Num. obs.    3900       
Pseudo R^2      0.06    
L.R.          113.08    
========================
*** p < 0.001, ** p < 0.01, * p < 0.05

>  #DV: Vote  - Basic model with clustered se for correlation  within groups
>  log.v1<- lrm(vote ~    prop.ideo.diff + prop.same.gender + prop.same.race + gender + race2+ sp, data=treat.df.o, x=T, y=T)

>  log.v1.cl <- robcov(log.v1, treat.df.o$umg)

>  log.v1.cl
Frequencies of Missing Values Due to Each Variable
            vote   prop.ideo.diff prop.same.gender   prop.same.race           gender            race2               sp 
            4700                0                0                0                0                0                0 

Logistic Regression Model
 
 lrm(formula = vote ~ prop.ideo.diff + prop.same.gender + prop.same.race + 
     gender + race2 + sp, data = treat.df.o, x = T, y = T)
 
 
                               Model Likelihood     Discrimination    Rank Discrim.    
                                  Ratio Test           Indexes           Indexes       
 Obs                   1300    LR chi2     23.77    R2       0.026    C       0.584    
  0                     400    d.f.            6    g        0.324    Dxy     0.168    
  1                     900    Pr(> chi2) 0.0006    gr       1.383    gamma   0.169    
 Cluster on  treat.df.o$umg                         gp       0.069    tau-a   0.072    
 Clusters                30                         Brier    0.209                     
 max |deriv|          5e-13                                                            
 
                  Coef    S.E.   Wald Z Pr(>|Z|)
 Intercept         1.4165 0.3200  4.43  <0.0001 
 prop.ideo.diff   -0.1591 0.0463 -3.44  0.0006  
 prop.same.gender  0.0445 0.1703  0.26  0.7937  
 prop.same.race    0.1367 0.1658  0.82  0.4097  
 gender=male       0.0255 0.2186  0.12  0.9072  
 race2=white      -0.1559 0.1787 -0.87  0.3831  
 sp               -0.0535 0.0390 -1.37  0.1701  
 

>  log.v2<- lrm(vote ~  prop.ideo.diff + prop.same.gender + prop.same.race + gender + race2+ sp + p.offered, data=treat.df.o, x=T, y=T)

>  log.v2.cl <- robcov(log.v2, treat.df.o$umg)

>  log.v2.cl
Frequencies of Missing Values Due to Each Variable
            vote   prop.ideo.diff prop.same.gender   prop.same.race           gender            race2               sp        p.offered 
            4700                0                0                0                0                0                0             4700 

Logistic Regression Model
 
 lrm(formula = vote ~ prop.ideo.diff + prop.same.gender + prop.same.race + 
     gender + race2 + sp + p.offered, data = treat.df.o, x = T, 
     y = T)
 
 
                                Model Likelihood     Discrimination    Rank Discrim.    
                                   Ratio Test           Indexes           Indexes       
 Obs                   1300    LR chi2     676.72    R2       0.572    C       0.898    
  0                     400    d.f.             7    g        2.358    Dxy     0.795    
  1                     900    Pr(> chi2) <0.0001    gr      10.571    gamma   0.796    
 Cluster on  treat.df.o$umg                          gp       0.329    tau-a   0.339    
 Clusters                30                          Brier    0.104                     
 max |deriv|          2e-06                                                             
 
                  Coef    S.E.   Wald Z Pr(>|Z|)
 Intercept        -2.7037 0.6274 -4.31  <0.0001 
 prop.ideo.diff   -0.0576 0.0630 -0.91  0.3606  
 prop.same.gender -0.2790 0.2364 -1.18  0.2379  
 prop.same.race    0.1777 0.1657  1.07  0.2837  
 gender=male      -0.1180 0.3408 -0.35  0.7291  
 race2=white      -0.0872 0.2943 -0.30  0.7671  
 sp               -0.0719 0.0742 -0.97  0.3324  
 p.offered         0.9496 0.0986  9.64  <0.0001 
 

>  log.v3<- lrm(vote ~  p.offered +  prop.ideo.diff + prop.same.gender + prop.same.race + gender + race2+ sp + sd.p.offered + prop.sp, data=treat.df.o, x=T, y=T)

>  log.v3.cl <- robcov(log.v3, treat.df.o$umg)

>  log.v3.cl
Frequencies of Missing Values Due to Each Variable
            vote        p.offered   prop.ideo.diff prop.same.gender   prop.same.race           gender            race2               sp     sd.p.offered          prop.sp 
            4700             4700                0                0                0                0                0                0             4700                0 

Logistic Regression Model
 
 lrm(formula = vote ~ p.offered + prop.ideo.diff + prop.same.gender + 
     prop.same.race + gender + race2 + sp + sd.p.offered + prop.sp, 
     data = treat.df.o, x = T, y = T)
 
 
                                Model Likelihood     Discrimination    Rank Discrim.    
                                   Ratio Test           Indexes           Indexes       
 Obs                   1300    LR chi2     728.73    R2       0.605    C       0.903    
  0                     400    d.f.             9    g        2.321    Dxy     0.806    
  1                     900    Pr(> chi2) <0.0001    gr      10.188    gamma   0.806    
 Cluster on  treat.df.o$umg                          gp       0.336    tau-a   0.344    
 Clusters                30                          Brier    0.099                     
 max |deriv|          1e-06                                                             
 
                  Coef    S.E.   Wald Z Pr(>|Z|)
 Intercept        -1.3518 0.7343 -1.84  0.0656  
 p.offered         0.8199 0.0900  9.11  <0.0001 
 prop.ideo.diff   -0.0482 0.0697 -0.69  0.4896  
 prop.same.gender -0.2172 0.2421 -0.90  0.3696  
 prop.same.race    0.1593 0.1677  0.95  0.3421  
 gender=male      -0.0850 0.3616 -0.24  0.8142  
 race2=white      -0.0221 0.3167 -0.07  0.9443  
 sp               -0.0695 0.0770 -0.90  0.3664  
 sd.p.offered     -0.3961 0.0669 -5.92  <0.0001 
 prop.sp          -0.0291 0.0510 -0.57  0.5685  
 

>  log.v4<- lrm(vote ~  p.offered +  prop.ideo.diff + prop.same.gender + prop.same.race + gender + race2+ sp + sd.p.offered*p.offered + prop.sp, data=treat.df.o, x=T, y=T)

>  log.v4.cl <- robcov(log.v4, treat.df.o$umg)

>  log.v4.cl
Frequencies of Missing Values Due to Each Variable
            vote        p.offered   prop.ideo.diff prop.same.gender   prop.same.race           gender            race2               sp     sd.p.offered          prop.sp 
            4700             4700                0                0                0                0                0                0             4700                0 

Logistic Regression Model
 
 lrm(formula = vote ~ p.offered + prop.ideo.diff + prop.same.gender + 
     prop.same.race + gender + race2 + sp + sd.p.offered * p.offered + 
     prop.sp, data = treat.df.o, x = T, y = T)
 
 
                                Model Likelihood     Discrimination    Rank Discrim.    
                                   Ratio Test           Indexes           Indexes       
 Obs                   1300    LR chi2     730.64    R2       0.606    C       0.903    
  0                     400    d.f.            10    g        2.290    Dxy     0.805    
  1                     900    Pr(> chi2) <0.0001    gr       9.875    gamma   0.806    
 Cluster on  treat.df.o$umg                          gp       0.339    tau-a   0.343    
 Clusters                30                          Brier    0.100                     
 max |deriv|          5e-06                                                             
 
                          Coef    S.E.   Wald Z Pr(>|Z|)
 Intercept                -2.2857 1.0648 -2.15  0.0318  
 p.offered                 1.0029 0.1496  6.70  <0.0001 
 prop.ideo.diff           -0.0469 0.0695 -0.67  0.4997  
 prop.same.gender         -0.2198 0.2379 -0.92  0.3556  
 prop.same.race            0.1523 0.1685  0.90  0.3661  
 gender=male              -0.0882 0.3579 -0.25  0.8052  
 race2=white              -0.0209 0.3194 -0.07  0.9478  
 sp                       -0.0709 0.0764 -0.93  0.3538  
 sd.p.offered             -0.1393 0.2098 -0.66  0.5067  
 prop.sp                  -0.0249 0.0510 -0.49  0.6260  
 p.offered * sd.p.offered -0.0494 0.0335 -1.47  0.1409  
 

>  log.v5<- lrm(vote ~  p.offered +  prop.ideo.diff + prop.same.gender + prop.same.race + gender + race2+ sp*sd.p.offered, data=treat.df.o, x=T, y=T)

>  log.v5.cl <- robcov(log.v5, treat.df.o$umg)

>  log.v5.cl
Frequencies of Missing Values Due to Each Variable
            vote        p.offered   prop.ideo.diff prop.same.gender   prop.same.race           gender            race2               sp     sd.p.offered 
            4700             4700                0                0                0                0                0                0             4700 

Logistic Regression Model
 
 lrm(formula = vote ~ p.offered + prop.ideo.diff + prop.same.gender + 
     prop.same.race + gender + race2 + sp * sd.p.offered, data = treat.df.o, 
     x = T, y = T)
 
 
                                Model Likelihood     Discrimination    Rank Discrim.    
                                   Ratio Test           Indexes           Indexes       
 Obs                   1300    LR chi2     736.46    R2       0.610    C       0.907    
  0                     400    d.f.             9    g        2.389    Dxy     0.814    
  1                     900    Pr(> chi2) <0.0001    gr      10.907    gamma   0.814    
 Cluster on  treat.df.o$umg                          gp       0.339    tau-a   0.347    
 Clusters                30                          Brier    0.098                     
 max |deriv|          2e-13                                                             
 
                   Coef    S.E.   Wald Z Pr(>|Z|)
 Intercept         -0.6008 0.8294 -0.72  0.4688  
 p.offered          0.8260 0.0882  9.37  <0.0001 
 prop.ideo.diff    -0.0461 0.0726 -0.64  0.5248  
 prop.same.gender  -0.2371 0.2453 -0.97  0.3337  
 prop.same.race     0.1404 0.1681  0.84  0.4036  
 gender=male       -0.0961 0.3607 -0.27  0.7898  
 race2=white       -0.0730 0.3204 -0.23  0.8199  
 sp                -0.2428 0.1185 -2.05  0.0405  
 sd.p.offered      -0.7806 0.1939 -4.03  <0.0001 
 sp * sd.p.offered  0.0783 0.0376  2.08  0.0373  
 

>  ################################################################################################## 
>  ### Correlations and regessions between standard devation of offers and self-placement - Page XXXXX
>  ################################################################################
>  
>  #Full sample
>  cor(mydf$sp, mydf$SD.props, use = "complete.obs")
[1] 0.009780156

>  #Treatment sample 
>  cor(treat.df$sp, treat.df$SD.props, use = "complete.obs")
[1] 0.03127939

>  #Proposer sample
>  treat.df.me<-subset(treat.df, prop_dummy==1)

>  cor(treat.df.me$sp, treat.df.me$SD.props,  use = "complete.obs")
[1] 0.03751968

>  ##### regression of SD.props on sp
>  summary(lm(SD.props~sp, mydf)) #full sample

Call:
lm(formula = SD.props ~ sp, data = mydf)

Residuals:
   Min     1Q Median     3Q    Max 
-2.186 -1.913 -1.025  1.872  7.656 

Coefficients:
            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  2.14835    0.10353   20.75   <2e-16 ***
sp           0.01058    0.02074    0.51     0.61    
---
Signif. codes:  0 *** 0.001 ** 0.01 * 0.05 . 0.1   1

Residual standard error: 2.056 on 2722 degrees of freedom
  (10380 observations deleted due to missingness)
Multiple R-squared:  9.565e-05,	Adjusted R-squared:  -0.0002717 
F-statistic: 0.2604 on 1 and 2722 DF,  p-value: 0.6099


>  summary (lm(SD.props~sp, treat.df)) #Treatment sample

Call:
lm(formula = SD.props ~ sp, data = treat.df)

Residuals:
    Min      1Q  Median      3Q     Max 
-2.2379 -1.8773 -0.9465  1.9001  7.7462 

Coefficients:
            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  2.00397    0.11992  16.711   <2e-16 ***
sp           0.03241    0.02346   1.381    0.167    
---
Signif. codes:  0 *** 0.001 ** 0.01 * 0.05 . 0.1   1

Residual standard error: 1.993 on 1948 degrees of freedom
  (7410 observations deleted due to missingness)
Multiple R-squared:  0.0009784,	Adjusted R-squared:  0.0004656 
F-statistic: 1.908 on 1 and 1948 DF,  p-value: 0.1674


>  summary (lm(SD.props~sp, base.df)) # Baseline sample

Call:
lm(formula = SD.props ~ sp, data = base.df)

Residuals:
   Min     1Q Median     3Q    Max 
-2.368 -2.021 -1.057  2.521  7.544 

Coefficients:
            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  2.46413    0.20553  11.989   <2e-16 ***
sp          -0.03864    0.04396  -0.879     0.38    
---
Signif. codes:  0 *** 0.001 ** 0.01 * 0.05 . 0.1   1

Residual standard error: 2.204 on 772 degrees of freedom
  (2970 observations deleted due to missingness)
Multiple R-squared:  0.0009998,	Adjusted R-squared:  -0.0002942 
F-statistic: 0.7727 on 1 and 772 DF,  p-value: 0.3797

There were 15 warnings (use warnings() to see them)
